{
  "version": 3,
  "sources": ["../../@heroui/use-aria-button/dist/index.mjs"],
  "sourcesContent": ["// src/index.ts\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { usePress } from \"@react-aria/interactions\";\nfunction useAriaButton(props, ref) {\n  let {\n    elementType = \"button\",\n    isDisabled,\n    onPress,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    onPressChange,\n    // @ts-ignore - undocumented\n    preventFocusOnPress,\n    // @ts-ignore - undocumented\n    allowFocusWhenDisabled,\n    onClick,\n    href,\n    target,\n    rel,\n    type = \"button\",\n    allowTextSelectionOnPress\n  } = props;\n  let additionalProps;\n  if (elementType === \"button\") {\n    additionalProps = {\n      type,\n      disabled: isDisabled\n    };\n  } else {\n    additionalProps = {\n      role: \"button\",\n      href: elementType === \"a\" && !isDisabled ? href : void 0,\n      target: elementType === \"a\" ? target : void 0,\n      type: elementType === \"input\" ? type : void 0,\n      disabled: elementType === \"input\" ? isDisabled : void 0,\n      \"aria-disabled\": !isDisabled || elementType === \"input\" ? void 0 : isDisabled,\n      rel: elementType === \"a\" ? rel : void 0\n    };\n  }\n  let { pressProps, isPressed } = usePress({\n    onClick,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    onPressChange,\n    onPress,\n    isDisabled,\n    preventFocusOnPress,\n    allowTextSelectionOnPress,\n    ref\n  });\n  let { focusableProps } = useFocusable(props, ref);\n  if (allowFocusWhenDisabled) {\n    focusableProps.tabIndex = isDisabled ? -1 : focusableProps.tabIndex;\n  }\n  let buttonProps = mergeProps(\n    focusableProps,\n    pressProps,\n    filterDOMProps(props, { labelable: true })\n  );\n  return {\n    isPressed,\n    // Used to indicate press state for visual\n    buttonProps: mergeProps(additionalProps, buttonProps, {\n      \"aria-haspopup\": props[\"aria-haspopup\"],\n      \"aria-expanded\": props[\"aria-expanded\"],\n      \"aria-controls\": props[\"aria-controls\"],\n      \"aria-pressed\": props[\"aria-pressed\"],\n      \"aria-current\": props[\"aria-current\"]\n    })\n  };\n}\nexport {\n  useAriaButton\n};\n"],
  "mappings": ";;;;;;;;AAIA,SAAS,cAAc,OAAO,KAAK;AACjC,MAAI;AAAA,IACF,cAAc;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO;AAAA,IACP;AAAA,EACF,IAAI;AACJ,MAAI;AACJ,MAAI,gBAAgB,UAAU;AAC5B,sBAAkB;AAAA,MAChB;AAAA,MACA,UAAU;AAAA,IACZ;AAAA,EACF,OAAO;AACL,sBAAkB;AAAA,MAChB,MAAM;AAAA,MACN,MAAM,gBAAgB,OAAO,CAAC,aAAa,OAAO;AAAA,MAClD,QAAQ,gBAAgB,MAAM,SAAS;AAAA,MACvC,MAAM,gBAAgB,UAAU,OAAO;AAAA,MACvC,UAAU,gBAAgB,UAAU,aAAa;AAAA,MACjD,iBAAiB,CAAC,cAAc,gBAAgB,UAAU,SAAS;AAAA,MACnE,KAAK,gBAAgB,MAAM,MAAM;AAAA,IACnC;AAAA,EACF;AACA,MAAI,EAAE,YAAY,UAAU,IAAI,0CAAS;AAAA,IACvC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,MAAI,EAAE,eAAe,IAAI,0CAAa,OAAO,GAAG;AAChD,MAAI,wBAAwB;AAC1B,mBAAe,WAAW,aAAa,KAAK,eAAe;AAAA,EAC7D;AACA,MAAI,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,IACA,0CAAe,OAAO,EAAE,WAAW,KAAK,CAAC;AAAA,EAC3C;AACA,SAAO;AAAA,IACL;AAAA;AAAA,IAEA,aAAa,0CAAW,iBAAiB,aAAa;AAAA,MACpD,iBAAiB,MAAM,eAAe;AAAA,MACtC,iBAAiB,MAAM,eAAe;AAAA,MACtC,iBAAiB,MAAM,eAAe;AAAA,MACtC,gBAAgB,MAAM,cAAc;AAAA,MACpC,gBAAgB,MAAM,cAAc;AAAA,IACtC,CAAC;AAAA,EACH;AACF;",
  "names": []
}

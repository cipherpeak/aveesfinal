"use client";
import {
  badge,
  clsx,
  forwardRef,
  mapPropsVariants,
  objectToDeps,
  useProviderContext
} from "./chunk-XX5SJCLL.js";
import "./chunk-AWNCFKJZ.js";
import "./chunk-BTNRXTUH.js";
import "./chunk-U7P2NEEE.js";
import "./chunk-2XL62SD4.js";
import "./chunk-APP2P4WD.js";
import {
  require_jsx_runtime
} from "./chunk-HOLCHQKJ.js";
import {
  require_react
} from "./chunk-BQYK6RGN.js";
import {
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/@heroui/badge/dist/chunk-ESVUYDZQ.mjs
var import_react = __toESM(require_react(), 1);
function useBadge(originalProps) {
  var _a, _b;
  const globalContext = useProviderContext();
  const disableAnimation = (_b = (_a = originalProps == null ? void 0 : originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;
  const [props, variantProps] = mapPropsVariants(originalProps, badge.variantKeys);
  const { as, children, className, content, classNames, ...otherProps } = props;
  const Component = as || "span";
  const isOneChar = (0, import_react.useMemo)(
    () => {
      var _a2;
      return ((_a2 = String(content)) == null ? void 0 : _a2.length) === 1 || (originalProps == null ? void 0 : originalProps.isOneChar);
    },
    [content, originalProps == null ? void 0 : originalProps.isOneChar]
  );
  const isDot = (0, import_react.useMemo)(() => {
    var _a2;
    return ((_a2 = String(content)) == null ? void 0 : _a2.length) === 0;
  }, [content]);
  const baseStyles = clsx(classNames == null ? void 0 : classNames.badge, className);
  const slots = (0, import_react.useMemo)(
    () => badge({
      ...variantProps,
      showOutline: !!(originalProps == null ? void 0 : originalProps.disableOutline) ? !(originalProps == null ? void 0 : originalProps.disableOutline) : originalProps == null ? void 0 : originalProps.showOutline,
      isOneChar,
      isDot
    }),
    [objectToDeps(variantProps), isOneChar, isDot]
  );
  const getBadgeProps = () => {
    return {
      className: slots.badge({ class: baseStyles }),
      "data-invisible": originalProps.isInvisible,
      ...otherProps
    };
  };
  return {
    Component,
    children,
    content,
    slots,
    classNames,
    disableAnimation,
    isInvisible: originalProps == null ? void 0 : originalProps.isInvisible,
    getBadgeProps
  };
}

// node_modules/@heroui/badge/dist/chunk-TLGNVWIG.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var Badge = forwardRef((props, ref) => {
  const { Component, children, content, slots, classNames, getBadgeProps } = useBadge({
    ...props
  });
  return (0, import_jsx_runtime.jsxs)("div", { className: slots.base({ class: classNames == null ? void 0 : classNames.base }), children: [
    children,
    (0, import_jsx_runtime.jsx)(Component, { ref, ...getBadgeProps(), children: content })
  ] });
});
Badge.displayName = "HeroUI.Badge";
var badge_default = Badge;
export {
  badge_default as Badge,
  useBadge
};
//# sourceMappingURL=@heroui_badge.js.map

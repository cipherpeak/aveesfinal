{
  "version": 3,
  "sources": ["../../@heroui/select/dist/chunk-XAZU4BXN.mjs", "../../@heroui/use-aria-multiselect/dist/chunk-74XVDT4G.mjs", "../../@react-stately/list/dist/packages/@react-stately/list/src/ListCollection.ts", "../../@react-stately/selection/dist/packages/@react-stately/selection/src/Selection.ts", "../../@react-stately/selection/dist/packages/@react-stately/selection/src/useMultipleSelectionState.ts", "../../@react-stately/selection/dist/packages/@react-stately/selection/src/SelectionManager.ts", "../../@react-stately/list/dist/packages/@react-stately/list/src/useListState.ts", "../../@react-stately/menu/dist/packages/@react-stately/menu/src/useMenuTriggerState.ts", "../../@heroui/use-aria-multiselect/dist/chunk-FHVPTEOP.mjs", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/ar-AE.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/bg-BG.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/cs-CZ.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/da-DK.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/de-DE.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/el-GR.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/en-US.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/es-ES.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/et-EE.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/fi-FI.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/fr-FR.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/he-IL.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/hr-HR.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/hu-HU.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/it-IT.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/ja-JP.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/ko-KR.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/lt-LT.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/lv-LV.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/nb-NO.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/nl-NL.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/pl-PL.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/pt-BR.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/pt-PT.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/ro-RO.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/ru-RU.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/sk-SK.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/sl-SI.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/sr-SP.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/sv-SE.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/tr-TR.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/uk-UA.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/zh-CN.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/zh-TW.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/src/%2A.js", "../../@react-aria/menu/dist/packages/@react-aria/menu/src/useMenuTrigger.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/utils.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/useTypeSelect.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/useSelectableCollection.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/useSelectableItem.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/DOMLayoutDelegate.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/ListKeyboardDelegate.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/useSelectableList.ts", "../../@react-aria/menu/dist/packages/@react-aria/menu/src/useSafelyMouseToSubmenu.ts", "../../@heroui/use-aria-multiselect/dist/chunk-RLX3CPDX.mjs", "../../@heroui/use-form-reset/dist/index.mjs", "../../@heroui/select/dist/chunk-EYCVA6TZ.mjs", "../../@heroui/listbox/dist/chunk-BJFJ4DRR.mjs", "../../@heroui/listbox/dist/chunk-ANTZPR32.mjs", "../../@react-aria/listbox/dist/packages/@react-aria/listbox/src/utils.ts", "../../@react-aria/listbox/dist/packages/@react-aria/listbox/src/useListBox.ts", "../../@react-aria/listbox/dist/packages/@react-aria/listbox/src/useOption.ts", "../../@react-aria/listbox/dist/packages/@react-aria/listbox/src/useListBoxSection.ts", "../../@heroui/listbox/dist/chunk-MZOWMNSQ.mjs", "../../@heroui/listbox/dist/chunk-65JTUBIW.mjs", "../../@heroui/listbox/dist/chunk-RMKUVOBG.mjs", "../../@heroui/use-is-mobile/dist/index.mjs", "../../@heroui/listbox/dist/chunk-4QJLEUWX.mjs", "../../@heroui/listbox/dist/chunk-BXSPTCK3.mjs", "../../@heroui/divider/dist/chunk-D2EG5U3Q.mjs", "../../@heroui/divider/dist/chunk-TS7K35D7.mjs", "../../@heroui/divider/dist/chunk-IHO36JMK.mjs", "../../@heroui/listbox/dist/chunk-7UIGGLV2.mjs", "../../@tanstack/virtual-core/src/utils.ts", "../../@tanstack/virtual-core/src/index.ts", "../../@tanstack/react-virtual/src/index.tsx", "../../@heroui/listbox/dist/chunk-CLI57HS2.mjs", "../../@heroui/select/dist/chunk-Y2AYO5NJ.mjs", "../../@heroui/use-data-scroll-overflow/dist/index.mjs", "../../@heroui/scroll-shadow/dist/chunk-XKHEX3UH.mjs", "../../@heroui/scroll-shadow/dist/chunk-4EXC76WE.mjs"],
  "sourcesContent": ["\"use client\";\n\n// src/use-select.ts\nimport { mapPropsVariants, useLabelPlacement, useProviderContext } from \"@heroui/system\";\nimport { select } from \"@heroui/theme\";\nimport { useDOMRef, filterDOMProps } from \"@heroui/react-utils\";\nimport { useMemo, useCallback, useRef, useEffect } from \"react\";\nimport { useAriaButton } from \"@heroui/use-aria-button\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { clsx, dataAttr, objectToDeps, mergeProps } from \"@heroui/shared-utils\";\nimport { useHover, usePress } from \"@react-aria/interactions\";\nimport { useMultiSelect, useMultiSelectState } from \"@heroui/use-aria-multiselect\";\nimport { useSafeLayoutEffect } from \"@heroui/use-safe-layout-effect\";\nimport { FormContext, useSlottedContext } from \"@heroui/form\";\nimport { usePreventScroll } from \"@react-aria/overlays\";\nvar selectData = /* @__PURE__ */ new WeakMap();\nfunction useSelect(originalProps) {\n  var _a, _b, _c, _d, _e, _f;\n  const globalContext = useProviderContext();\n  const { validationBehavior: formValidationBehavior } = useSlottedContext(FormContext) || {};\n  const [props, variantProps] = mapPropsVariants(originalProps, select.variantKeys);\n  const disableAnimation = (_b = (_a = originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const {\n    ref,\n    as,\n    label,\n    name,\n    isLoading,\n    selectorIcon,\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    startContent,\n    endContent,\n    description,\n    renderValue,\n    onSelectionChange,\n    placeholder,\n    isVirtualized,\n    itemHeight = 36,\n    maxListboxHeight = 256,\n    children,\n    disallowEmptySelection = false,\n    selectionMode = \"single\",\n    spinnerRef,\n    scrollRef: scrollRefProp,\n    popoverProps = {},\n    scrollShadowProps = {},\n    listboxProps = {},\n    spinnerProps = {},\n    validationState,\n    onChange,\n    onClose,\n    className,\n    classNames,\n    validationBehavior = (_c = formValidationBehavior != null ? formValidationBehavior : globalContext == null ? void 0 : globalContext.validationBehavior) != null ? _c : \"native\",\n    hideEmptyContent = false,\n    onClear,\n    ...otherProps\n  } = props;\n  const scrollShadowRef = useDOMRef(scrollRefProp);\n  const slotsProps = {\n    popoverProps: mergeProps(\n      {\n        placement: \"bottom\",\n        triggerScaleOnOpen: false,\n        offset: 5,\n        disableAnimation\n      },\n      popoverProps\n    ),\n    scrollShadowProps: mergeProps(\n      {\n        ref: scrollShadowRef,\n        isEnabled: (_d = originalProps.showScrollIndicators) != null ? _d : true,\n        hideScrollBar: true,\n        offset: 15\n      },\n      scrollShadowProps\n    ),\n    listboxProps: mergeProps(\n      {\n        disableAnimation\n      },\n      listboxProps\n    )\n  };\n  const Component = as || \"button\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const triggerRef = useRef(null);\n  const listBoxRef = useRef(null);\n  const popoverRef = useRef(null);\n  let state = useMultiSelectState({\n    ...props,\n    isOpen,\n    selectionMode,\n    disallowEmptySelection,\n    validationBehavior,\n    children,\n    isRequired: originalProps.isRequired,\n    isDisabled: originalProps.isDisabled,\n    isInvalid: originalProps.isInvalid,\n    defaultOpen,\n    hideEmptyContent,\n    onOpenChange: (open) => {\n      onOpenChange == null ? void 0 : onOpenChange(open);\n      if (!open) {\n        onClose == null ? void 0 : onClose();\n      }\n    },\n    onSelectionChange: (keys) => {\n      onSelectionChange == null ? void 0 : onSelectionChange(keys);\n      if (onChange && typeof onChange === \"function\") {\n        onChange({\n          target: {\n            ...domRef.current && {\n              ...domRef.current,\n              name: domRef.current.name\n            },\n            value: Array.from(keys).join(\",\")\n          }\n        });\n      }\n      state.commitValidation();\n    }\n  });\n  state = {\n    ...state,\n    ...originalProps.isDisabled && {\n      disabledKeys: /* @__PURE__ */ new Set([...state.collection.getKeys()])\n    }\n  };\n  useSafeLayoutEffect(() => {\n    var _a2;\n    if (!((_a2 = domRef.current) == null ? void 0 : _a2.value)) return;\n    state.setSelectedKeys(/* @__PURE__ */ new Set([...state.selectedKeys, domRef.current.value]));\n  }, [domRef.current]);\n  const {\n    labelProps,\n    triggerProps,\n    valueProps,\n    menuProps,\n    descriptionProps,\n    errorMessageProps,\n    isInvalid: isAriaInvalid,\n    validationErrors,\n    validationDetails\n  } = useMultiSelect(\n    { ...props, disallowEmptySelection, isDisabled: originalProps.isDisabled },\n    state,\n    triggerRef\n  );\n  const handleClear = useCallback(() => {\n    var _a2;\n    state.setSelectedKeys(/* @__PURE__ */ new Set([]));\n    onClear == null ? void 0 : onClear();\n    (_a2 = triggerRef.current) == null ? void 0 : _a2.focus();\n  }, [onClear, state]);\n  const { pressProps: clearPressProps } = usePress({\n    isDisabled: !!(originalProps == null ? void 0 : originalProps.isDisabled),\n    onPress: handleClear\n  });\n  const isInvalid = originalProps.isInvalid || validationState === \"invalid\" || isAriaInvalid;\n  const { isPressed, buttonProps } = useAriaButton(triggerProps, triggerRef);\n  const { focusProps, isFocused, isFocusVisible } = useFocusRing();\n  const { focusProps: clearFocusProps, isFocusVisible: isClearButtonFocusVisible } = useFocusRing();\n  const { isHovered, hoverProps } = useHover({ isDisabled: originalProps.isDisabled });\n  const labelPlacement = useLabelPlacement({\n    labelPlacement: originalProps.labelPlacement,\n    label\n  });\n  const hasPlaceholder = !!placeholder;\n  const shouldLabelBeOutside = labelPlacement === \"outside-left\" || labelPlacement === \"outside\";\n  const shouldLabelBeInside = labelPlacement === \"inside\";\n  const isOutsideLeft = labelPlacement === \"outside-left\";\n  const isClearable = originalProps.isClearable;\n  const isFilled = state.isOpen || hasPlaceholder || !!((_e = state.selectedItems) == null ? void 0 : _e.length) || !!startContent || !!endContent || !!originalProps.isMultiline;\n  const hasValue = !!((_f = state.selectedItems) == null ? void 0 : _f.length);\n  const hasLabel = !!label;\n  const hasLabelOutside = hasLabel && (isOutsideLeft || shouldLabelBeOutside && hasPlaceholder);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const slots = useMemo(\n    () => select({\n      ...variantProps,\n      isInvalid,\n      isClearable,\n      labelPlacement,\n      disableAnimation\n    }),\n    [objectToDeps(variantProps), isInvalid, labelPlacement, disableAnimation]\n  );\n  usePreventScroll({\n    isDisabled: !state.isOpen\n  });\n  const errorMessage = typeof props.errorMessage === \"function\" ? props.errorMessage({ isInvalid, validationErrors, validationDetails }) : props.errorMessage || (validationErrors == null ? void 0 : validationErrors.join(\" \"));\n  const hasHelper = !!description || !!errorMessage;\n  const hasEndContent = !!endContent;\n  useEffect(() => {\n    if (state.isOpen && popoverRef.current && triggerRef.current) {\n      let selectRect = triggerRef.current.getBoundingClientRect();\n      let popover = popoverRef.current;\n      popover.style.width = selectRect.width + \"px\";\n    }\n  }, [state.isOpen]);\n  const getBaseProps = useCallback(\n    (props2 = {}) => ({\n      \"data-slot\": \"base\",\n      \"data-filled\": dataAttr(isFilled),\n      \"data-has-value\": dataAttr(hasValue),\n      \"data-has-label\": dataAttr(hasLabel),\n      \"data-has-helper\": dataAttr(hasHelper),\n      \"data-has-end-content\": dataAttr(hasEndContent),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-has-label-outside\": dataAttr(hasLabelOutside),\n      className: slots.base({\n        class: clsx(baseStyles, props2.className)\n      }),\n      ...props2\n    }),\n    [slots, hasHelper, hasValue, hasLabel, hasLabelOutside, isFilled, baseStyles]\n  );\n  const getTriggerProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ref: triggerRef,\n        \"data-slot\": \"trigger\",\n        \"data-open\": dataAttr(state.isOpen),\n        \"data-disabled\": dataAttr(originalProps == null ? void 0 : originalProps.isDisabled),\n        \"data-focus\": dataAttr(isFocused),\n        \"data-pressed\": dataAttr(isPressed),\n        \"data-focus-visible\": dataAttr(isFocusVisible),\n        \"data-hover\": dataAttr(isHovered),\n        className: slots.trigger({ class: classNames == null ? void 0 : classNames.trigger }),\n        ...mergeProps(\n          buttonProps,\n          focusProps,\n          hoverProps,\n          filterDOMProps(otherProps, {\n            enabled: shouldFilterDOMProps\n          }),\n          filterDOMProps(props2)\n        )\n      };\n    },\n    [\n      slots,\n      triggerRef,\n      state.isOpen,\n      classNames == null ? void 0 : classNames.trigger,\n      originalProps == null ? void 0 : originalProps.isDisabled,\n      isFocused,\n      isPressed,\n      isFocusVisible,\n      isHovered,\n      buttonProps,\n      focusProps,\n      hoverProps,\n      otherProps,\n      shouldFilterDOMProps\n    ]\n  );\n  const getHiddenSelectProps = useCallback(\n    (props2 = {}) => ({\n      state,\n      triggerRef,\n      selectRef: domRef,\n      selectionMode,\n      label: originalProps == null ? void 0 : originalProps.label,\n      name: originalProps == null ? void 0 : originalProps.name,\n      isRequired: originalProps == null ? void 0 : originalProps.isRequired,\n      autoComplete: originalProps == null ? void 0 : originalProps.autoComplete,\n      isDisabled: originalProps == null ? void 0 : originalProps.isDisabled,\n      form: originalProps == null ? void 0 : originalProps.form,\n      onChange,\n      ...props2\n    }),\n    [\n      state,\n      selectionMode,\n      originalProps == null ? void 0 : originalProps.label,\n      originalProps == null ? void 0 : originalProps.autoComplete,\n      originalProps == null ? void 0 : originalProps.name,\n      originalProps == null ? void 0 : originalProps.isDisabled,\n      triggerRef\n    ]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}) => ({\n      \"data-slot\": \"label\",\n      className: slots.label({\n        class: clsx(classNames == null ? void 0 : classNames.label, props2.className)\n      }),\n      ...labelProps,\n      ...props2\n    }),\n    [slots, classNames == null ? void 0 : classNames.label, labelProps]\n  );\n  const getValueProps = useCallback(\n    (props2 = {}) => ({\n      \"data-slot\": \"value\",\n      className: slots.value({\n        class: clsx(classNames == null ? void 0 : classNames.value, props2.className)\n      }),\n      ...valueProps,\n      ...props2\n    }),\n    [slots, classNames == null ? void 0 : classNames.value, valueProps]\n  );\n  const getListboxWrapperProps = useCallback(\n    (props2 = {}) => ({\n      \"data-slot\": \"listboxWrapper\",\n      className: slots.listboxWrapper({\n        class: clsx(classNames == null ? void 0 : classNames.listboxWrapper, props2 == null ? void 0 : props2.className)\n      }),\n      style: {\n        maxHeight: maxListboxHeight != null ? maxListboxHeight : 256,\n        ...props2.style\n      },\n      ...mergeProps(slotsProps.scrollShadowProps, props2)\n    }),\n    [\n      slots.listboxWrapper,\n      classNames == null ? void 0 : classNames.listboxWrapper,\n      slotsProps.scrollShadowProps,\n      maxListboxHeight\n    ]\n  );\n  const getListboxProps = (props2 = {}) => {\n    const shouldVirtualize = isVirtualized != null ? isVirtualized : state.collection.size > 50;\n    return {\n      state,\n      ref: listBoxRef,\n      isVirtualized: shouldVirtualize,\n      virtualization: shouldVirtualize ? {\n        maxListboxHeight,\n        itemHeight\n      } : void 0,\n      \"data-slot\": \"listbox\",\n      className: slots.listbox({\n        class: clsx(classNames == null ? void 0 : classNames.listbox, props2 == null ? void 0 : props2.className)\n      }),\n      scrollShadowProps: slotsProps.scrollShadowProps,\n      ...mergeProps(slotsProps.listboxProps, props2, menuProps)\n    };\n  };\n  const getPopoverProps = useCallback(\n    (props2 = {}) => {\n      var _a2, _b2;\n      const popoverProps2 = mergeProps(slotsProps.popoverProps, props2);\n      return {\n        state,\n        triggerRef,\n        ref: popoverRef,\n        \"data-slot\": \"popover\",\n        scrollRef: listBoxRef,\n        triggerType: \"listbox\",\n        classNames: {\n          content: slots.popoverContent({\n            class: clsx(classNames == null ? void 0 : classNames.popoverContent, props2.className)\n          })\n        },\n        ...popoverProps2,\n        offset: state.selectedItems && state.selectedItems.length > 0 ? (\n          // forces the popover to update its position when the selected items change\n          state.selectedItems.length * 1e-8 + (((_a2 = slotsProps.popoverProps) == null ? void 0 : _a2.offset) || 0)\n        ) : (_b2 = slotsProps.popoverProps) == null ? void 0 : _b2.offset\n      };\n    },\n    [\n      slots,\n      classNames == null ? void 0 : classNames.popoverContent,\n      slotsProps.popoverProps,\n      triggerRef,\n      state,\n      state.selectedItems\n    ]\n  );\n  const getSelectorIconProps = useCallback(\n    () => ({\n      \"data-slot\": \"selectorIcon\",\n      \"aria-hidden\": dataAttr(true),\n      \"data-open\": dataAttr(state.isOpen),\n      className: slots.selectorIcon({ class: classNames == null ? void 0 : classNames.selectorIcon })\n    }),\n    [slots, classNames == null ? void 0 : classNames.selectorIcon, state.isOpen]\n  );\n  const getInnerWrapperProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        \"data-slot\": \"innerWrapper\",\n        className: slots.innerWrapper({\n          class: clsx(classNames == null ? void 0 : classNames.innerWrapper, props2 == null ? void 0 : props2.className)\n        })\n      };\n    },\n    [slots, classNames == null ? void 0 : classNames.innerWrapper]\n  );\n  const getHelperWrapperProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        \"data-slot\": \"helperWrapper\",\n        className: slots.helperWrapper({\n          class: clsx(classNames == null ? void 0 : classNames.helperWrapper, props2 == null ? void 0 : props2.className)\n        })\n      };\n    },\n    [slots, classNames == null ? void 0 : classNames.helperWrapper]\n  );\n  const getDescriptionProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        ...descriptionProps,\n        \"data-slot\": \"description\",\n        className: slots.description({ class: clsx(classNames == null ? void 0 : classNames.description, props2 == null ? void 0 : props2.className) })\n      };\n    },\n    [slots, classNames == null ? void 0 : classNames.description]\n  );\n  const getMainWrapperProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        \"data-slot\": \"mainWrapper\",\n        className: slots.mainWrapper({\n          class: clsx(classNames == null ? void 0 : classNames.mainWrapper, props2 == null ? void 0 : props2.className)\n        })\n      };\n    },\n    [slots, classNames == null ? void 0 : classNames.mainWrapper]\n  );\n  const getEndWrapperProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        \"data-slot\": \"end-wrapper\",\n        className: slots.endWrapper({\n          class: clsx(classNames == null ? void 0 : classNames.endWrapper, props2 == null ? void 0 : props2.className)\n        })\n      };\n    },\n    [slots, classNames == null ? void 0 : classNames.endWrapper]\n  );\n  const getEndContentProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        \"data-slot\": \"end-content\",\n        className: slots.endContent({\n          class: clsx(classNames == null ? void 0 : classNames.endContent, props2 == null ? void 0 : props2.className)\n        })\n      };\n    },\n    [slots, classNames == null ? void 0 : classNames.endContent]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        ...errorMessageProps,\n        \"data-slot\": \"error-message\",\n        className: slots.errorMessage({ class: clsx(classNames == null ? void 0 : classNames.errorMessage, props2 == null ? void 0 : props2.className) })\n      };\n    },\n    [slots, errorMessageProps, classNames == null ? void 0 : classNames.errorMessage]\n  );\n  const getSpinnerProps = useCallback(\n    (props2 = {}) => {\n      return {\n        \"aria-hidden\": dataAttr(true),\n        \"data-slot\": \"spinner\",\n        color: \"current\",\n        size: \"sm\",\n        ...spinnerProps,\n        ...props2,\n        ref: spinnerRef,\n        className: slots.spinner({ class: clsx(classNames == null ? void 0 : classNames.spinner, props2 == null ? void 0 : props2.className) })\n      };\n    },\n    [slots, spinnerRef, spinnerProps, classNames == null ? void 0 : classNames.spinner]\n  );\n  const getClearButtonProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-label\": \"clear selection\",\n        \"data-slot\": \"clear-button\",\n        \"data-focus-visible\": dataAttr(isClearButtonFocusVisible),\n        className: slots.clearButton({ class: clsx(classNames == null ? void 0 : classNames.clearButton, props2 == null ? void 0 : props2.className) }),\n        ...mergeProps(clearPressProps, clearFocusProps)\n      };\n    },\n    [slots, isClearButtonFocusVisible, clearPressProps, clearFocusProps, classNames == null ? void 0 : classNames.clearButton]\n  );\n  selectData.set(state, {\n    isDisabled: originalProps == null ? void 0 : originalProps.isDisabled,\n    isRequired: originalProps == null ? void 0 : originalProps.isRequired,\n    name: originalProps == null ? void 0 : originalProps.name,\n    isInvalid,\n    validationBehavior\n  });\n  return {\n    Component,\n    domRef,\n    state,\n    label,\n    name,\n    triggerRef,\n    isLoading,\n    placeholder,\n    startContent,\n    endContent,\n    description,\n    selectorIcon,\n    hasHelper,\n    labelPlacement,\n    hasPlaceholder,\n    renderValue,\n    selectionMode,\n    disableAnimation,\n    isOutsideLeft,\n    shouldLabelBeOutside,\n    shouldLabelBeInside,\n    isInvalid,\n    errorMessage,\n    isClearable,\n    getClearButtonProps,\n    getBaseProps,\n    getTriggerProps,\n    getLabelProps,\n    getValueProps,\n    getListboxProps,\n    getPopoverProps,\n    getSpinnerProps,\n    getMainWrapperProps,\n    getListboxWrapperProps,\n    getHiddenSelectProps,\n    getInnerWrapperProps,\n    getHelperWrapperProps,\n    getDescriptionProps,\n    getErrorMessageProps,\n    getSelectorIconProps,\n    getEndWrapperProps,\n    getEndContentProps\n  };\n}\n\nexport {\n  selectData,\n  useSelect\n};\n", "// src/use-multiselect-list-state.ts\nimport { useMemo } from \"react\";\nimport { useListState } from \"@react-stately/list\";\nfunction useMultiSelectListState(props) {\n  const {\n    collection,\n    disabledKeys,\n    selectionManager,\n    selectionManager: { setSelectedKeys, selectedKeys, selectionMode }\n  } = useListState(props);\n  const missingKeys = useMemo(() => {\n    if (!props.isLoading && selectedKeys.size !== 0) {\n      return Array.from(selectedKeys).filter(Boolean).filter((key) => !collection.getItem(key));\n    }\n    return [];\n  }, [selectedKeys, collection]);\n  const selectedItems = selectedKeys.size !== 0 ? Array.from(selectedKeys).map((key) => {\n    return collection.getItem(key);\n  }).filter(Boolean) : null;\n  if (missingKeys.length) {\n    console.warn(\n      `Select: Keys \"${missingKeys.join(\n        \", \"\n      )}\" passed to \"selectedKeys\" are not present in the collection.`\n    );\n  }\n  return {\n    collection,\n    disabledKeys,\n    selectionManager,\n    selectionMode,\n    selectedKeys,\n    setSelectedKeys: setSelectedKeys.bind(selectionManager),\n    selectedItems\n  };\n}\n\nexport {\n  useMultiSelectListState\n};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Key, Node} from '@react-types/shared';\n\nexport class ListCollection<T> implements Collection<Node<T>> {\n  private keyMap: Map<Key, Node<T>> = new Map();\n  private iterable: Iterable<Node<T>>;\n  private firstKey: Key | null = null;\n  private lastKey: Key | null = null;\n  private _size: number;\n\n  constructor(nodes: Iterable<Node<T>>) {\n    this.iterable = nodes;\n\n    let visit = (node: Node<T>) => {\n      this.keyMap.set(node.key, node);\n\n      if (node.childNodes && node.type === 'section') {\n        for (let child of node.childNodes) {\n          visit(child);\n        }\n      }\n    };\n\n    for (let node of nodes) {\n      visit(node);\n    }\n\n    let last: Node<T> | null = null;\n    let index = 0;\n    let size = 0;\n    for (let [key, node] of this.keyMap) {\n      if (last) {\n        last.nextKey = key;\n        node.prevKey = last.key;\n      } else {\n        this.firstKey = key;\n        node.prevKey = undefined;\n      }\n\n      if (node.type === 'item') {\n        node.index = index++;\n      }\n\n      // Only count sections and items when determining size so that\n      // loaders and separators in RAC/S2 don't influence the emptyState determination\n      if (node.type === 'section' || node.type === 'item') {\n        size++;\n      }\n\n      last = node;\n\n      // Set nextKey as undefined since this might be the last node\n      // If it isn't the last node, last.nextKey will properly set at start of new loop\n      last.nextKey = undefined;\n    }\n    this._size = size;\n    this.lastKey = last?.key ?? null;\n  }\n\n  *[Symbol.iterator](): IterableIterator<Node<T>> {\n    yield* this.iterable;\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  getKeys(): IterableIterator<Key> {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key): Key | null {\n    let node = this.keyMap.get(key);\n    return node ? node.prevKey ?? null : null;\n  }\n\n  getKeyAfter(key: Key): Key | null {\n    let node = this.keyMap.get(key);\n    return node ? node.nextKey ?? null : null;\n  }\n\n  getFirstKey(): Key | null {\n    return this.firstKey;\n  }\n\n  getLastKey(): Key | null {\n    return this.lastKey;\n  }\n\n  getItem(key: Key): Node<T> | null {\n    return this.keyMap.get(key) ?? null;\n  }\n\n  at(idx: number): Node<T> | null {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n\n  getChildren(key: Key): Iterable<Node<T>> {\n    let node = this.keyMap.get(key);\n    return node?.childNodes || [];\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from '@react-types/shared';\n\n/**\n * A Selection is a special Set containing Keys, which also has an anchor\n * and current selected key for use when range selecting.\n */\nexport class Selection extends Set<Key> {\n  anchorKey: Key | null;\n  currentKey: Key | null;\n\n  constructor(keys?: Iterable<Key> | Selection, anchorKey?: Key | null, currentKey?: Key | null) {\n    super(keys);\n    if (keys instanceof Selection) {\n      this.anchorKey = anchorKey ?? keys.anchorKey;\n      this.currentKey = currentKey ?? keys.currentKey;\n    } else {\n      this.anchorKey = anchorKey ?? null;\n      this.currentKey = currentKey ?? null;\n    }\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DisabledBehavior, FocusStrategy, Key, MultipleSelection, SelectionBehavior, SelectionMode} from '@react-types/shared';\nimport {MultipleSelectionState} from './types';\nimport {Selection} from './Selection';\nimport {useControlledState} from '@react-stately/utils';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nfunction equalSets(setA, setB) {\n  if (setA.size !== setB.size) {\n    return false;\n  }\n\n  for (let item of setA) {\n    if (!setB.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport interface MultipleSelectionStateProps extends MultipleSelection {\n  /** How multiple selection should behave in the collection. */\n  selectionBehavior?: SelectionBehavior,\n  /** Whether onSelectionChange should fire even if the new set of keys is the same as the last. */\n  allowDuplicateSelectionEvents?: boolean,\n  /** Whether `disabledKeys` applies to all interactions, or only selection. */\n  disabledBehavior?: DisabledBehavior\n}\n\n/**\n * Manages state for multiple selection and focus in a collection.\n */\nexport function useMultipleSelectionState(props: MultipleSelectionStateProps): MultipleSelectionState {\n  let {\n    selectionMode = 'none' as SelectionMode,\n    disallowEmptySelection = false,\n    allowDuplicateSelectionEvents,\n    selectionBehavior: selectionBehaviorProp = 'toggle',\n    disabledBehavior = 'all'\n  } = props;\n\n  // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n  // But we also need to trigger a react re-render. So, we have both a ref (sync) and state (async).\n  let isFocusedRef = useRef(false);\n  let [, setFocused] = useState(false);\n  let focusedKeyRef = useRef<Key | null>(null);\n  let childFocusStrategyRef = useRef<FocusStrategy | null>(null);\n  let [, setFocusedKey] = useState<Key | null>(null);\n  let selectedKeysProp = useMemo(() => convertSelection(props.selectedKeys), [props.selectedKeys]);\n  let defaultSelectedKeys = useMemo(() => convertSelection(props.defaultSelectedKeys, new Selection()), [props.defaultSelectedKeys]);\n  let [selectedKeys, setSelectedKeys] = useControlledState(\n    selectedKeysProp,\n    defaultSelectedKeys!,\n    props.onSelectionChange\n  );\n  let disabledKeysProp = useMemo(() =>\n    props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n  , [props.disabledKeys]);\n  let [selectionBehavior, setSelectionBehavior] = useState(selectionBehaviorProp);\n\n  // If the selectionBehavior prop is set to replace, but the current state is toggle (e.g. due to long press\n  // to enter selection mode on touch), and the selection becomes empty, reset the selection behavior.\n  if (selectionBehaviorProp === 'replace' && selectionBehavior === 'toggle' && typeof selectedKeys === 'object' && selectedKeys.size === 0) {\n    setSelectionBehavior('replace');\n  }\n\n  // If the selectionBehavior prop changes, update the state as well.\n  let lastSelectionBehavior = useRef(selectionBehaviorProp);\n  useEffect(() => {\n    if (selectionBehaviorProp !== lastSelectionBehavior.current) {\n      setSelectionBehavior(selectionBehaviorProp);\n      lastSelectionBehavior.current = selectionBehaviorProp;\n    }\n  }, [selectionBehaviorProp]);\n\n  return {\n    selectionMode,\n    disallowEmptySelection,\n    selectionBehavior,\n    setSelectionBehavior,\n    get isFocused() {\n      return isFocusedRef.current;\n    },\n    setFocused(f) {\n      isFocusedRef.current = f;\n      setFocused(f);\n    },\n    get focusedKey() {\n      return focusedKeyRef.current;\n    },\n    get childFocusStrategy() {\n      return childFocusStrategyRef.current;\n    },\n    setFocusedKey(k, childFocusStrategy = 'first') {\n      focusedKeyRef.current = k;\n      childFocusStrategyRef.current = childFocusStrategy;\n      setFocusedKey(k);\n    },\n    selectedKeys,\n    setSelectedKeys(keys) {\n      if (allowDuplicateSelectionEvents || !equalSets(keys, selectedKeys)) {\n        setSelectedKeys(keys);\n      }\n    },\n    disabledKeys: disabledKeysProp,\n    disabledBehavior\n  };\n}\n\nfunction convertSelection(selection: 'all' | Iterable<Key> | null | undefined, defaultValue?: Selection): 'all' | Set<Key> | undefined {\n  if (!selection) {\n    return defaultValue;\n  }\n\n  return selection === 'all'\n    ? 'all'\n    : new Selection(selection);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  Collection, DisabledBehavior,\n  FocusStrategy,\n  Selection as ISelection,\n  Key,\n  LayoutDelegate,\n  LongPressEvent,\n  Node,\n  PressEvent,\n  SelectionBehavior,\n  SelectionMode\n} from '@react-types/shared';\nimport {compareNodeOrder, getChildNodes, getFirstItem} from '@react-stately/collections';\nimport {MultipleSelectionManager, MultipleSelectionState} from './types';\nimport {Selection} from './Selection';\n\ninterface SelectionManagerOptions {\n  allowsCellSelection?: boolean,\n  layoutDelegate?: LayoutDelegate\n}\n\n/**\n * An interface for reading and updating multiple selection state.\n */\nexport class SelectionManager implements MultipleSelectionManager {\n  collection: Collection<Node<unknown>>;\n  private state: MultipleSelectionState;\n  private allowsCellSelection: boolean;\n  private _isSelectAll: boolean | null;\n  private layoutDelegate: LayoutDelegate | null;\n\n  constructor(collection: Collection<Node<unknown>>, state: MultipleSelectionState, options?: SelectionManagerOptions) {\n    this.collection = collection;\n    this.state = state;\n    this.allowsCellSelection = options?.allowsCellSelection ?? false;\n    this._isSelectAll = null;\n    this.layoutDelegate = options?.layoutDelegate || null;\n  }\n\n  /**\n   * The type of selection that is allowed in the collection.\n   */\n  get selectionMode(): SelectionMode {\n    return this.state.selectionMode;\n  }\n\n  /**\n   * Whether the collection allows empty selection.\n   */\n  get disallowEmptySelection(): boolean {\n    return this.state.disallowEmptySelection;\n  }\n\n  /**\n   * The selection behavior for the collection.\n   */\n  get selectionBehavior(): SelectionBehavior {\n    return this.state.selectionBehavior;\n  }\n\n  /**\n   * Sets the selection behavior for the collection.\n   */\n  setSelectionBehavior(selectionBehavior: SelectionBehavior): void {\n    this.state.setSelectionBehavior(selectionBehavior);\n  }\n\n  /**\n   * Whether the collection is currently focused.\n   */\n  get isFocused(): boolean {\n    return this.state.isFocused;\n  }\n\n  /**\n   * Sets whether the collection is focused.\n   */\n  setFocused(isFocused: boolean): void {\n    this.state.setFocused(isFocused);\n  }\n\n  /**\n   * The current focused key in the collection.\n   */\n  get focusedKey(): Key | null {\n    return this.state.focusedKey;\n  }\n\n  /** Whether the first or last child of the focused key should receive focus. */\n  get childFocusStrategy(): FocusStrategy | null {\n    return this.state.childFocusStrategy;\n  }\n\n  /**\n   * Sets the focused key.\n   */\n  setFocusedKey(key: Key | null, childFocusStrategy?: FocusStrategy): void {\n    if (key == null || this.collection.getItem(key)) {\n      this.state.setFocusedKey(key, childFocusStrategy);\n    }\n  }\n\n  /**\n   * The currently selected keys in the collection.\n   */\n  get selectedKeys(): Set<Key> {\n    return this.state.selectedKeys === 'all'\n      ? new Set(this.getSelectAllKeys())\n      : this.state.selectedKeys;\n  }\n\n  /**\n   * The raw selection value for the collection.\n   * Either 'all' for select all, or a set of keys.\n   */\n  get rawSelection(): ISelection {\n    return this.state.selectedKeys;\n  }\n\n  /**\n   * Returns whether a key is selected.\n   */\n  isSelected(key: Key): boolean {\n    if (this.state.selectionMode === 'none') {\n      return false;\n    }\n\n    let mappedKey = this.getKey(key);\n    if (mappedKey == null) {\n      return false;\n    }\n    return this.state.selectedKeys === 'all'\n      ? this.canSelectItem(mappedKey)\n      : this.state.selectedKeys.has(mappedKey);\n  }\n\n  /**\n   * Whether the selection is empty.\n   */\n  get isEmpty(): boolean {\n    return this.state.selectedKeys !== 'all' && this.state.selectedKeys.size === 0;\n  }\n\n  /**\n   * Whether all items in the collection are selected.\n   */\n  get isSelectAll(): boolean {\n    if (this.isEmpty) {\n      return false;\n    }\n\n    if (this.state.selectedKeys === 'all') {\n      return true;\n    }\n\n    if (this._isSelectAll != null) {\n      return this._isSelectAll;\n    }\n\n    let allKeys = this.getSelectAllKeys();\n    let selectedKeys = this.state.selectedKeys;\n    this._isSelectAll = allKeys.every(k => selectedKeys.has(k));\n    return this._isSelectAll;\n  }\n\n  get firstSelectedKey(): Key | null {\n    let first: Node<unknown> | null = null;\n    for (let key of this.state.selectedKeys) {\n      let item = this.collection.getItem(key);\n      if (!first || (item && compareNodeOrder(this.collection, item, first) < 0)) {\n        first = item;\n      }\n    }\n\n    return first?.key ?? null;\n  }\n\n  get lastSelectedKey(): Key | null {\n    let last: Node<unknown> | null = null;\n    for (let key of this.state.selectedKeys) {\n      let item = this.collection.getItem(key);\n      if (!last || (item && compareNodeOrder(this.collection, item, last) > 0)) {\n        last = item;\n      }\n    }\n\n    return last?.key ?? null;\n  }\n\n  get disabledKeys(): Set<Key> {\n    return this.state.disabledKeys;\n  }\n\n  get disabledBehavior(): DisabledBehavior {\n    return this.state.disabledBehavior;\n  }\n\n  /**\n   * Extends the selection to the given key.\n   */\n  extendSelection(toKey: Key): void {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single') {\n      this.replaceSelection(toKey);\n      return;\n    }\n\n    let mappedToKey = this.getKey(toKey);\n    if (mappedToKey == null) {\n      return;\n    }\n\n    let selection: Selection;\n\n    // Only select the one key if coming from a select all.\n    if (this.state.selectedKeys === 'all') {\n      selection = new Selection([mappedToKey], mappedToKey, mappedToKey);\n    } else {\n      let selectedKeys = this.state.selectedKeys as Selection;\n      let anchorKey = selectedKeys.anchorKey ?? mappedToKey;\n      selection = new Selection(selectedKeys, anchorKey, mappedToKey);\n      for (let key of this.getKeyRange(anchorKey, selectedKeys.currentKey ?? mappedToKey)) {\n        selection.delete(key);\n      }\n\n      for (let key of this.getKeyRange(mappedToKey, anchorKey)) {\n        if (this.canSelectItem(key)) {\n          selection.add(key);\n        }\n      }\n    }\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  private getKeyRange(from: Key, to: Key) {\n    let fromItem = this.collection.getItem(from);\n    let toItem = this.collection.getItem(to);\n    if (fromItem && toItem) {\n      if (compareNodeOrder(this.collection, fromItem, toItem) <= 0) {\n        return this.getKeyRangeInternal(from, to);\n      }\n\n      return this.getKeyRangeInternal(to, from);\n    }\n\n    return [];\n  }\n\n  private getKeyRangeInternal(from: Key, to: Key) {\n    if (this.layoutDelegate?.getKeyRange) {\n      return this.layoutDelegate.getKeyRange(from, to);\n    }\n\n    let keys: Key[] = [];\n    let key: Key | null = from;\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item && (item.type === 'item' || (item.type === 'cell' && this.allowsCellSelection))) {\n        keys.push(key);\n      }\n\n      if (key === to) {\n        return keys;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n\n    return [];\n  }\n\n  private getKey(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      // ¯\\_(ツ)_/¯\n      return key;\n    }\n\n    // If cell selection is allowed, just return the key.\n    if (item.type === 'cell' && this.allowsCellSelection) {\n      return key;\n    }\n\n    // Find a parent item to select\n    while (item && item.type !== 'item' && item.parentKey != null) {\n      item = this.collection.getItem(item.parentKey);\n    }\n\n    if (!item || item.type !== 'item') {\n      return null;\n    }\n\n    return item.key;\n  }\n\n  /**\n   * Toggles whether the given key is selected.\n   */\n  toggleSelection(key: Key): void {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single' && !this.isSelected(key)) {\n      this.replaceSelection(key);\n      return;\n    }\n\n    let mappedKey = this.getKey(key);\n    if (mappedKey == null) {\n      return;\n    }\n\n    let keys = new Selection(this.state.selectedKeys === 'all' ? this.getSelectAllKeys() : this.state.selectedKeys);\n    if (keys.has(mappedKey)) {\n      keys.delete(mappedKey);\n      // TODO: move anchor to last selected key...\n      // Does `current` need to move here too?\n    } else if (this.canSelectItem(mappedKey)) {\n      keys.add(mappedKey);\n      keys.anchorKey = mappedKey;\n      keys.currentKey = mappedKey;\n    }\n\n    if (this.disallowEmptySelection && keys.size === 0) {\n      return;\n    }\n\n    this.state.setSelectedKeys(keys);\n  }\n\n  /**\n   * Replaces the selection with only the given key.\n   */\n  replaceSelection(key: Key): void {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    let mappedKey = this.getKey(key);\n    if (mappedKey == null) {\n      return;\n    }\n\n    let selection = this.canSelectItem(mappedKey)\n      ? new Selection([mappedKey], mappedKey, mappedKey)\n      : new Selection();\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  /**\n   * Replaces the selection with the given keys.\n   */\n  setSelectedKeys(keys: Iterable<Key>): void {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    let selection = new Selection();\n    for (let key of keys) {\n      let mappedKey = this.getKey(key);\n      if (mappedKey != null) {\n        selection.add(mappedKey);\n        if (this.selectionMode === 'single') {\n          break;\n        }\n      }\n    }\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  private getSelectAllKeys() {\n    let keys: Key[] = [];\n    let addKeys = (key: Key | null) => {\n      while (key != null) {\n        if (this.canSelectItem(key)) {\n          let item = this.collection.getItem(key);\n          if (item?.type === 'item') {\n            keys.push(key);\n          }\n\n          // Add child keys. If cell selection is allowed, then include item children too.\n          if (item?.hasChildNodes && (this.allowsCellSelection || item.type !== 'item')) {\n            addKeys(getFirstItem(getChildNodes(item, this.collection))?.key ?? null);\n          }\n        }\n\n        key = this.collection.getKeyAfter(key);\n      }\n    };\n\n    addKeys(this.collection.getFirstKey());\n    return keys;\n  }\n\n  /**\n   * Selects all items in the collection.\n   */\n  selectAll(): void {\n    if (!this.isSelectAll && this.selectionMode === 'multiple') {\n      this.state.setSelectedKeys('all');\n    }\n  }\n\n  /**\n   * Removes all keys from the selection.\n   */\n  clearSelection(): void {\n    if (!this.disallowEmptySelection && (this.state.selectedKeys === 'all' || this.state.selectedKeys.size > 0)) {\n      this.state.setSelectedKeys(new Selection());\n    }\n  }\n\n  /**\n   * Toggles between select all and an empty selection.\n   */\n  toggleSelectAll(): void {\n    if (this.isSelectAll) {\n      this.clearSelection();\n    } else {\n      this.selectAll();\n    }\n  }\n\n  select(key: Key, e?: PressEvent | LongPressEvent | PointerEvent): void {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single') {\n      if (this.isSelected(key) && !this.disallowEmptySelection) {\n        this.toggleSelection(key);\n      } else {\n        this.replaceSelection(key);\n      }\n    } else if (this.selectionBehavior === 'toggle' || (e && (e.pointerType === 'touch' || e.pointerType === 'virtual'))) {\n      // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n      this.toggleSelection(key);\n    } else {\n      this.replaceSelection(key);\n    }\n  }\n\n  /**\n   * Returns whether the current selection is equal to the given selection.\n   */\n  isSelectionEqual(selection: Set<Key>): boolean {\n    if (selection === this.state.selectedKeys) {\n      return true;\n    }\n\n    // Check if the set of keys match.\n    let selectedKeys = this.selectedKeys;\n    if (selection.size !== selectedKeys.size) {\n      return false;\n    }\n\n    for (let key of selection) {\n      if (!selectedKeys.has(key)) {\n        return false;\n      }\n    }\n\n    for (let key of selectedKeys) {\n      if (!selection.has(key)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  canSelectItem(key: Key): boolean {\n    if (this.state.selectionMode === 'none' || this.state.disabledKeys.has(key)) {\n      return false;\n    }\n\n    let item = this.collection.getItem(key);\n    if (!item || item?.props?.isDisabled || (item.type === 'cell' && !this.allowsCellSelection)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  isDisabled(key: Key): boolean {\n    return this.state.disabledBehavior === 'all' && (this.state.disabledKeys.has(key) || !!this.collection.getItem(key)?.props?.isDisabled);\n  }\n\n  isLink(key: Key): boolean {\n    return !!this.collection.getItem(key)?.props?.href;\n  }\n\n  getItemProps(key: Key): any {\n    return this.collection.getItem(key)?.props;\n  }\n\n  withCollection(collection: Collection<Node<unknown>>): SelectionManager {\n    return new SelectionManager(collection, this.state, {\n      allowsCellSelection: this.allowsCellSelection,\n      layoutDelegate: this.layoutDelegate || undefined\n    });\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionStateBase, Key, LayoutDelegate, Node} from '@react-types/shared';\nimport {ListCollection} from './ListCollection';\nimport {MultipleSelectionStateProps, SelectionManager, useMultipleSelectionState} from '@react-stately/selection';\nimport {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useCollection} from '@react-stately/collections';\n\nexport interface ListProps<T> extends CollectionStateBase<T>, MultipleSelectionStateProps {\n  /** Filter function to generate a filtered list of nodes. */\n  filter?: (nodes: Iterable<Node<T>>) => Iterable<Node<T>>,\n  /** @private */\n  suppressTextValueWarning?: boolean,\n  /**\n   * A delegate object that provides layout information for items in the collection.\n   * This can be used to override the behavior of shift selection.\n   */\n  layoutDelegate?: LayoutDelegate\n}\n\nexport interface ListState<T> {\n  /** A collection of items in the list. */\n  collection: Collection<Node<T>>,\n\n  /** A set of items that are disabled. */\n  disabledKeys: Set<Key>,\n\n  /** A selection manager to read and update multiple selection state. */\n  selectionManager: SelectionManager\n}\n\n/**\n * Provides state management for list-like components. Handles building a collection\n * of items from props, and manages multiple selection state.\n */\nexport function useListState<T extends object>(props: ListProps<T>): ListState<T>  {\n  let {filter, layoutDelegate} = props;\n\n  let selectionState = useMultipleSelectionState(props);\n  let disabledKeys = useMemo(() =>\n    props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n  , [props.disabledKeys]);\n\n  let factory = useCallback(nodes => filter ? new ListCollection(filter(nodes)) : new ListCollection(nodes as Iterable<Node<T>>), [filter]);\n  let context = useMemo(() => ({suppressTextValueWarning: props.suppressTextValueWarning}), [props.suppressTextValueWarning]);\n\n  let collection = useCollection(props, factory, context);\n\n  let selectionManager = useMemo(() =>\n    new SelectionManager(collection, selectionState, {layoutDelegate})\n    , [collection, selectionState, layoutDelegate]\n  );\n\n  useFocusedKeyReset(collection, selectionManager);\n\n  return {\n    collection,\n    disabledKeys,\n    selectionManager\n  };\n}\n\n/**\n * Filters a collection using the provided filter function and returns a new ListState.\n */\nexport function UNSTABLE_useFilteredListState<T extends object>(state: ListState<T>, filterFn: ((nodeValue: string, node: Node<T>) => boolean) | null | undefined): ListState<T> {\n  let collection = useMemo(() => filterFn ? state.collection.filter!(filterFn) : state.collection, [state.collection, filterFn]);\n  let selectionManager = state.selectionManager.withCollection(collection);\n  useFocusedKeyReset(collection, selectionManager);\n  return {\n    collection,\n    selectionManager,\n    disabledKeys: state.disabledKeys\n  };\n}\n\nfunction useFocusedKeyReset<T>(collection: Collection<Node<T>>, selectionManager: SelectionManager) {\n  // Reset focused key if that item is deleted from the collection.\n  const cachedCollection = useRef<Collection<Node<T>> | null>(null);\n  useEffect(() => {\n    if (selectionManager.focusedKey != null && !collection.getItem(selectionManager.focusedKey) && cachedCollection.current) {\n      const startItem = cachedCollection.current.getItem(selectionManager.focusedKey);\n      const cachedItemNodes = [...cachedCollection.current.getKeys()].map(\n        key => {\n          const itemNode = cachedCollection.current!.getItem(key);\n          return itemNode?.type === 'item' ? itemNode : null;\n        }\n      ).filter(node => node !== null);\n      const itemNodes = [...collection.getKeys()].map(\n        key => {\n          const itemNode = collection.getItem(key);\n          return itemNode?.type === 'item' ? itemNode : null;\n        }\n      ).filter(node => node !== null);\n      const diff: number = (cachedItemNodes?.length ?? 0) - (itemNodes?.length ?? 0);\n      let index = Math.min(\n        (\n          diff > 1 ?\n          Math.max((startItem?.index ?? 0) - diff + 1, 0) :\n          startItem?.index ?? 0\n        ),\n        (itemNodes?.length ?? 0) - 1);\n      let newNode: Node<T> | null = null;\n      let isReverseSearching = false;\n      while (index >= 0) {\n        if (!selectionManager.isDisabled(itemNodes[index].key)) {\n          newNode = itemNodes[index];\n          break;\n        }\n        // Find next, not disabled item.\n        if (index < itemNodes.length - 1 && !isReverseSearching) {\n          index++;\n        // Otherwise, find previous, not disabled item.\n        } else {\n          isReverseSearching = true;\n          if (index > (startItem?.index ?? 0)) {\n            index = (startItem?.index ?? 0);\n          }\n          index--;\n        }\n      }\n      selectionManager.setFocusedKey(newNode ? newNode.key : null);\n    }\n    cachedCollection.current = collection;\n  }, [collection, selectionManager]);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusStrategy, Key} from '@react-types/shared';\nimport {MenuTriggerProps} from '@react-types/menu';\nimport {OverlayTriggerState, useOverlayTriggerState} from '@react-stately/overlays';\nimport {useState} from 'react';\n\nexport interface MenuTriggerState extends OverlayTriggerState {\n  /** Controls which item will be auto focused when the menu opens. */\n  readonly focusStrategy: FocusStrategy | null,\n\n  /** Opens the menu. */\n  open(focusStrategy?: FocusStrategy | null): void,\n\n  /** Toggles the menu. */\n  toggle(focusStrategy?: FocusStrategy | null): void\n}\n\nexport interface RootMenuTriggerState extends MenuTriggerState {\n  /** Opens a specific submenu tied to a specific menu item at a specific level. */\n  openSubmenu: (triggerKey: Key, level: number) => void,\n\n  /** Closes a specific submenu tied to a specific menu item at a specific level. */\n  closeSubmenu: (triggerKey: Key, level: number) => void,\n\n  /** An array of open submenu trigger keys within the menu tree.\n   * The index of key within array matches the submenu level in the tree.\n   */\n  expandedKeysStack: Key[],\n\n  /** Closes the menu and all submenus in the menu tree. */\n  close: () => void\n}\n\n/**\n * Manages state for a menu trigger. Tracks whether the menu is currently open,\n * and controls which item will receive focus when it opens. Also tracks the open submenus within\n * the menu tree via their trigger keys.\n */\nexport function useMenuTriggerState(props: MenuTriggerProps): RootMenuTriggerState  {\n  let overlayTriggerState = useOverlayTriggerState(props);\n  let [focusStrategy, setFocusStrategy] = useState<FocusStrategy | null>(null);\n  let [expandedKeysStack, setExpandedKeysStack] = useState<Key[]>([]);\n\n  let closeAll = () => {\n    setExpandedKeysStack([]);\n    overlayTriggerState.close();\n  };\n\n  let openSubmenu = (triggerKey: Key, level: number) => {\n    setExpandedKeysStack(oldStack => {\n      if (level > oldStack.length) {\n        return oldStack;\n      }\n\n      return [...oldStack.slice(0, level), triggerKey];\n    });\n  };\n\n  let closeSubmenu = (triggerKey: Key, level: number) => {\n    setExpandedKeysStack(oldStack => {\n      let key = oldStack[level];\n      if (key === triggerKey) {\n        return oldStack.slice(0, level);\n      } else {\n        return oldStack;\n      }\n    });\n  };\n\n  return {\n    focusStrategy,\n    ...overlayTriggerState,\n    open(focusStrategy: FocusStrategy | null = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle(focusStrategy: FocusStrategy | null = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    },\n    close() {\n      closeAll();\n    },\n    expandedKeysStack,\n    openSubmenu,\n    closeSubmenu\n  };\n}\n", "import {\n  useMultiSelectListState\n} from \"./chunk-74XVDT4G.mjs\";\n\n// src/use-multiselect-state.ts\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { useFormValidationState } from \"@react-stately/form\";\nimport { useState } from \"react\";\nfunction useMultiSelectState({\n  validate,\n  validationBehavior,\n  ...props\n}) {\n  const [isFocused, setFocused] = useState(false);\n  const [focusStrategy, setFocusStrategy] = useState(null);\n  const triggerState = useMenuTriggerState(props);\n  const listState = useMultiSelectListState({\n    ...props,\n    onSelectionChange: (keys) => {\n      if (props.onSelectionChange != null) {\n        if (keys === \"all\") {\n          props.onSelectionChange(new Set(listState.collection.getKeys()));\n        } else {\n          props.onSelectionChange(keys);\n        }\n      }\n      if (props.selectionMode === \"single\") {\n        triggerState.close();\n      }\n    }\n  });\n  const validationState = useFormValidationState({\n    ...props,\n    validationBehavior,\n    validate: (value) => {\n      if (!validate) return;\n      const keys = Array.from(value);\n      return validate(props.selectionMode === \"single\" ? keys[0] : keys);\n    },\n    // @ts-ignore\n    value: listState.selectedKeys\n  });\n  const shouldHideContent = listState.collection.size === 0 && props.hideEmptyContent;\n  return {\n    ...validationState,\n    ...listState,\n    ...triggerState,\n    focusStrategy,\n    close() {\n      triggerState.close();\n    },\n    open(focusStrategy2 = null) {\n      if (shouldHideContent) return;\n      setFocusStrategy(focusStrategy2);\n      triggerState.open();\n    },\n    toggle(focusStrategy2 = null) {\n      if (shouldHideContent) return;\n      setFocusStrategy(focusStrategy2);\n      triggerState.toggle();\n    },\n    isFocused,\n    setFocused\n  };\n}\n\nexport {\n  useMultiSelectState\n};\n", "{\n  \"longPressMessage\": \"اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة\"\n}\n", "{\n  \"longPressMessage\": \"Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто\"\n}\n", "{\n  \"longPressMessage\": \"Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku\"\n}\n", "{\n  \"longPressMessage\": \"Langt tryk eller tryk på Alt + pil ned for at åbne menuen\"\n}\n", "{\n  \"longPressMessage\": \"Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen\"\n}\n", "{\n  \"longPressMessage\": \"Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού\"\n}\n", "{\n  \"longPressMessage\": \"Long press or press Alt + ArrowDown to open menu\"\n}\n", "{\n  \"longPressMessage\": \"Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú\"\n}\n", "{\n  \"longPressMessage\": \"Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool\"\n}\n", "{\n  \"longPressMessage\": \"Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli\"\n}\n", "{\n  \"longPressMessage\": \"Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.\"\n}\n", "{\n  \"longPressMessage\": \"לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט\"\n}\n", "{\n  \"longPressMessage\": \"Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika\"\n}\n", "{\n  \"longPressMessage\": \"Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához\"\n}\n", "{\n  \"longPressMessage\": \"Premere a lungo o premere Alt + Freccia giù per aprire il menu\"\n}\n", "{\n  \"longPressMessage\": \"長押しまたは Alt+下矢印キーでメニューを開く\"\n}\n", "{\n  \"longPressMessage\": \"길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기\"\n}\n", "{\n  \"longPressMessage\": \"Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.\"\n}\n", "{\n  \"longPressMessage\": \"Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa\"\n}\n", "{\n  \"longPressMessage\": \"Langt trykk eller trykk Alt + PilNed for å åpne menyen\"\n}\n", "{\n  \"longPressMessage\": \"Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen\"\n}\n", "{\n  \"longPressMessage\": \"Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu\"\n}\n", "{\n  \"longPressMessage\": \"Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu\"\n}\n", "{\n  \"longPressMessage\": \"Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu\"\n}\n", "{\n  \"longPressMessage\": \"Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul\"\n}\n", "{\n  \"longPressMessage\": \"Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню\"\n}\n", "{\n  \"longPressMessage\": \"Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol\"\n}\n", "{\n  \"longPressMessage\": \"Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol\"\n}\n", "{\n  \"longPressMessage\": \"Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni\"\n}\n", "{\n  \"longPressMessage\": \"Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn\"\n}\n", "{\n  \"longPressMessage\": \"Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın\"\n}\n", "{\n  \"longPressMessage\": \"Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню\"\n}\n", "{\n  \"longPressMessage\": \"长按或按 Alt + 向下方向键以打开菜单\"\n}\n", "{\n  \"longPressMessage\": \"長按或按 Alt+向下鍵以開啟功能表\"\n}\n", "const _temp0 = require(\"../intl/ar-AE.json\");\nconst _temp1 = require(\"../intl/bg-BG.json\");\nconst _temp2 = require(\"../intl/cs-CZ.json\");\nconst _temp3 = require(\"../intl/da-DK.json\");\nconst _temp4 = require(\"../intl/de-DE.json\");\nconst _temp5 = require(\"../intl/el-GR.json\");\nconst _temp6 = require(\"../intl/en-US.json\");\nconst _temp7 = require(\"../intl/es-ES.json\");\nconst _temp8 = require(\"../intl/et-EE.json\");\nconst _temp9 = require(\"../intl/fi-FI.json\");\nconst _temp10 = require(\"../intl/fr-FR.json\");\nconst _temp11 = require(\"../intl/he-IL.json\");\nconst _temp12 = require(\"../intl/hr-HR.json\");\nconst _temp13 = require(\"../intl/hu-HU.json\");\nconst _temp14 = require(\"../intl/it-IT.json\");\nconst _temp15 = require(\"../intl/ja-JP.json\");\nconst _temp16 = require(\"../intl/ko-KR.json\");\nconst _temp17 = require(\"../intl/lt-LT.json\");\nconst _temp18 = require(\"../intl/lv-LV.json\");\nconst _temp19 = require(\"../intl/nb-NO.json\");\nconst _temp20 = require(\"../intl/nl-NL.json\");\nconst _temp21 = require(\"../intl/pl-PL.json\");\nconst _temp22 = require(\"../intl/pt-BR.json\");\nconst _temp23 = require(\"../intl/pt-PT.json\");\nconst _temp24 = require(\"../intl/ro-RO.json\");\nconst _temp25 = require(\"../intl/ru-RU.json\");\nconst _temp26 = require(\"../intl/sk-SK.json\");\nconst _temp27 = require(\"../intl/sl-SI.json\");\nconst _temp28 = require(\"../intl/sr-SP.json\");\nconst _temp29 = require(\"../intl/sv-SE.json\");\nconst _temp30 = require(\"../intl/tr-TR.json\");\nconst _temp31 = require(\"../intl/uk-UA.json\");\nconst _temp32 = require(\"../intl/zh-CN.json\");\nconst _temp33 = require(\"../intl/zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {AriaMenuOptions} from './useMenu';\nimport {FocusableElement, RefObject} from '@react-types/shared';\nimport {focusWithoutScrolling, useId} from '@react-aria/utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MenuTriggerState} from '@react-stately/menu';\nimport {MenuTriggerType} from '@react-types/menu';\nimport {PressProps, useLongPress} from '@react-aria/interactions';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useOverlayTrigger} from '@react-aria/overlays';\n\nexport interface AriaMenuTriggerProps {\n  /** The type of menu that the menu trigger opens. */\n  type?: 'menu' | 'listbox',\n  /** Whether menu trigger is disabled. */\n  isDisabled?: boolean,\n  /** How menu is triggered. */\n  trigger?: MenuTriggerType\n}\n\nexport interface MenuTriggerAria<T> {\n  /** Props for the menu trigger element. */\n  menuTriggerProps: AriaButtonProps,\n\n  /** Props for the menu. */\n  menuProps: AriaMenuOptions<T>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a menu trigger.\n * @param props - Props for the menu trigger.\n * @param state - State for the menu trigger.\n * @param ref - Ref to the HTML element trigger for the menu.\n */\nexport function useMenuTrigger<T>(props: AriaMenuTriggerProps, state: MenuTriggerState, ref: RefObject<Element | null>): MenuTriggerAria<T> {\n  let {\n    type = 'menu',\n    isDisabled,\n    trigger = 'press'\n  } = props;\n\n  let menuTriggerId = useId();\n  let {triggerProps, overlayProps} = useOverlayTrigger({type}, state, ref);\n\n  let onKeyDown = (e) => {\n    if (isDisabled) {\n      return;\n    }\n\n    if (trigger === 'longPress' && !e.altKey) {\n      return;\n    }\n\n    if (ref && ref.current) {\n      switch (e.key) {\n        case 'Enter':\n        case ' ':\n          // React puts listeners on the same root, so even if propagation was stopped, immediate propagation is still possible.\n          // useTypeSelect will handle the spacebar first if it's running, so we don't want to open if it's handled it already.\n          // We use isDefaultPrevented() instead of isPropagationStopped() because createEventHandler stops propagation by default.\n          // And default prevented means that the event was handled by something else (typeahead), so we don't want to open the menu.\n          if (trigger === 'longPress' || e.isDefaultPrevented()) {\n            return;\n          }\n          // fallthrough\n        case 'ArrowDown':\n          // Stop propagation, unless it would already be handled by useKeyboard.\n          if (!('continuePropagation' in e)) {\n            e.stopPropagation();\n          }\n          e.preventDefault();\n          state.toggle('first');\n          break;\n        case 'ArrowUp':\n          if (!('continuePropagation' in e)) {\n            e.stopPropagation();\n          }\n          e.preventDefault();\n          state.toggle('last');\n          break;\n        default:\n          // Allow other keys.\n          if ('continuePropagation' in e) {\n            e.continuePropagation();\n          }\n      }\n    }\n  };\n\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/menu');\n  let {longPressProps} = useLongPress({\n    isDisabled: isDisabled || trigger !== 'longPress',\n    accessibilityDescription: stringFormatter.format('longPressMessage'),\n    onLongPressStart() {\n      state.close();\n    },\n    onLongPress() {\n      state.open('first');\n    }\n  });\n\n  let pressProps: PressProps =  {\n    preventFocusOnPress: true,\n    onPressStart(e) {\n      // For consistency with native, open the menu on mouse/key down, but touch up.\n      if (e.pointerType !== 'touch' && e.pointerType !== 'keyboard' && !isDisabled) {\n        // Ensure trigger has focus before opening the menu so it can be restored by FocusScope on close.\n        focusWithoutScrolling(e.target as FocusableElement);\n\n        // If opened with a screen reader, auto focus the first item.\n        // Otherwise, the menu itself will be focused.\n        state.open(e.pointerType === 'virtual' ? 'first' : null);\n      }\n    },\n    onPress(e) {\n      if (e.pointerType === 'touch' && !isDisabled) {\n        // Ensure trigger has focus before opening the menu so it can be restored by FocusScope on close.\n        focusWithoutScrolling(e.target as FocusableElement);\n\n        state.toggle();\n      }\n    }\n  };\n\n  // omit onPress from triggerProps since we override it above.\n  delete triggerProps.onPress;\n\n  return {\n    // @ts-ignore - TODO we pass out both DOMAttributes AND AriaButtonProps, but useButton will discard the longPress event handlers, it's only through PressResponder magic that this works for RSP and RAC. it does not work in aria examples\n    menuTriggerProps: {\n      ...triggerProps,\n      ...(trigger === 'press' ? pressProps : longPressProps),\n      id: menuTriggerId,\n      onKeyDown\n    },\n    menuProps: {\n      ...overlayProps,\n      'aria-labelledby': menuTriggerId,\n      autoFocus: state.focusStrategy || true,\n      onClose: state.close\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Key} from '@react-types/shared';\nimport {isAppleDevice, useId} from '@react-aria/utils';\nimport {RefObject} from 'react';\n\ninterface Event {\n  altKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean\n}\n\nexport function isNonContiguousSelectionModifier(e: Event): boolean {\n  // Ctrl + Arrow Up/Arrow Down has a system wide meaning on macOS, so use Alt instead.\n  // On Windows and Ubuntu, Alt + Space has a system wide meaning.\n  return isAppleDevice() ? e.altKey : e.ctrlKey;\n}\n\nexport function getItemElement(collectionRef: RefObject<HTMLElement | null>, key: Key): Element | null | undefined {\n  let selector = `[data-key=\"${CSS.escape(String(key))}\"]`;\n  let collection = collectionRef.current?.dataset.collection;\n  if (collection) {\n    selector = `[data-collection=\"${CSS.escape(collection)}\"]${selector}`;\n  }\n  return collectionRef.current?.querySelector(selector);\n}\n\nconst collectionMap = new WeakMap<Collection<any>, string>();\nexport function useCollectionId(collection: Collection<any>): string {\n  let id = useId();\n  collectionMap.set(collection, id);\n  return id;\n}\n\nexport function getCollectionId(collection: Collection<any>): string {\n  return collectionMap.get(collection)!;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, Key, KeyboardDelegate} from '@react-types/shared';\nimport {KeyboardEvent, useRef} from 'react';\nimport {MultipleSelectionManager} from '@react-stately/selection';\n\n/**\n * Controls how long to wait before clearing the typeahead buffer.\n */\nconst TYPEAHEAD_DEBOUNCE_WAIT_MS = 1000; // 1 second\n\nexport interface AriaTypeSelectOptions {\n  /**\n   * A delegate that returns collection item keys with respect to visual layout.\n   */\n  keyboardDelegate: KeyboardDelegate,\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * Called when an item is focused by typing.\n   */\n  onTypeSelect?: (key: Key) => void\n}\n\nexport interface TypeSelectAria {\n  /**\n   * Props to be spread on the owner of the options.\n   */\n  typeSelectProps: DOMAttributes\n}\n\n/**\n * Handles typeahead interactions with collections.\n */\nexport function useTypeSelect(options: AriaTypeSelectOptions): TypeSelectAria {\n  let {keyboardDelegate, selectionManager, onTypeSelect} = options;\n  let state = useRef<{search: string, timeout: ReturnType<typeof setTimeout> | undefined}>({\n    search: '',\n    timeout: undefined\n  }).current;\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    let character = getStringForKey(e.key);\n    if (!character || e.ctrlKey || e.metaKey || !e.currentTarget.contains(e.target as HTMLElement) || (state.search.length === 0 && character === ' ')) {\n      return;\n    }\n\n    // Do not propagate the Spacebar event if it's meant to be part of the search.\n    // When we time out, the search term becomes empty, hence the check on length.\n    // Trimming is to account for the case of pressing the Spacebar more than once,\n    // which should cycle through the selection/deselection of the focused item.\n    if (character === ' ' && state.search.trim().length > 0) {\n      e.preventDefault();\n      if (!('continuePropagation' in e)) {\n        e.stopPropagation();\n      }\n    }\n\n    state.search += character;\n\n    if (keyboardDelegate.getKeyForSearch != null) {\n      // Use the delegate to find a key to focus.\n      // Prioritize items after the currently focused item, falling back to searching the whole list.\n      let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);\n\n      // If no key found, search from the top.\n      if (key == null) {\n        key = keyboardDelegate.getKeyForSearch(state.search);\n      }\n\n      if (key != null) {\n        selectionManager.setFocusedKey(key);\n        if (onTypeSelect) {\n          onTypeSelect(key);\n        }\n      }\n    }\n\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(() => {\n      state.search = '';\n    }, TYPEAHEAD_DEBOUNCE_WAIT_MS);\n  };\n\n  return {\n    typeSelectProps: {\n      // Using a capturing listener to catch the keydown event before\n      // other hooks in order to handle the Spacebar event.\n      onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : undefined\n    }\n  };\n}\n\nfunction getStringForKey(key: string) {\n  // If the key is of length 1, it is an ASCII value.\n  // Otherwise, if there are no ASCII characters in the key name,\n  // it is a Unicode character.\n  // See https://www.w3.org/TR/uievents-key/\n  if (key.length === 1 || !/^[A-Z]/i.test(key)) {\n    return key;\n  }\n\n  return '';\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CLEAR_FOCUS_EVENT, FOCUS_EVENT, focusWithoutScrolling, getActiveElement, isCtrlKeyPressed, mergeProps, scrollIntoView, scrollIntoViewport, useEffectEvent, useEvent, useRouter, useUpdateLayoutEffect} from '@react-aria/utils';\nimport {dispatchVirtualFocus, getFocusableTreeWalker, moveVirtualFocus} from '@react-aria/focus';\nimport {DOMAttributes, FocusableElement, FocusStrategy, Key, KeyboardDelegate, RefObject} from '@react-types/shared';\nimport {flushSync} from 'react-dom';\nimport {FocusEvent, KeyboardEvent, useEffect, useRef} from 'react';\nimport {focusSafely, getInteractionModality} from '@react-aria/interactions';\nimport {getItemElement, isNonContiguousSelectionModifier, useCollectionId} from './utils';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useLocale} from '@react-aria/i18n';\nimport {useTypeSelect} from './useTypeSelect';\n\nexport interface AriaSelectableCollectionOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * A delegate object that implements behavior for keyboard focus movement.\n   */\n  keyboardDelegate: KeyboardDelegate,\n  /**\n   * The ref attached to the element representing the collection.\n   */\n  ref: RefObject<HTMLElement | null>,\n  /**\n   * Whether the collection or one of its items should be automatically focused upon render.\n   * @default false\n   */\n  autoFocus?: boolean | FocusStrategy,\n  /**\n   * Whether focus should wrap around when the end/start is reached.\n   * @default false\n   */\n  shouldFocusWrap?: boolean,\n  /**\n   * Whether the collection allows empty selection.\n   * @default false\n   */\n  disallowEmptySelection?: boolean,\n  /**\n   * Whether the collection allows the user to select all items via keyboard shortcut.\n   * @default false\n   */\n  disallowSelectAll?: boolean,\n  /**\n   * Whether pressing the Escape should clear selection in the collection or not.\n   * @default 'clearSelection'\n   */\n  escapeKeyBehavior?: 'clearSelection' | 'none',\n  /**\n   * Whether selection should occur automatically on focus.\n   * @default false\n   */\n  selectOnFocus?: boolean,\n  /**\n   * Whether typeahead is disabled.\n   * @default false\n   */\n  disallowTypeAhead?: boolean,\n  /**\n   * Whether the collection items should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean,\n  /**\n   * Whether navigation through tab key is enabled.\n   */\n  allowsTabNavigation?: boolean,\n  /**\n   * Whether the collection items are contained in a virtual scroller.\n   */\n  isVirtualized?: boolean,\n  /**\n   * The ref attached to the scrollable body. Used to provide automatic scrolling on item focus for non-virtualized collections.\n   * If not provided, defaults to the collection ref.\n   */\n  scrollRef?: RefObject<HTMLElement | null>,\n  /**\n   * The behavior of links in the collection.\n   * - 'action': link behaves like onAction.\n   * - 'selection': link follows selection interactions (e.g. if URL drives selection).\n   * - 'override': links override all other interactions (link items are not selectable).\n   * @default 'action'\n   */\n  linkBehavior?: 'action' | 'selection' | 'override'\n}\n\nexport interface SelectableCollectionAria {\n  /** Props for the collection element. */\n  collectionProps: DOMAttributes\n}\n\n/**\n * Handles interactions with selectable collections.\n */\nexport function useSelectableCollection(options: AriaSelectableCollectionOptions): SelectableCollectionAria {\n  let {\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    ref,\n    autoFocus = false,\n    shouldFocusWrap = false,\n    disallowEmptySelection = false,\n    disallowSelectAll = false,\n    escapeKeyBehavior = 'clearSelection',\n    selectOnFocus = manager.selectionBehavior === 'replace',\n    disallowTypeAhead = false,\n    shouldUseVirtualFocus,\n    allowsTabNavigation = false,\n    isVirtualized,\n    // If no scrollRef is provided, assume the collection ref is the scrollable region\n    scrollRef = ref,\n    linkBehavior = 'action'\n  } = options;\n  let {direction} = useLocale();\n  let router = useRouter();\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    // Prevent option + tab from doing anything since it doesn't move focus to the cells, only buttons/checkboxes\n    if (e.altKey && e.key === 'Tab') {\n      e.preventDefault();\n    }\n\n    // Keyboard events bubble through portals. Don't handle keyboard events\n    // for elements outside the collection (e.g. menus).\n    if (!ref.current?.contains(e.target as Element)) {\n      return;\n    }\n\n    const navigateToKey = (key: Key | undefined, childFocus?: FocusStrategy) => {\n      if (key != null) {\n        if (manager.isLink(key) && linkBehavior === 'selection' && selectOnFocus && !isNonContiguousSelectionModifier(e)) {\n          // Set focused key and re-render synchronously to bring item into view if needed.\n          flushSync(() => {\n            manager.setFocusedKey(key, childFocus);\n          });\n\n          let item = getItemElement(ref, key);\n          let itemProps = manager.getItemProps(key);\n          if (item) {\n            router.open(item, e, itemProps.href, itemProps.routerOptions);\n          }\n\n          return;\n        }\n\n        manager.setFocusedKey(key, childFocus);\n\n        if (manager.isLink(key) && linkBehavior === 'override') {\n          return;\n        }\n\n        if (e.shiftKey && manager.selectionMode === 'multiple') {\n          manager.extendSelection(key);\n        } else if (selectOnFocus && !isNonContiguousSelectionModifier(e)) {\n          manager.replaceSelection(key);\n        }\n      }\n    };\n\n    switch (e.key) {\n      case 'ArrowDown': {\n        if (delegate.getKeyBelow) {\n          let nextKey = manager.focusedKey != null\n              ? delegate.getKeyBelow?.(manager.focusedKey)\n              : delegate.getFirstKey?.();\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = delegate.getFirstKey?.(manager.focusedKey);\n          }\n          if (nextKey != null) {\n            e.preventDefault();\n            navigateToKey(nextKey);\n          }\n        }\n        break;\n      }\n      case 'ArrowUp': {\n        if (delegate.getKeyAbove) {\n          let nextKey = manager.focusedKey != null\n              ? delegate.getKeyAbove?.(manager.focusedKey)\n              : delegate.getLastKey?.();\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = delegate.getLastKey?.(manager.focusedKey);\n          }\n          if (nextKey != null) {\n            e.preventDefault();\n            navigateToKey(nextKey);\n          }\n        }\n        break;\n      }\n      case 'ArrowLeft': {\n        if (delegate.getKeyLeftOf) {\n          let nextKey: Key | undefined | null = manager.focusedKey != null ? delegate.getKeyLeftOf?.(manager.focusedKey) : null;\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = direction === 'rtl' ? delegate.getFirstKey?.(manager.focusedKey) : delegate.getLastKey?.(manager.focusedKey);\n          }\n          if (nextKey != null) {\n            e.preventDefault();\n            navigateToKey(nextKey, direction === 'rtl' ? 'first' : 'last');\n          }\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        if (delegate.getKeyRightOf) {\n          let nextKey: Key | undefined | null = manager.focusedKey != null ? delegate.getKeyRightOf?.(manager.focusedKey) : null;\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = direction === 'rtl' ? delegate.getLastKey?.(manager.focusedKey) : delegate.getFirstKey?.(manager.focusedKey);\n          }\n          if (nextKey != null) {\n            e.preventDefault();\n            navigateToKey(nextKey, direction === 'rtl' ? 'last' : 'first');\n          }\n        }\n        break;\n      }\n      case 'Home':\n        if (delegate.getFirstKey) {\n          if (manager.focusedKey === null && e.shiftKey) {\n            return;\n          }\n          e.preventDefault();\n          let firstKey: Key | null = delegate.getFirstKey(manager.focusedKey, isCtrlKeyPressed(e));\n          manager.setFocusedKey(firstKey);\n          if (firstKey != null) {\n            if (isCtrlKeyPressed(e) && e.shiftKey && manager.selectionMode === 'multiple') {\n              manager.extendSelection(firstKey);\n            } else if (selectOnFocus) {\n              manager.replaceSelection(firstKey);\n            }\n          }\n        }\n        break;\n      case 'End':\n        if (delegate.getLastKey) {\n          if (manager.focusedKey === null && e.shiftKey) {\n            return;\n          }\n          e.preventDefault();\n          let lastKey = delegate.getLastKey(manager.focusedKey, isCtrlKeyPressed(e));\n          manager.setFocusedKey(lastKey);\n          if (lastKey != null) {\n            if (isCtrlKeyPressed(e) && e.shiftKey && manager.selectionMode === 'multiple') {\n              manager.extendSelection(lastKey);\n            } else if (selectOnFocus) {\n              manager.replaceSelection(lastKey);\n            }\n          }\n        }\n        break;\n      case 'PageDown':\n        if (delegate.getKeyPageBelow && manager.focusedKey != null) {\n          let nextKey = delegate.getKeyPageBelow(manager.focusedKey);\n          if (nextKey != null) {\n            e.preventDefault();\n            navigateToKey(nextKey);\n          }\n        }\n        break;\n      case 'PageUp':\n        if (delegate.getKeyPageAbove && manager.focusedKey != null) {\n          let nextKey = delegate.getKeyPageAbove(manager.focusedKey);\n          if (nextKey != null) {\n            e.preventDefault();\n            navigateToKey(nextKey);\n          }\n        }\n        break;\n      case 'a':\n        if (isCtrlKeyPressed(e) && manager.selectionMode === 'multiple' && disallowSelectAll !== true) {\n          e.preventDefault();\n          manager.selectAll();\n        }\n        break;\n      case 'Escape':\n        if (escapeKeyBehavior === 'clearSelection' && !disallowEmptySelection && manager.selectedKeys.size !== 0) {\n          e.stopPropagation();\n          e.preventDefault();\n          manager.clearSelection();\n        }\n        break;\n      case 'Tab': {\n        if (!allowsTabNavigation) {\n          // There may be elements that are \"tabbable\" inside a collection (e.g. in a grid cell).\n          // However, collections should be treated as a single tab stop, with arrow key navigation internally.\n          // We don't control the rendering of these, so we can't override the tabIndex to prevent tabbing.\n          // Instead, we handle the Tab key, and move focus manually to the first/last tabbable element\n          // in the collection, so that the browser default behavior will apply starting from that element\n          // rather than the currently focused one.\n          if (e.shiftKey) {\n            ref.current.focus();\n          } else {\n            let walker = getFocusableTreeWalker(ref.current, {tabbable: true});\n            let next: FocusableElement | undefined = undefined;\n            let last: FocusableElement;\n            do {\n              last = walker.lastChild() as FocusableElement;\n              if (last) {\n                next = last;\n              }\n            } while (last);\n\n            if (next && !next.contains(document.activeElement)) {\n              focusWithoutScrolling(next);\n            }\n          }\n          break;\n        }\n      }\n    }\n  };\n\n  // Store the scroll position so we can restore it later.\n  /// TODO: should this happen all the time??\n  let scrollPos = useRef({top: 0, left: 0});\n  useEvent(scrollRef, 'scroll', isVirtualized ? undefined : () => {\n    scrollPos.current = {\n      top: scrollRef.current?.scrollTop ?? 0,\n      left: scrollRef.current?.scrollLeft ?? 0\n    };\n  });\n\n  let onFocus = (e: FocusEvent) => {\n    if (manager.isFocused) {\n      // If a focus event bubbled through a portal, reset focus state.\n      if (!e.currentTarget.contains(e.target)) {\n        manager.setFocused(false);\n      }\n\n      return;\n    }\n\n    // Focus events can bubble through portals. Ignore these events.\n    if (!e.currentTarget.contains(e.target)) {\n      return;\n    }\n\n    manager.setFocused(true);\n    if (manager.focusedKey == null) {\n      let navigateToKey = (key: Key | undefined | null) => {\n        if (key != null) {\n          manager.setFocusedKey(key);\n          if (selectOnFocus && !manager.isSelected(key)) {\n            manager.replaceSelection(key);\n          }\n        }\n      };\n      // If the user hasn't yet interacted with the collection, there will be no focusedKey set.\n      // Attempt to detect whether the user is tabbing forward or backward into the collection\n      // and either focus the first or last item accordingly.\n      let relatedTarget = e.relatedTarget as Element;\n      if (relatedTarget && (e.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING)) {\n        navigateToKey(manager.lastSelectedKey ?? delegate.getLastKey?.());\n      } else {\n        navigateToKey(manager.firstSelectedKey ?? delegate.getFirstKey?.());\n      }\n    } else if (!isVirtualized && scrollRef.current) {\n      // Restore the scroll position to what it was before.\n      scrollRef.current.scrollTop = scrollPos.current.top;\n      scrollRef.current.scrollLeft = scrollPos.current.left;\n    }\n\n    if (manager.focusedKey != null && scrollRef.current) {\n      // Refocus and scroll the focused item into view if it exists within the scrollable region.\n      let element = getItemElement(ref, manager.focusedKey);\n      if (element instanceof HTMLElement) {\n        // This prevents a flash of focus on the first/last element in the collection, or the collection itself.\n        if (!element.contains(document.activeElement) && !shouldUseVirtualFocus) {\n          focusWithoutScrolling(element);\n        }\n\n        let modality = getInteractionModality();\n        if (modality === 'keyboard') {\n          scrollIntoViewport(element, {containingElement: ref.current});\n        }\n      }\n    }\n  };\n\n  let onBlur = (e) => {\n    // Don't set blurred and then focused again if moving focus within the collection.\n    if (!e.currentTarget.contains(e.relatedTarget as HTMLElement)) {\n      manager.setFocused(false);\n    }\n  };\n\n  // Ref to track whether the first item in the collection should be automatically focused. Specifically used for autocomplete when user types\n  // to focus the first key AFTER the collection updates.\n  // TODO: potentially expand the usage of this\n  let shouldVirtualFocusFirst = useRef(false);\n  // Add event listeners for custom virtual events. These handle updating the focused key in response to various keyboard events\n  // at the autocomplete level\n  // TODO: fix type later\n  useEvent(ref, FOCUS_EVENT, !shouldUseVirtualFocus ? undefined : (e: any) => {\n    let {detail} = e;\n    e.stopPropagation();\n    manager.setFocused(true);\n    // If the user is typing forwards, autofocus the first option in the list.\n    if (detail?.focusStrategy === 'first') {\n      shouldVirtualFocusFirst.current = true;\n    }\n  });\n\n  let updateActiveDescendant = useEffectEvent(() => {\n    let keyToFocus = delegate.getFirstKey?.() ?? null;\n\n    // If no focusable items exist in the list, make sure to clear any activedescendant that may still exist and move focus back to\n    // the original active element (e.g. the autocomplete input)\n    if (keyToFocus == null) {\n      let previousActiveElement = getActiveElement();\n      moveVirtualFocus(ref.current);\n      dispatchVirtualFocus(previousActiveElement!, null);\n\n      // If there wasn't a focusable key but the collection had items, then that means we aren't in an intermediate load state and all keys are disabled.\n      // Reset shouldVirtualFocusFirst so that we don't erronously autofocus an item when the collection is filtered again.\n      if (manager.collection.size > 0) {\n        shouldVirtualFocusFirst.current = false;\n      }\n    } else {\n      manager.setFocusedKey(keyToFocus);\n      // Only set shouldVirtualFocusFirst to false if we've successfully set the first key as the focused key\n      // If there wasn't a key to focus, we might be in a temporary loading state so we'll want to still focus the first key\n      // after the collection updates after load\n      shouldVirtualFocusFirst.current = false;\n    }\n  });\n\n  useUpdateLayoutEffect(() => {\n    if (shouldVirtualFocusFirst.current) {\n      updateActiveDescendant();\n    }\n\n  }, [manager.collection, updateActiveDescendant]);\n\n  let resetFocusFirstFlag = useEffectEvent(() => {\n    // If user causes the focused key to change in any other way, clear shouldVirtualFocusFirst so we don't\n    // accidentally move focus from under them. Skip this if the collection was empty because we might be in a load\n    // state and will still want to focus the first item after load\n    if (manager.collection.size > 0) {\n      shouldVirtualFocusFirst.current = false;\n    }\n  });\n\n  useUpdateLayoutEffect(() => {\n    resetFocusFirstFlag();\n  }, [manager.focusedKey, resetFocusFirstFlag]);\n\n  useEvent(ref, CLEAR_FOCUS_EVENT, !shouldUseVirtualFocus ? undefined : (e: any) => {\n    e.stopPropagation();\n    manager.setFocused(false);\n    if (e.detail?.clearFocusKey) {\n      manager.setFocusedKey(null);\n    }\n  });\n\n  const autoFocusRef = useRef(autoFocus);\n  const didAutoFocusRef = useRef(false);\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      let focusedKey: Key | null = null;\n\n      // Check focus strategy to determine which item to focus\n      if (autoFocus === 'first') {\n        focusedKey = delegate.getFirstKey?.() ?? null;\n      } if (autoFocus === 'last') {\n        focusedKey = delegate.getLastKey?.() ?? null;\n      }\n\n      // If there are any selected keys, make the first one the new focus target\n      let selectedKeys = manager.selectedKeys;\n      if (selectedKeys.size) {\n        for (let key of selectedKeys) {\n          if (manager.canSelectItem(key)) {\n            focusedKey = key;\n            break;\n          }\n        }\n      }\n\n      manager.setFocused(true);\n      manager.setFocusedKey(focusedKey);\n\n      // If no default focus key is selected, focus the collection itself.\n      if (focusedKey == null && !shouldUseVirtualFocus && ref.current) {\n        focusSafely(ref.current);\n      }\n\n      // Wait until the collection has items to autofocus.\n      if (manager.collection.size > 0) {\n        autoFocusRef.current = false;\n        didAutoFocusRef.current = true;\n      }\n    }\n  });\n\n  // Scroll the focused element into view when the focusedKey changes.\n  let lastFocusedKey = useRef(manager.focusedKey);\n  let raf = useRef<number | null>(null);\n  useEffect(() => {\n    if (manager.isFocused && manager.focusedKey != null && (manager.focusedKey !== lastFocusedKey.current || didAutoFocusRef.current) && scrollRef.current && ref.current) {\n      let modality = getInteractionModality();\n      let element = getItemElement(ref, manager.focusedKey);\n      if (!(element instanceof HTMLElement)) {\n        // If item element wasn't found, return early (don't update autoFocusRef and lastFocusedKey).\n        // The collection may initially be empty (e.g. virtualizer), so wait until the element exists.\n        return;\n      }\n\n      if (modality === 'keyboard' || didAutoFocusRef.current) {\n\n        if (raf.current) {\n          cancelAnimationFrame(raf.current);\n        }\n\n        raf.current = requestAnimationFrame(() => {\n          if (scrollRef.current) {\n            scrollIntoView(scrollRef.current, element);\n            // Avoid scroll in iOS VO, since it may cause overlay to close (i.e. RAC submenu)\n            if (modality !== 'virtual') {\n              scrollIntoViewport(element, {containingElement: ref.current});\n            }\n          }\n        });\n      }\n    }\n\n    // If the focused key becomes null (e.g. the last item is deleted), focus the whole collection.\n    if (!shouldUseVirtualFocus && manager.isFocused && manager.focusedKey == null && lastFocusedKey.current != null && ref.current) {\n      focusSafely(ref.current);\n    }\n\n    lastFocusedKey.current = manager.focusedKey;\n    didAutoFocusRef.current = false;\n  });\n\n  useEffect(() => {\n    return () => {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n      }\n    };\n  }, []);\n\n  // Intercept FocusScope restoration since virtualized collections can reuse DOM nodes.\n  useEvent(ref, 'react-aria-focus-scope-restore', e => {\n    e.preventDefault();\n    manager.setFocused(true);\n  });\n\n  let handlers = {\n    onKeyDown,\n    onFocus,\n    onBlur,\n    onMouseDown(e) {\n      // Ignore events that bubbled through portals.\n      if (scrollRef.current === e.target) {\n        // Prevent focus going to the collection when clicking on the scrollbar.\n        e.preventDefault();\n      }\n    }\n  };\n\n  let {typeSelectProps} = useTypeSelect({\n    keyboardDelegate: delegate,\n    selectionManager: manager\n  });\n\n  if (!disallowTypeAhead) {\n    handlers = mergeProps(typeSelectProps, handlers);\n  }\n\n  // If nothing is focused within the collection, make the collection itself tabbable.\n  // This will be marshalled to either the first or last item depending on where focus came from.\n  let tabIndex: number | undefined = undefined;\n  if (!shouldUseVirtualFocus) {\n    tabIndex = manager.focusedKey == null ? 0 : -1;\n  }\n\n  let collectionId = useCollectionId(manager.collection);\n  return {\n    collectionProps: mergeProps(handlers, {\n      tabIndex,\n      'data-collection': collectionId\n    })\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {chain, isCtrlKeyPressed, mergeProps, openLink, useId, useRouter} from '@react-aria/utils';\nimport {DOMAttributes, DOMProps, FocusableElement, Key, LongPressEvent, PointerType, PressEvent, RefObject} from '@react-types/shared';\nimport {focusSafely, PressHookProps, useLongPress, usePress} from '@react-aria/interactions';\nimport {getCollectionId, isNonContiguousSelectionModifier} from './utils';\nimport {moveVirtualFocus} from '@react-aria/focus';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useEffect, useRef} from 'react';\n\nexport interface SelectableItemOptions extends DOMProps {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * A unique key for the item.\n   */\n  key: Key,\n  /**\n   * Ref to the item.\n   */\n  ref: RefObject<FocusableElement | null>,\n  /**\n   * By default, selection occurs on pointer down. This can be strange if selecting an\n   * item causes the UI to disappear immediately (e.g. menus).\n   */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Whether selection requires the pointer/mouse down and up events to occur on the same target or triggers selection on\n   * the target of the pointer/mouse up event.\n   */\n  allowsDifferentPressOrigin?: boolean,\n  /**\n   * Whether the option is contained in a virtual scroller.\n   */\n  isVirtualized?: boolean,\n  /**\n   * Function to focus the item.\n   */\n  focus?: () => void,\n  /**\n   * Whether the option should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean,\n  /** Whether the item is disabled. */\n  isDisabled?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the item. The exact user event depends on\n   * the collection's `selectionBehavior` prop and the interaction modality.\n   */\n  onAction?: () => void,\n  /**\n   * The behavior of links in the collection.\n   * - 'action': link behaves like onAction.\n   * - 'selection': link follows selection interactions (e.g. if URL drives selection).\n   * - 'override': links override all other interactions (link items are not selectable).\n   * - 'none': links are disabled for both selection and actions (e.g. handled elsewhere).\n   * @default 'action'\n   */\n  linkBehavior?: 'action' | 'selection' | 'override' | 'none'\n}\n\nexport interface SelectableItemStates {\n  /** Whether the item is currently in a pressed state. */\n  isPressed: boolean,\n  /** Whether the item is currently selected. */\n  isSelected: boolean,\n  /** Whether the item is currently focused. */\n  isFocused: boolean,\n  /**\n   * Whether the item is non-interactive, i.e. both selection and actions are disabled and the item may\n   * not be focused. Dependent on `disabledKeys` and `disabledBehavior`.\n   */\n  isDisabled: boolean,\n  /**\n   * Whether the item may be selected, dependent on `selectionMode`, `disabledKeys`, and `disabledBehavior`.\n   */\n  allowsSelection: boolean,\n  /**\n   * Whether the item has an action, dependent on `onAction`, `disabledKeys`,\n   * and `disabledBehavior`. It may also change depending on the current selection state\n   * of the list (e.g. when selection is primary). This can be used to enable or disable hover\n   * styles or other visual indications of interactivity.\n   */\n  hasAction: boolean\n}\n\nexport interface SelectableItemAria extends SelectableItemStates {\n  /**\n   * Props to be spread on the item root node.\n   */\n  itemProps: DOMAttributes\n}\n\n/**\n * Handles interactions with an item in a selectable collection.\n */\nexport function useSelectableItem(options: SelectableItemOptions): SelectableItemAria {\n  let {\n    id,\n    selectionManager: manager,\n    key,\n    ref,\n    shouldSelectOnPressUp,\n    shouldUseVirtualFocus,\n    focus,\n    isDisabled,\n    onAction,\n    allowsDifferentPressOrigin,\n    linkBehavior = 'action'\n  } = options;\n  let router = useRouter();\n  id = useId(id);\n  let onSelect = (e: PressEvent | LongPressEvent | PointerEvent) => {\n    if (e.pointerType === 'keyboard' && isNonContiguousSelectionModifier(e)) {\n      manager.toggleSelection(key);\n    } else {\n      if (manager.selectionMode === 'none') {\n        return;\n      }\n\n      if (manager.isLink(key)) {\n        if (linkBehavior === 'selection' && ref.current) {\n          let itemProps = manager.getItemProps(key);\n          router.open(ref.current, e, itemProps.href, itemProps.routerOptions);\n          // Always set selected keys back to what they were so that select and combobox close.\n          manager.setSelectedKeys(manager.selectedKeys);\n          return;\n        } else if (linkBehavior === 'override' || linkBehavior === 'none') {\n          return;\n        }\n      }\n\n      if (manager.selectionMode === 'single') {\n        if (manager.isSelected(key) && !manager.disallowEmptySelection) {\n          manager.toggleSelection(key);\n        } else {\n          manager.replaceSelection(key);\n        }\n      } else if (e && e.shiftKey) {\n        manager.extendSelection(key);\n      } else if (manager.selectionBehavior === 'toggle' || (e && (isCtrlKeyPressed(e) || e.pointerType === 'touch' || e.pointerType === 'virtual'))) {\n        // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n        manager.toggleSelection(key);\n      } else {\n        manager.replaceSelection(key);\n      }\n    }\n  };\n\n  // Focus the associated DOM node when this item becomes the focusedKey\n  // TODO: can't make this useLayoutEffect bacause it breaks menus inside dialogs\n  // However, if this is a useEffect, it runs twice and dispatches two blur events and immediately sets\n  // aria-activeDescendant in useAutocomplete... I've worked around this for now\n  useEffect(() => {\n    let isFocused = key === manager.focusedKey;\n    if (isFocused && manager.isFocused) {\n      if (!shouldUseVirtualFocus) {\n        if (focus) {\n          focus();\n        } else if (document.activeElement !== ref.current && ref.current) {\n          focusSafely(ref.current);\n        }\n      } else {\n        moveVirtualFocus(ref.current);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref, key, manager.focusedKey, manager.childFocusStrategy, manager.isFocused, shouldUseVirtualFocus]);\n\n  isDisabled = isDisabled || manager.isDisabled(key);\n  // Set tabIndex to 0 if the element is focused, or -1 otherwise so that only the last focused\n  // item is tabbable.  If using virtual focus, don't set a tabIndex at all so that VoiceOver\n  // on iOS 14 doesn't try to move real DOM focus to the item anyway.\n  let itemProps: SelectableItemAria['itemProps'] = {};\n  if (!shouldUseVirtualFocus && !isDisabled) {\n    itemProps = {\n      tabIndex: key === manager.focusedKey ? 0 : -1,\n      onFocus(e) {\n        if (e.target === ref.current) {\n          manager.setFocusedKey(key);\n        }\n      }\n    };\n  } else if (isDisabled) {\n    itemProps.onMouseDown = (e) => {\n      // Prevent focus going to the body when clicking on a disabled item.\n      e.preventDefault();\n    };\n  }\n\n  // With checkbox selection, onAction (i.e. navigation) becomes primary, and occurs on a single click of the row.\n  // Clicking the checkbox enters selection mode, after which clicking anywhere on any row toggles selection for that row.\n  // With highlight selection, onAction is secondary, and occurs on double click. Single click selects the row.\n  // With touch, onAction occurs on single tap, and long press enters selection mode.\n  let isLinkOverride = manager.isLink(key) && linkBehavior === 'override';\n  let hasLinkAction = manager.isLink(key) && linkBehavior !== 'selection' && linkBehavior !== 'none';\n  let allowsSelection = !isDisabled && manager.canSelectItem(key) && !isLinkOverride;\n  let allowsActions = (onAction || hasLinkAction) && !isDisabled;\n  let hasPrimaryAction = allowsActions && (\n    manager.selectionBehavior === 'replace'\n      ? !allowsSelection\n      : !allowsSelection || manager.isEmpty\n  );\n  let hasSecondaryAction = allowsActions && allowsSelection && manager.selectionBehavior === 'replace';\n  let hasAction = hasPrimaryAction || hasSecondaryAction;\n  let modality = useRef<PointerType | null>(null);\n\n  let longPressEnabled = hasAction && allowsSelection;\n  let longPressEnabledOnPressStart = useRef(false);\n  let hadPrimaryActionOnPressStart = useRef(false);\n  let collectionItemProps = manager.getItemProps(key);\n\n  let performAction = (e) => {\n    if (onAction) {\n      onAction();\n    }\n\n    if (hasLinkAction && ref.current) {\n      router.open(ref.current, e, collectionItemProps.href, collectionItemProps.routerOptions);\n    }\n  };\n\n  // By default, selection occurs on pointer down. This can be strange if selecting an\n  // item causes the UI to disappear immediately (e.g. menus).\n  // If shouldSelectOnPressUp is true, we use onPressUp instead of onPressStart.\n  // onPress requires a pointer down event on the same element as pointer up. For menus,\n  // we want to be able to have the pointer down on the trigger that opens the menu and\n  // the pointer up on the menu item rather than requiring a separate press.\n  // For keyboard events, selection still occurs on key down.\n  let itemPressProps: PressHookProps = {ref};\n  if (shouldSelectOnPressUp) {\n    itemPressProps.onPressStart = (e) => {\n      modality.current = e.pointerType;\n      longPressEnabledOnPressStart.current = longPressEnabled;\n      if (e.pointerType === 'keyboard' && (!hasAction || isSelectionKey())) {\n        onSelect(e);\n      }\n    };\n\n    // If allowsDifferentPressOrigin and interacting with mouse, make selection happen on pressUp (e.g. open menu on press down, selection on menu item happens on press up.)\n    // Otherwise, have selection happen onPress (prevents listview row selection when clicking on interactable elements in the row)\n    if (!allowsDifferentPressOrigin) {\n      itemPressProps.onPress = (e) => {\n        if (hasPrimaryAction || (hasSecondaryAction && e.pointerType !== 'mouse')) {\n          if (e.pointerType === 'keyboard' && !isActionKey()) {\n            return;\n          }\n\n          performAction(e);\n        } else if (e.pointerType !== 'keyboard' && allowsSelection) {\n          onSelect(e);\n        }\n      };\n    } else {\n      itemPressProps.onPressUp = hasPrimaryAction ? undefined : (e) => {\n        if (e.pointerType === 'mouse' && allowsSelection) {\n          onSelect(e);\n        }\n      };\n\n      itemPressProps.onPress = hasPrimaryAction ? performAction : (e) => {\n        if (e.pointerType !== 'keyboard' && e.pointerType !== 'mouse' && allowsSelection) {\n          onSelect(e);\n        }\n      };\n    }\n  } else {\n    itemPressProps.onPressStart = (e) => {\n      modality.current = e.pointerType;\n      longPressEnabledOnPressStart.current = longPressEnabled;\n      hadPrimaryActionOnPressStart.current = hasPrimaryAction;\n\n      // Select on mouse down unless there is a primary action which will occur on mouse up.\n      // For keyboard, select on key down. If there is an action, the Space key selects on key down,\n      // and the Enter key performs onAction on key up.\n      if (\n        allowsSelection && (\n          (e.pointerType === 'mouse' && !hasPrimaryAction) ||\n          (e.pointerType === 'keyboard' && (!allowsActions || isSelectionKey()))\n        )\n      ) {\n        onSelect(e);\n      }\n    };\n\n    itemPressProps.onPress = (e) => {\n      // Selection occurs on touch up. Primary actions always occur on pointer up.\n      // Both primary and secondary actions occur on Enter key up. The only exception\n      // is secondary actions, which occur on double click with a mouse.\n      if (\n        e.pointerType === 'touch' ||\n        e.pointerType === 'pen' ||\n        e.pointerType === 'virtual' ||\n        (e.pointerType === 'keyboard' && hasAction && isActionKey()) ||\n        (e.pointerType === 'mouse' && hadPrimaryActionOnPressStart.current)\n      ) {\n        if (hasAction) {\n          performAction(e);\n        } else if (allowsSelection) {\n          onSelect(e);\n        }\n      }\n    };\n  }\n\n  itemProps['data-collection'] = getCollectionId(manager.collection);\n  itemProps['data-key'] = key;\n  itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;\n\n  // When using virtual focus, make sure the focused key gets updated on press.\n  if (shouldUseVirtualFocus) {\n    itemPressProps = mergeProps(itemPressProps, {\n      onPressStart(e) {\n        if (e.pointerType !== 'touch') {\n          manager.setFocused(true);\n          manager.setFocusedKey(key);\n        }\n      },\n      onPress(e) {\n        if (e.pointerType === 'touch') {\n          manager.setFocused(true);\n          manager.setFocusedKey(key);\n        }\n      }\n    });\n  }\n\n  if (collectionItemProps) {\n    for (let key of ['onPressStart', 'onPressEnd', 'onPressChange', 'onPress', 'onPressUp', 'onClick']) {\n      if (collectionItemProps[key]) {\n        itemPressProps[key] = chain(itemPressProps[key], collectionItemProps[key]);\n      }\n    }\n  }\n\n  let {pressProps, isPressed} = usePress(itemPressProps);\n\n  // Double clicking with a mouse with selectionBehavior = 'replace' performs an action.\n  let onDoubleClick = hasSecondaryAction ? (e) => {\n    if (modality.current === 'mouse') {\n      e.stopPropagation();\n      e.preventDefault();\n      performAction(e);\n    }\n  } : undefined;\n\n  // Long pressing an item with touch when selectionBehavior = 'replace' switches the selection behavior\n  // to 'toggle'. This changes the single tap behavior from performing an action (i.e. navigating) to\n  // selecting, and may toggle the appearance of a UI affordance like checkboxes on each item.\n  let {longPressProps} = useLongPress({\n    isDisabled: !longPressEnabled,\n    onLongPress(e) {\n      if (e.pointerType === 'touch') {\n        onSelect(e);\n        manager.setSelectionBehavior('toggle');\n      }\n    }\n  });\n\n  // Prevent native drag and drop on long press if we also select on long press.\n  // Once the user is in selection mode, they can long press again to drag.\n  // Use a capturing listener to ensure this runs before useDrag, regardless of\n  // the order the props get merged.\n  let onDragStartCapture = e => {\n    if (modality.current === 'touch' && longPressEnabledOnPressStart.current) {\n      e.preventDefault();\n    }\n  };\n\n  // Prevent default on link clicks so that we control exactly\n  // when they open (to match selection behavior).\n  let onClick = linkBehavior !== 'none' && manager.isLink(key) ? e => {\n    if (!(openLink as any).isOpening) {\n      e.preventDefault();\n    }\n  } : undefined;\n\n  return {\n    itemProps: mergeProps(\n      itemProps,\n      allowsSelection || hasPrimaryAction || (shouldUseVirtualFocus && !isDisabled) ? pressProps : {},\n      longPressEnabled ? longPressProps : {},\n      {onDoubleClick, onDragStartCapture, onClick, id},\n      // Prevent DOM focus from moving on mouse down when using virtual focus\n      shouldUseVirtualFocus ? {onMouseDown: e => e.preventDefault()} : undefined\n    ),\n    isPressed,\n    isSelected: manager.isSelected(key),\n    isFocused: manager.isFocused && manager.focusedKey === key,\n    isDisabled,\n    allowsSelection,\n    hasAction\n  };\n}\n\nfunction isActionKey() {\n  let event = window.event as KeyboardEvent;\n  return event?.key === 'Enter';\n}\n\nfunction isSelectionKey() {\n  let event = window.event as KeyboardEvent;\n  return event?.key === ' ' || event?.code === 'Space';\n}\n", "/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getItemElement} from './utils';\nimport {Key, LayoutDelegate, Rect, RefObject, Size} from '@react-types/shared';\n\nexport class DOMLayoutDelegate implements LayoutDelegate {\n  private ref: RefObject<HTMLElement | null>;\n\n  constructor(ref: RefObject<HTMLElement | null>) {\n    this.ref = ref;\n  }\n\n  getItemRect(key: Key): Rect | null {\n    let container = this.ref.current;\n    if (!container) {\n      return null;\n    }\n    let item = key != null ? getItemElement(this.ref, key) : null;\n    if (!item) {\n      return null;\n    }\n\n    let containerRect = container.getBoundingClientRect();\n    let itemRect = item.getBoundingClientRect();\n\n    return {\n      x: itemRect.left - containerRect.left + container.scrollLeft,\n      y: itemRect.top - containerRect.top + container.scrollTop,\n      width: itemRect.width,\n      height: itemRect.height\n    };\n  }\n\n  getContentSize(): Size {\n    let container = this.ref.current;\n    return {\n      width: container?.scrollWidth ?? 0,\n      height: container?.scrollHeight ?? 0\n    };\n  }\n\n  getVisibleRect(): Rect {\n    let container = this.ref.current;\n    return {\n      x: container?.scrollLeft ?? 0,\n      y: container?.scrollTop ?? 0,\n      width: container?.offsetWidth ?? 0,\n      height: container?.offsetHeight ?? 0\n    };\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Direction, DisabledBehavior, Key, KeyboardDelegate, LayoutDelegate, Node, Orientation, Rect, RefObject} from '@react-types/shared';\nimport {DOMLayoutDelegate} from './DOMLayoutDelegate';\nimport {isScrollable} from '@react-aria/utils';\n\ninterface ListKeyboardDelegateOptions<T> {\n  collection: Collection<Node<T>>,\n  ref: RefObject<HTMLElement | null>,\n  collator?: Intl.Collator,\n  layout?: 'stack' | 'grid',\n  orientation?: Orientation,\n  direction?: Direction,\n  disabledKeys?: Set<Key>,\n  disabledBehavior?: DisabledBehavior,\n  layoutDelegate?: LayoutDelegate\n}\n\nexport class ListKeyboardDelegate<T> implements KeyboardDelegate {\n  private collection: Collection<Node<T>>;\n  private disabledKeys: Set<Key>;\n  private disabledBehavior: DisabledBehavior;\n  private ref: RefObject<HTMLElement | null>;\n  private collator: Intl.Collator | undefined;\n  private layout: 'stack' | 'grid';\n  private orientation?: Orientation;\n  private direction?: Direction;\n  private layoutDelegate: LayoutDelegate;\n\n  constructor(collection: Collection<Node<T>>, disabledKeys: Set<Key>, ref: RefObject<HTMLElement | null>, collator?: Intl.Collator);\n  constructor(options: ListKeyboardDelegateOptions<T>);\n  constructor(...args: any[]) {\n    if (args.length === 1) {\n      let opts = args[0] as ListKeyboardDelegateOptions<T>;\n      this.collection = opts.collection;\n      this.ref = opts.ref;\n      this.collator = opts.collator;\n      this.disabledKeys = opts.disabledKeys || new Set();\n      this.disabledBehavior = opts.disabledBehavior || 'all';\n      this.orientation = opts.orientation || 'vertical';\n      this.direction = opts.direction;\n      this.layout = opts.layout || 'stack';\n      this.layoutDelegate = opts.layoutDelegate || new DOMLayoutDelegate(opts.ref);\n    } else {\n      this.collection = args[0];\n      this.disabledKeys = args[1];\n      this.ref = args[2];\n      this.collator = args[3];\n      this.layout = 'stack';\n      this.orientation = 'vertical';\n      this.disabledBehavior = 'all';\n      this.layoutDelegate = new DOMLayoutDelegate(this.ref);\n    }\n\n    // If this is a vertical stack, remove the left/right methods completely\n    // so they aren't called by useDroppableCollection.\n    if (this.layout === 'stack' && this.orientation === 'vertical') {\n      this.getKeyLeftOf = undefined;\n      this.getKeyRightOf = undefined;\n    }\n  }\n\n  private isDisabled(item: Node<unknown>) {\n    return this.disabledBehavior === 'all' && (item.props?.isDisabled || this.disabledKeys.has(item.key));\n  }\n\n  private findNextNonDisabled(key: Key | null, getNext: (key: Key) => Key | null): Key | null {\n    let nextKey = key;\n    while (nextKey != null) {\n      let item = this.collection.getItem(nextKey);\n      if (item?.type === 'item' && !this.isDisabled(item)) {\n        return nextKey;\n      }\n\n      nextKey = getNext(nextKey);\n    }\n\n    return null;\n  }\n\n  getNextKey(key: Key): Key | null {\n    let nextKey: Key | null = key;\n    nextKey = this.collection.getKeyAfter(nextKey);\n    return this.findNextNonDisabled(nextKey, key => this.collection.getKeyAfter(key));\n  }\n\n  getPreviousKey(key: Key): Key | null {\n    let nextKey: Key | null = key;\n    nextKey = this.collection.getKeyBefore(nextKey);\n    return this.findNextNonDisabled(nextKey, key => this.collection.getKeyBefore(key));\n  }\n\n  private findKey(\n    key: Key,\n    nextKey: (key: Key) => Key | null,\n    shouldSkip: (prevRect: Rect, itemRect: Rect) => boolean\n  ) {\n    let tempKey: Key | null = key;\n    let itemRect = this.layoutDelegate.getItemRect(tempKey);\n    if (!itemRect || tempKey == null) {\n      return null;\n    }\n\n    // Find the item above or below in the same column.\n    let prevRect = itemRect;\n    do {\n      tempKey = nextKey(tempKey);\n      if (tempKey == null) {\n        break;\n      }\n      itemRect = this.layoutDelegate.getItemRect(tempKey);\n    } while (itemRect && shouldSkip(prevRect, itemRect) && tempKey != null);\n\n    return tempKey;\n  }\n\n  private isSameRow(prevRect: Rect, itemRect: Rect) {\n    return prevRect.y === itemRect.y || prevRect.x !== itemRect.x;\n  }\n\n  private isSameColumn(prevRect: Rect, itemRect: Rect) {\n    return prevRect.x === itemRect.x || prevRect.y !== itemRect.y;\n  }\n\n  getKeyBelow(key: Key): Key | null {\n    if (this.layout === 'grid' && this.orientation === 'vertical') {\n      return this.findKey(key, (key) => this.getNextKey(key), this.isSameRow);\n    } else {\n      return this.getNextKey(key);\n    }\n  }\n\n  getKeyAbove(key: Key): Key | null {\n    if (this.layout === 'grid' && this.orientation === 'vertical') {\n      return this.findKey(key, (key) => this.getPreviousKey(key), this.isSameRow);\n    } else {\n      return this.getPreviousKey(key);\n    }\n  }\n\n  private getNextColumn(key: Key, right: boolean) {\n    return right ? this.getPreviousKey(key) : this.getNextKey(key);\n  }\n\n  getKeyRightOf?(key: Key): Key | null {\n    // This is a temporary solution for CardView until we refactor useSelectableCollection.\n    // https://github.com/orgs/adobe/projects/19/views/32?pane=issue&itemId=77825042\n    let layoutDelegateMethod = this.direction === 'ltr' ? 'getKeyRightOf' : 'getKeyLeftOf';\n    if (this.layoutDelegate[layoutDelegateMethod]) {\n      key = this.layoutDelegate[layoutDelegateMethod](key);\n      return this.findNextNonDisabled(key, key => this.layoutDelegate[layoutDelegateMethod](key));\n    }\n\n    if (this.layout === 'grid') {\n      if (this.orientation === 'vertical') {\n        return this.getNextColumn(key, this.direction === 'rtl');\n      } else {\n        return this.findKey(key, (key) => this.getNextColumn(key, this.direction === 'rtl'), this.isSameColumn);\n      }\n    } else if (this.orientation === 'horizontal') {\n      return this.getNextColumn(key, this.direction === 'rtl');\n    }\n\n    return null;\n  }\n\n  getKeyLeftOf?(key: Key): Key | null {\n    let layoutDelegateMethod = this.direction === 'ltr' ? 'getKeyLeftOf' : 'getKeyRightOf';\n    if (this.layoutDelegate[layoutDelegateMethod]) {\n      key = this.layoutDelegate[layoutDelegateMethod](key);\n      return this.findNextNonDisabled(key, key => this.layoutDelegate[layoutDelegateMethod](key));\n    }\n\n    if (this.layout === 'grid') {\n      if (this.orientation === 'vertical') {\n        return this.getNextColumn(key, this.direction === 'ltr');\n      } else {\n        return this.findKey(key, (key) => this.getNextColumn(key, this.direction === 'ltr'), this.isSameColumn);\n      }\n    } else if (this.orientation === 'horizontal') {\n      return this.getNextColumn(key, this.direction === 'ltr');\n    }\n\n    return null;\n  }\n\n  getFirstKey(): Key | null {\n    let key = this.collection.getFirstKey();\n    return this.findNextNonDisabled(key, key => this.collection.getKeyAfter(key));\n  }\n\n  getLastKey(): Key | null {\n    let key = this.collection.getLastKey();\n    return this.findNextNonDisabled(key, key => this.collection.getKeyBefore(key));\n  }\n\n  getKeyPageAbove(key: Key): Key | null {\n    let menu = this.ref.current;\n    let itemRect = this.layoutDelegate.getItemRect(key);\n    if (!itemRect) {\n      return null;\n    }\n\n    if (menu && !isScrollable(menu)) {\n      return this.getFirstKey();\n    }\n\n    let nextKey: Key | null = key;\n    if (this.orientation === 'horizontal') {\n      let pageX = Math.max(0, itemRect.x + itemRect.width - this.layoutDelegate.getVisibleRect().width);\n\n      while (itemRect && itemRect.x > pageX && nextKey != null) {\n        nextKey = this.getKeyAbove(nextKey);\n        itemRect = nextKey == null ? null : this.layoutDelegate.getItemRect(nextKey);\n      }\n    } else {\n      let pageY = Math.max(0, itemRect.y + itemRect.height - this.layoutDelegate.getVisibleRect().height);\n\n      while (itemRect && itemRect.y > pageY && nextKey != null) {\n        nextKey = this.getKeyAbove(nextKey);\n        itemRect = nextKey == null ? null : this.layoutDelegate.getItemRect(nextKey);\n      }\n    }\n\n    return nextKey ?? this.getFirstKey();\n  }\n\n  getKeyPageBelow(key: Key): Key | null {\n    let menu = this.ref.current;\n    let itemRect = this.layoutDelegate.getItemRect(key);\n    if (!itemRect) {\n      return null;\n    }\n\n    if (menu && !isScrollable(menu)) {\n      return this.getLastKey();\n    }\n\n    let nextKey: Key | null = key;\n    if (this.orientation === 'horizontal') {\n      let pageX = Math.min(this.layoutDelegate.getContentSize().width, itemRect.y - itemRect.width + this.layoutDelegate.getVisibleRect().width);\n\n      while (itemRect && itemRect.x < pageX && nextKey != null) {\n        nextKey = this.getKeyBelow(nextKey);\n        itemRect = nextKey == null ? null : this.layoutDelegate.getItemRect(nextKey);\n      }\n    } else {\n      let pageY = Math.min(this.layoutDelegate.getContentSize().height, itemRect.y - itemRect.height + this.layoutDelegate.getVisibleRect().height);\n\n      while (itemRect && itemRect.y < pageY && nextKey != null) {\n        nextKey = this.getKeyBelow(nextKey);\n        itemRect = nextKey == null ? null : this.layoutDelegate.getItemRect(nextKey);\n      }\n    }\n\n    return nextKey ?? this.getLastKey();\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key): Key | null {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey || this.getFirstKey();\n    while (key != null) {\n      let item = collection.getItem(key);\n      if (!item) {\n        return null;\n      }\n      let substring = item.textValue.slice(0, search.length);\n      if (item.textValue && this.collator.compare(substring, search) === 0) {\n        return key;\n      }\n\n      key = this.getNextKey(key);\n    }\n\n    return null;\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaSelectableCollectionOptions, useSelectableCollection} from './useSelectableCollection';\nimport {Collection, DOMAttributes, Key, KeyboardDelegate, LayoutDelegate, Node} from '@react-types/shared';\nimport {ListKeyboardDelegate} from './ListKeyboardDelegate';\nimport {useCollator} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\nexport interface AriaSelectableListOptions extends Omit<AriaSelectableCollectionOptions, 'keyboardDelegate'> {\n  /**\n   * State of the collection.\n   */\n  collection: Collection<Node<unknown>>,\n  /**\n   * A delegate object that implements behavior for keyboard focus movement.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * A delegate object that provides layout information for items in the collection.\n   * By default this uses the DOM, but this can be overridden to implement things like\n   * virtualized scrolling.\n   */\n  layoutDelegate?: LayoutDelegate,\n  /**\n   * The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\n   */\n  disabledKeys: Set<Key>\n}\n\nexport interface SelectableListAria {\n  /**\n   * Props for the option element.\n   */\n  listProps: DOMAttributes\n}\n\n/**\n * Handles interactions with a selectable list.\n */\nexport function useSelectableList(props: AriaSelectableListOptions): SelectableListAria {\n  let {\n    selectionManager,\n    collection,\n    disabledKeys,\n    ref,\n    keyboardDelegate,\n    layoutDelegate\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let disabledBehavior = selectionManager.disabledBehavior;\n  let delegate = useMemo(() => (\n    keyboardDelegate || new ListKeyboardDelegate({\n      collection,\n      disabledKeys,\n      disabledBehavior,\n      ref,\n      collator,\n      layoutDelegate\n    })\n  ), [keyboardDelegate, layoutDelegate, collection, disabledKeys, ref, collator, disabledBehavior]);\n\n  let {collectionProps} = useSelectableCollection({\n    ...props,\n    ref,\n    selectionManager,\n    keyboardDelegate: delegate\n  });\n\n  return {\n    listProps: collectionProps\n  };\n}\n", "\nimport {RefObject} from '@react-types/shared';\nimport {useEffect, useRef, useState} from 'react';\nimport {useEffectEvent, useResizeObserver} from '@react-aria/utils';\nimport {useInteractionModality} from '@react-aria/interactions';\n\ninterface SafelyMouseToSubmenuOptions {\n  /** Ref for the parent menu. */\n  menuRef: RefObject<Element | null>,\n  /** Ref for the submenu. */\n  submenuRef: RefObject<Element | null>,\n  /** Whether the submenu is open. */\n  isOpen: boolean,\n  /** Whether this feature is disabled. */\n  isDisabled?: boolean\n}\n\nconst ALLOWED_INVALID_MOVEMENTS = 2;\nconst THROTTLE_TIME = 50;\nconst TIMEOUT_TIME = 1000;\nconst ANGLE_PADDING = Math.PI / 12; // 15°\n\n/**\n * Allows the user to move their pointer to the submenu without it closing when their mouse leaves the trigger element.\n * Prevents pointer events from going to the underlying menu if the user is moving their pointer towards the sub-menu.\n */\nexport function useSafelyMouseToSubmenu(options: SafelyMouseToSubmenuOptions): void {\n  let {menuRef, submenuRef, isOpen, isDisabled} = options;\n  let prevPointerPos = useRef<{x: number, y: number} | undefined>(undefined);\n  let submenuRect = useRef<DOMRect | undefined>(undefined);\n  let lastProcessedTime = useRef<number>(0);\n  let timeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n  let autoCloseTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n  let submenuSide = useRef<'left' | 'right' | undefined>(undefined);\n  let movementsTowardsSubmenuCount = useRef<number>(2);\n  let [preventPointerEvents, setPreventPointerEvents] = useState(false);\n\n  let updateSubmenuRect = () => {\n    if (submenuRef.current) {\n      submenuRect.current = submenuRef.current.getBoundingClientRect();\n      submenuSide.current = undefined;\n    }\n  };\n  useResizeObserver({ref: submenuRef, onResize: updateSubmenuRect});\n\n  let reset = () => {\n    setPreventPointerEvents(false);\n    movementsTowardsSubmenuCount.current = ALLOWED_INVALID_MOVEMENTS;\n    prevPointerPos.current = undefined;\n  };\n\n  let modality = useInteractionModality();\n\n  // Prevent mouse down over safe triangle. Clicking while pointer-events: none is applied\n  // will cause focus to move unexpectedly since it will go to an element behind the menu.\n  let onPointerDown = useEffectEvent((e: PointerEvent) => {\n    if (preventPointerEvents) {\n      e.preventDefault();\n    }\n  });\n\n  useEffect(() => {\n    if (preventPointerEvents && menuRef.current) {\n      (menuRef.current as HTMLElement).style.pointerEvents = 'none';\n    } else {\n      (menuRef.current as HTMLElement).style.pointerEvents = '';\n    }\n  }, [menuRef, preventPointerEvents]);\n\n  useEffect(() => {\n    let submenu = submenuRef.current;\n    let menu = menuRef.current;\n\n    if (isDisabled || !submenu || !isOpen || modality !== 'pointer' || !menu) {\n      reset();\n      return;\n    }\n    submenuRect.current = submenu.getBoundingClientRect();\n\n    let onPointerMove = (e: PointerEvent) => {\n      if (e.pointerType === 'touch' || e.pointerType === 'pen') {\n        return;\n      }\n\n      let currentTime = Date.now();\n\n      // Throttle\n      if (currentTime - lastProcessedTime.current < THROTTLE_TIME) {\n        return;\n      }\n      clearTimeout(timeout.current);\n      clearTimeout(autoCloseTimeout.current);\n\n      let {clientX: mouseX, clientY: mouseY} = e;\n\n      if (!prevPointerPos.current) {\n        prevPointerPos.current = {x: mouseX, y: mouseY};\n        return;\n      }\n\n      if (!submenuRect.current) {\n        return;\n      }\n\n      if (!submenuSide.current) {\n        submenuSide.current = mouseX > submenuRect.current.right ? 'left' : 'right';\n      }\n\n      // Pointer is outside of parent menu\n      if (mouseX < menu.getBoundingClientRect().left || mouseX > menu.getBoundingClientRect().right || mouseY < menu.getBoundingClientRect().top || mouseY > menu.getBoundingClientRect().bottom) {\n        reset();\n        return;\n      }\n\n      /* Check if pointer is moving towards submenu.\n        Uses the 2-argument arctangent (https://en.wikipedia.org/wiki/Atan2) to calculate:\n          - angle between previous pointer and top of submenu\n          - angle between previous pointer and bottom of submenu\n          - angle between previous pointer and current pointer (delta)\n        If the pointer delta angle value is between the top and bottom angle values, we know the pointer is moving towards the submenu.\n      */\n      let prevMouseX = prevPointerPos.current.x;\n      let prevMouseY = prevPointerPos.current.y;\n      let toSubmenuX = submenuSide.current === 'right' ? submenuRect.current.left - prevMouseX : prevMouseX - submenuRect.current.right;\n      let angleTop = Math.atan2(prevMouseY - submenuRect.current.top, toSubmenuX) + ANGLE_PADDING;\n      let angleBottom = Math.atan2(prevMouseY - submenuRect.current.bottom, toSubmenuX) - ANGLE_PADDING;\n      let anglePointer = Math.atan2(prevMouseY - mouseY, (submenuSide.current === 'left' ? -(mouseX - prevMouseX) : mouseX - prevMouseX));\n      let isMovingTowardsSubmenu = anglePointer < angleTop && anglePointer > angleBottom;\n\n      movementsTowardsSubmenuCount.current = isMovingTowardsSubmenu ?\n        Math.min(movementsTowardsSubmenuCount.current + 1, ALLOWED_INVALID_MOVEMENTS) :\n        Math.max(movementsTowardsSubmenuCount.current - 1, 0);\n\n      if (movementsTowardsSubmenuCount.current >= ALLOWED_INVALID_MOVEMENTS) {\n        setPreventPointerEvents(true);\n      } else {\n        setPreventPointerEvents(false);\n      }\n\n      lastProcessedTime.current = currentTime;\n      prevPointerPos.current = {x: mouseX, y: mouseY};\n\n      // If the pointer is moving towards the submenu, start a timeout to close if no other movements are made after 500ms.\n      if (isMovingTowardsSubmenu) {\n        timeout.current = setTimeout(() => {\n          reset();\n          autoCloseTimeout.current = setTimeout(() => {\n            // Fire a pointerover event to trigger the menu to close.\n            // Wait until pointer-events:none is no longer applied\n            let target = document.elementFromPoint(mouseX, mouseY);\n            if (target && menu.contains(target)) {\n              target.dispatchEvent(new PointerEvent('pointerover', {bubbles: true, cancelable: true}));\n            }\n          }, 100);\n        }, TIMEOUT_TIME);\n      }\n    };\n\n    window.addEventListener('pointermove', onPointerMove);\n\n    // Prevent pointer down over the safe triangle. See above comment.\n    // Do not enable in tests, because JSDom doesn't do hit testing.\n    if (process.env.NODE_ENV !== 'test') {\n      window.addEventListener('pointerdown', onPointerDown, true);\n    }\n\n    return () => {\n      window.removeEventListener('pointermove', onPointerMove);\n      if (process.env.NODE_ENV !== 'test') {\n        window.removeEventListener('pointerdown', onPointerDown, true);\n      }\n      clearTimeout(timeout.current);\n      clearTimeout(autoCloseTimeout.current);\n      movementsTowardsSubmenuCount.current = ALLOWED_INVALID_MOVEMENTS;\n    };\n\n  }, [isDisabled, isOpen, menuRef, modality, setPreventPointerEvents, onPointerDown, submenuRef]);\n}\n", "// src/use-multiselect.ts\nimport { useCollator } from \"@react-aria/i18n\";\nimport { setInteractionModality } from \"@react-aria/interactions\";\nimport { useField } from \"@react-aria/label\";\nimport { useMenuTrigger } from \"@react-aria/menu\";\nimport { ListKeyboardDelegate, useTypeSelect } from \"@react-aria/selection\";\nimport { chain, filterDOMProps, mergeProps, useId } from \"@react-aria/utils\";\nimport { useMemo } from \"react\";\nfunction useMultiSelect(props, state, ref) {\n  const { disallowEmptySelection, isDisabled } = props;\n  const collator = useCollator({ usage: \"search\", sensitivity: \"base\" });\n  const delegate = useMemo(\n    () => new ListKeyboardDelegate(state.collection, state.disabledKeys, null, collator),\n    [state.collection, state.disabledKeys, collator]\n  );\n  const { menuTriggerProps, menuProps } = useMenuTrigger(\n    {\n      isDisabled,\n      type: \"listbox\"\n    },\n    state,\n    ref\n  );\n  const triggerOnKeyDown = (e) => {\n    if (state.selectionMode === \"single\") {\n      switch (e.key) {\n        case \"ArrowLeft\": {\n          e.preventDefault();\n          const key = state.selectedKeys.size > 0 ? delegate.getKeyAbove(state.selectedKeys.values().next().value) : delegate.getFirstKey();\n          if (key) {\n            state.setSelectedKeys([key]);\n          }\n          break;\n        }\n        case \"ArrowRight\": {\n          e.preventDefault();\n          const key = state.selectedKeys.size > 0 ? delegate.getKeyBelow(state.selectedKeys.values().next().value) : delegate.getFirstKey();\n          if (key) {\n            state.setSelectedKeys([key]);\n          }\n          break;\n        }\n      }\n    }\n  };\n  const { typeSelectProps } = useTypeSelect({\n    keyboardDelegate: delegate,\n    selectionManager: state.selectionManager,\n    onTypeSelect(key) {\n      state.setSelectedKeys([key]);\n    }\n  });\n  const { isInvalid, validationErrors, validationDetails } = state.displayValidation;\n  const { labelProps, fieldProps, descriptionProps, errorMessageProps } = useField({\n    ...props,\n    labelElementType: \"span\",\n    isInvalid,\n    errorMessage: props.errorMessage || validationErrors\n  });\n  typeSelectProps.onKeyDown = typeSelectProps.onKeyDownCapture;\n  delete typeSelectProps.onKeyDownCapture;\n  menuTriggerProps.onPressStart = (e) => {\n    if (e.pointerType !== \"touch\" && e.pointerType !== \"keyboard\" && !isDisabled) {\n      state.toggle(e.pointerType === \"virtual\" ? \"first\" : null);\n    }\n  };\n  const domProps = filterDOMProps(props, { labelable: true });\n  const triggerProps = mergeProps(typeSelectProps, menuTriggerProps, fieldProps);\n  const valueId = useId();\n  return {\n    labelProps: {\n      ...labelProps,\n      onClick: () => {\n        var _a;\n        if (!props.isDisabled) {\n          (_a = ref.current) == null ? void 0 : _a.focus();\n          setInteractionModality(\"keyboard\");\n        }\n      }\n    },\n    triggerProps: mergeProps(domProps, {\n      ...triggerProps,\n      onKeyDown: chain(triggerProps.onKeyDown, triggerOnKeyDown, props.onKeyDown),\n      onKeyUp: props.onKeyUp,\n      \"aria-labelledby\": [\n        valueId,\n        triggerProps[\"aria-labelledby\"],\n        triggerProps[\"aria-label\"] && !triggerProps[\"aria-labelledby\"] ? triggerProps.id : null\n      ].join(\" \"),\n      onFocus(e) {\n        if (state.isFocused) {\n          return;\n        }\n        if (props.onFocus) {\n          props.onFocus(e);\n        }\n        state.setFocused(true);\n      },\n      onBlur(e) {\n        if (state.isOpen) {\n          return;\n        }\n        if (props.onBlur) {\n          props.onBlur(e);\n        }\n        state.setFocused(false);\n      }\n    }),\n    valueProps: {\n      id: valueId\n    },\n    menuProps: {\n      ...menuProps,\n      disallowEmptySelection,\n      autoFocus: state.focusStrategy || true,\n      shouldSelectOnPressUp: true,\n      shouldFocusOnHover: true,\n      onBlur: (e) => {\n        if (e.currentTarget.contains(e.relatedTarget)) {\n          return;\n        }\n        if (props.onBlur) {\n          props.onBlur(e);\n        }\n        state.setFocused(false);\n      },\n      // @ts-ignore\n      onFocus: menuProps == null ? void 0 : menuProps.onFocus,\n      \"aria-labelledby\": [\n        fieldProps[\"aria-labelledby\"],\n        triggerProps[\"aria-label\"] && !fieldProps[\"aria-labelledby\"] ? triggerProps.id : null\n      ].filter(Boolean).join(\" \")\n    },\n    descriptionProps,\n    errorMessageProps,\n    isInvalid,\n    validationErrors,\n    validationDetails\n  };\n}\n\nexport {\n  useMultiSelect\n};\n", "// src/index.ts\nimport React, { useEffect, useRef, useCallback } from \"react\";\nvar useLayoutEffect = typeof document !== \"undefined\" ? React.useLayoutEffect : () => {\n};\nfunction useEffectEvent(fn) {\n  const ref = useRef(null);\n  useLayoutEffect(() => {\n    ref.current = fn;\n  }, [fn]);\n  return useCallback((...args) => {\n    const f = ref.current;\n    return f == null ? void 0 : f(...args);\n  }, []);\n}\nfunction useFormReset(ref, initialValue, onReset) {\n  let resetValue = useRef(initialValue);\n  let handleReset = useEffectEvent(() => {\n    if (onReset) {\n      onReset(resetValue.current);\n    }\n  });\n  useEffect(() => {\n    var _a;\n    let form = (_a = ref == null ? void 0 : ref.current) == null ? void 0 : _a.form;\n    form == null ? void 0 : form.addEventListener(\"reset\", handleReset);\n    return () => {\n      form == null ? void 0 : form.removeEventListener(\"reset\", handleReset);\n    };\n  }, [ref, handleReset]);\n}\nexport {\n  useEffectEvent,\n  useFormReset,\n  useLayoutEffect\n};\n", "\"use client\";\nimport {\n  selectData\n} from \"./chunk-XAZU4BXN.mjs\";\n\n// src/hidden-select.tsx\nimport { useFormReset } from \"@heroui/use-form-reset\";\nimport { useVisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { useFormValidation } from \"@react-aria/form\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nfunction useHiddenSelect(props, state, triggerRef) {\n  var _a;\n  let data = selectData.get(state) || {};\n  let {\n    autoComplete,\n    name = data.name,\n    isDisabled = data.isDisabled,\n    selectionMode,\n    onChange,\n    form\n  } = props;\n  let { validationBehavior, isRequired, isInvalid } = data;\n  let { visuallyHiddenProps } = useVisuallyHidden();\n  useFormReset(props.selectRef, state.selectedKeys, state.setSelectedKeys);\n  useFormValidation(\n    {\n      validationBehavior,\n      focus: () => {\n        var _a2;\n        return (_a2 = triggerRef.current) == null ? void 0 : _a2.focus();\n      }\n    },\n    state,\n    props.selectRef\n  );\n  return {\n    containerProps: {\n      ...visuallyHiddenProps,\n      \"aria-hidden\": true,\n      [\"data-a11y-ignore\"]: \"aria-hidden-focus\"\n    },\n    inputProps: {\n      style: { display: \"none\" }\n    },\n    selectProps: {\n      form,\n      autoComplete,\n      disabled: isDisabled,\n      \"aria-invalid\": isInvalid || void 0,\n      \"aria-required\": isRequired && validationBehavior === \"aria\" || void 0,\n      required: isRequired && validationBehavior === \"native\",\n      name,\n      tabIndex: -1,\n      value: selectionMode === \"multiple\" ? [...state.selectedKeys].map((k) => String(k)) : (_a = [...state.selectedKeys][0]) != null ? _a : \"\",\n      multiple: selectionMode === \"multiple\",\n      onChange: (e) => {\n        state.setSelectedKeys(e.target.value);\n        onChange == null ? void 0 : onChange(e);\n      }\n    }\n  };\n}\nfunction HiddenSelect(props) {\n  var _a;\n  let { state, triggerRef, selectRef, label, name, isDisabled, form } = props;\n  let { containerProps, selectProps } = useHiddenSelect({ ...props, selectRef }, state, triggerRef);\n  if (state.collection.size <= 300) {\n    return /* @__PURE__ */ jsx(\"div\", { ...containerProps, \"data-testid\": \"hidden-select-container\", children: /* @__PURE__ */ jsxs(\"label\", { children: [\n      label,\n      /* @__PURE__ */ jsxs(\"select\", { ...selectProps, ref: selectRef, children: [\n        /* @__PURE__ */ jsx(\"option\", {}),\n        [...state.collection.getKeys()].map((key) => {\n          let item = state.collection.getItem(key);\n          if ((item == null ? void 0 : item.type) === \"item\") {\n            return /* @__PURE__ */ jsx(\"option\", { value: item.key, children: item.textValue }, item.key);\n          }\n        })\n      ] })\n    ] }) });\n  } else if (name) {\n    return /* @__PURE__ */ jsx(\n      \"input\",\n      {\n        autoComplete: selectProps.autoComplete,\n        disabled: isDisabled,\n        form,\n        name,\n        type: \"hidden\",\n        value: (_a = [...state.selectedKeys].join(\",\")) != null ? _a : \"\"\n      }\n    );\n  }\n  return null;\n}\n\nexport {\n  useHiddenSelect,\n  HiddenSelect\n};\n", "\"use client\";\n\n// src/base/listbox-item-base.tsx\nimport { BaseItem } from \"@heroui/aria-utils\";\nvar ListboxItemBase = BaseItem;\nvar listbox_item_base_default = ListboxItemBase;\n\nexport {\n  listbox_item_base_default\n};\n", "\"use client\";\n\n// src/base/listbox-section-base.tsx\nimport { BaseSection } from \"@heroui/aria-utils\";\nvar ListboxSectionBase = BaseSection;\nvar listbox_section_base_default = ListboxSectionBase;\n\nexport {\n  listbox_section_base_default\n};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from '@react-types/shared';\nimport {ListState} from '@react-stately/list';\n\ninterface ListData {\n  id?: string,\n  shouldSelectOnPressUp?: boolean,\n  shouldFocusOnHover?: boolean,\n  shouldUseVirtualFocus?: boolean,\n  isVirtualized?: boolean,\n  onAction?: (key: Key) => void,\n  linkBehavior?: 'action' | 'selection' | 'override'\n}\n\nexport const listData: WeakMap<ListState<unknown>, ListData> = new WeakMap<ListState<unknown>, ListData>();\n\nfunction normalizeKey(key: Key): string {\n  if (typeof key === 'string') {\n    return key.replace(/\\s*/g, '');\n  }\n\n  return '' + key;\n}\n\nexport function getItemId<T>(state: ListState<T>, itemKey: Key): string {\n  let data = listData.get(state);\n\n  if (!data) {\n    throw new Error('Unknown list');\n  }\n\n  return `${data.id}-option-${normalizeKey(itemKey)}`;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaListBoxProps} from '@react-types/listbox';\nimport {DOMAttributes, KeyboardDelegate, LayoutDelegate, RefObject} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId} from '@react-aria/utils';\nimport {listData} from './utils';\nimport {ListState} from '@react-stately/list';\nimport {useFocusWithin} from '@react-aria/interactions';\nimport {useLabel} from '@react-aria/label';\nimport {useSelectableList} from '@react-aria/selection';\n\nexport interface ListBoxAria {\n  /** Props for the listbox element. */\n  listBoxProps: DOMAttributes,\n  /** Props for the listbox's visual label element (if any). */\n  labelProps: DOMAttributes\n}\n\nexport interface AriaListBoxOptions<T> extends Omit<AriaListBoxProps<T>, 'children'> {\n  /** Whether the listbox uses virtual scrolling. */\n  isVirtualized?: boolean,\n\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n\n  /**\n   * A delegate object that provides layout information for items in the collection.\n   * By default this uses the DOM, but this can be overridden to implement things like\n   * virtualized scrolling.\n   */\n  layoutDelegate?: LayoutDelegate,\n\n  /**\n   * Whether the listbox items should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean,\n\n  /**\n   * The behavior of links in the collection.\n   * - 'action': link behaves like onAction.\n   * - 'selection': link follows selection interactions (e.g. if URL drives selection).\n   * - 'override': links override all other interactions (link items are not selectable).\n   * @default 'override'\n   */\n  linkBehavior?: 'action' | 'selection' | 'override'\n}\n\n/**\n * Provides the behavior and accessibility implementation for a listbox component.\n * A listbox displays a list of options and allows a user to select one or more of them.\n * @param props - Props for the listbox.\n * @param state - State for the listbox, as returned by `useListState`.\n */\nexport function useListBox<T>(props: AriaListBoxOptions<T>, state: ListState<T>, ref: RefObject<HTMLElement | null>): ListBoxAria {\n  let domProps = filterDOMProps(props, {labelable: true});\n  // Use props instead of state here. We don't want this to change due to long press.\n  let selectionBehavior = props.selectionBehavior || 'toggle';\n  let linkBehavior = props.linkBehavior || (selectionBehavior === 'replace' ? 'action' : 'override');\n  if (selectionBehavior === 'toggle' && linkBehavior === 'action') {\n    // linkBehavior=\"action\" does not work with selectionBehavior=\"toggle\" because there is no way\n    // to initiate selection (checkboxes are not allowed inside a listbox). Link items will not be\n    // selectable in this configuration.\n    linkBehavior = 'override';\n  }\n\n  let {listProps} = useSelectableList({\n    ...props,\n    ref,\n    selectionManager: state.selectionManager,\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    linkBehavior\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    onFocusWithin: props.onFocus,\n    onBlurWithin: props.onBlur,\n    onFocusWithinChange: props.onFocusChange\n  });\n\n  // Share list id and some props with child options.\n  let id = useId(props.id);\n  listData.set(state, {\n    id,\n    shouldUseVirtualFocus: props.shouldUseVirtualFocus,\n    shouldSelectOnPressUp: props.shouldSelectOnPressUp,\n    shouldFocusOnHover: props.shouldFocusOnHover,\n    isVirtualized: props.isVirtualized,\n    onAction: props.onAction,\n    linkBehavior\n  });\n\n  let {labelProps, fieldProps} = useLabel({\n    ...props,\n    id,\n    // listbox is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span'\n  });\n\n  return {\n    labelProps,\n    listBoxProps: mergeProps(domProps, focusWithinProps, state.selectionManager.selectionMode === 'multiple' ? {\n      'aria-multiselectable': 'true'\n    } : {}, {\n      role: 'listbox',\n      ...mergeProps(fieldProps, listProps)\n    })\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {chain, filterDOMProps, isMac, isWebKit, mergeProps, useLinkProps, useSlotId} from '@react-aria/utils';\nimport {DOMAttributes, FocusableElement, Key, RefObject} from '@react-types/shared';\nimport {getItemCount} from '@react-stately/collections';\nimport {getItemId, listData} from './utils';\nimport {isFocusVisible, useHover} from '@react-aria/interactions';\nimport {ListState} from '@react-stately/list';\nimport {SelectableItemStates, useSelectableItem} from '@react-aria/selection';\n\nexport interface OptionAria extends SelectableItemStates {\n  /** Props for the option element. */\n  optionProps: DOMAttributes,\n\n  /** Props for the main text element inside the option. */\n  labelProps: DOMAttributes,\n\n  /** Props for the description text element inside the option, if any. */\n  descriptionProps: DOMAttributes,\n\n  /** Whether the option is currently focused. */\n  isFocused: boolean,\n\n  /** Whether the option is keyboard focused. */\n  isFocusVisible: boolean\n}\n\nexport interface AriaOptionProps {\n  /**\n   * Whether the option is disabled.\n   * @deprecated\n   */\n  isDisabled?: boolean,\n\n  /**\n   * Whether the option is selected.\n   * @deprecated\n   */\n  isSelected?: boolean,\n\n  /** A screen reader only label for the option. */\n  'aria-label'?: string,\n\n  /** The unique key for the option. */\n  key: Key,\n\n  /**\n   * Whether selection should occur on press up instead of press down.\n   * @deprecated\n   */\n  shouldSelectOnPressUp?: boolean,\n\n  /**\n   * Whether the option should be focused when the user hovers over it.\n   * @deprecated\n   */\n  shouldFocusOnHover?: boolean,\n\n  /**\n   * Whether the option is contained in a virtual scrolling listbox.\n   * @deprecated\n   */\n  isVirtualized?: boolean,\n\n  /**\n   * Whether the option should use virtual focus instead of being focused directly.\n   * @deprecated\n   */\n  shouldUseVirtualFocus?: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for an option in a listbox.\n * See `useListBox` for more details about listboxes.\n * @param props - Props for the option.\n * @param state - State for the listbox, as returned by `useListState`.\n */\nexport function useOption<T>(props: AriaOptionProps, state: ListState<T>, ref: RefObject<FocusableElement | null>): OptionAria {\n  let {\n    key\n  } = props;\n\n  let data = listData.get(state);\n\n  let isDisabled = props.isDisabled ?? state.selectionManager.isDisabled(key);\n  let isSelected = props.isSelected ?? state.selectionManager.isSelected(key);\n  let shouldSelectOnPressUp = props.shouldSelectOnPressUp ?? data?.shouldSelectOnPressUp;\n  let shouldFocusOnHover = props.shouldFocusOnHover ?? data?.shouldFocusOnHover;\n  let shouldUseVirtualFocus = props.shouldUseVirtualFocus ?? data?.shouldUseVirtualFocus;\n  let isVirtualized = props.isVirtualized ?? data?.isVirtualized;\n\n  let labelId = useSlotId();\n  let descriptionId = useSlotId();\n\n  let optionProps = {\n    role: 'option',\n    'aria-disabled': isDisabled || undefined,\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined\n  };\n\n  // Safari with VoiceOver on macOS misreads options with aria-labelledby or aria-label as simply \"text\".\n  // We should not map slots to the label and description on Safari and instead just have VoiceOver read the textContent.\n  // https://bugs.webkit.org/show_bug.cgi?id=209279\n  if (!(isMac() && isWebKit())) {\n    optionProps['aria-label'] = props['aria-label'];\n    optionProps['aria-labelledby'] = labelId;\n    optionProps['aria-describedby'] = descriptionId;\n  }\n\n  let item = state.collection.getItem(key);\n  if (isVirtualized) {\n    let index = Number(item?.index);\n    optionProps['aria-posinset'] = Number.isNaN(index) ? undefined : index + 1;\n    optionProps['aria-setsize'] = getItemCount(state.collection);\n  }\n\n  let onAction = data?.onAction ? () => data?.onAction?.(key) : undefined;\n  let id = getItemId(state, key);\n  let {itemProps, isPressed, isFocused, hasAction, allowsSelection} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key,\n    ref,\n    shouldSelectOnPressUp,\n    allowsDifferentPressOrigin: shouldSelectOnPressUp && shouldFocusOnHover,\n    isVirtualized,\n    shouldUseVirtualFocus,\n    isDisabled,\n    onAction: onAction || item?.props?.onAction ? chain(item?.props?.onAction, onAction) : undefined,\n    linkBehavior: data?.linkBehavior,\n    id\n  });\n\n  let {hoverProps} = useHover({\n    isDisabled: isDisabled || !shouldFocusOnHover,\n    onHoverStart() {\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocused(true);\n        state.selectionManager.setFocusedKey(key);\n      }\n    }\n  });\n\n  let domProps = filterDOMProps(item?.props);\n  delete domProps.id;\n  let linkProps = useLinkProps(item?.props);\n\n  return {\n    optionProps: {\n      ...optionProps,\n      ...mergeProps(domProps, itemProps, hoverProps, linkProps),\n      id\n    },\n    labelProps: {\n      id: labelId\n    },\n    descriptionProps: {\n      id: descriptionId\n    },\n    isFocused,\n    isFocusVisible: isFocused && state.selectionManager.isFocused && isFocusVisible(),\n    isSelected,\n    isDisabled,\n    isPressed,\n    allowsSelection,\n    hasAction\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {ReactNode} from 'react';\nimport {useId} from '@react-aria/utils';\n\nexport interface AriaListBoxSectionProps {\n  /** The heading for the section. */\n  heading?: ReactNode,\n  /** An accessibility label for the section. Required if `heading` is not present. */\n  'aria-label'?: string\n}\n\nexport interface ListBoxSectionAria {\n  /** Props for the wrapper list item. */\n  itemProps: DOMAttributes,\n\n  /** Props for the heading element, if any. */\n  headingProps: DOMAttributes,\n\n  /** Props for the group element. */\n  groupProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a section in a listbox.\n * See `useListBox` for more details about listboxes.\n * @param props - Props for the section.\n */\nexport function useListBoxSection(props: AriaListBoxSectionProps): ListBoxSectionAria {\n  let {heading, 'aria-label': ariaLabel} = props;\n  let headingId = useId();\n\n  return {\n    itemProps: {\n      role: 'presentation'\n    },\n    headingProps: heading ? {\n      // Techincally, listbox cannot contain headings according to ARIA.\n      // We hide the heading from assistive technology, using role=\"presentation\",\n      // and only use it as a visual label for the nested group.\n      id: headingId,\n      role: 'presentation'\n    } : {},\n    groupProps: {\n      role: 'group',\n      'aria-label': ariaLabel,\n      'aria-labelledby': heading ? headingId : undefined\n    }\n  };\n}\n", "\"use client\";\n\n// src/use-listbox.ts\nimport { useListBox as useAriaListbox } from \"@react-aria/listbox\";\nimport { useProviderContext } from \"@heroui/system\";\nimport { listbox } from \"@heroui/theme\";\nimport { useListState } from \"@react-stately/list\";\nimport { filterDOMProps, useDOMRef } from \"@heroui/react-utils\";\nimport { useMemo } from \"react\";\nimport { clsx } from \"@heroui/shared-utils\";\nfunction useListbox(props) {\n  var _a;\n  const globalContext = useProviderContext();\n  const {\n    ref,\n    as,\n    state: propState,\n    variant,\n    color,\n    onAction,\n    children,\n    onSelectionChange,\n    disableAnimation = (_a = globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _a : false,\n    itemClasses,\n    className,\n    topContent,\n    bottomContent,\n    emptyContent = \"No items.\",\n    hideSelectedIcon = false,\n    hideEmptyContent = false,\n    shouldHighlightOnFocus = false,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"ul\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const innerState = useListState({ ...props, children, onSelectionChange });\n  const state = propState || innerState;\n  const { listBoxProps } = useAriaListbox({ ...props, onAction }, state, domRef);\n  const slots = useMemo(() => listbox(), []);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getBaseProps = (props2 = {}) => {\n    return {\n      ref: domRef,\n      \"data-slot\": \"base\",\n      className: slots.base({ class: baseStyles }),\n      ...filterDOMProps(otherProps, {\n        enabled: shouldFilterDOMProps\n      }),\n      ...props2\n    };\n  };\n  const getListProps = (props2 = {}) => {\n    return {\n      \"data-slot\": \"list\",\n      className: slots.list({ class: classNames == null ? void 0 : classNames.list }),\n      ...listBoxProps,\n      ...props2\n    };\n  };\n  const getEmptyContentProps = (props2 = {}) => {\n    return {\n      \"data-slot\": \"empty-content\",\n      children: emptyContent,\n      className: slots.emptyContent({ class: classNames == null ? void 0 : classNames.emptyContent }),\n      ...props2\n    };\n  };\n  return {\n    Component,\n    state,\n    variant,\n    color,\n    slots,\n    classNames,\n    topContent,\n    bottomContent,\n    emptyContent,\n    hideEmptyContent,\n    shouldHighlightOnFocus,\n    hideSelectedIcon,\n    disableAnimation,\n    className,\n    itemClasses,\n    getBaseProps,\n    getListProps,\n    getEmptyContentProps\n  };\n}\n\nexport {\n  useListbox\n};\n", "\"use client\";\n\n// src/listbox-selected-icon.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction ListboxSelectedIcon(props) {\n  const { isSelected, disableAnimation, ...otherProps } = props;\n  return /* @__PURE__ */ jsx(\n    \"svg\",\n    {\n      \"aria-hidden\": \"true\",\n      \"data-selected\": isSelected,\n      role: \"presentation\",\n      viewBox: \"0 0 17 18\",\n      ...otherProps,\n      children: /* @__PURE__ */ jsx(\n        \"polyline\",\n        {\n          fill: \"none\",\n          points: \"1 9 7 14 15 4\",\n          stroke: \"currentColor\",\n          strokeDasharray: 22,\n          strokeDashoffset: isSelected ? 44 : 66,\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 1.5,\n          style: !disableAnimation ? {\n            transition: \"stroke-dashoffset 200ms ease\"\n          } : {}\n        }\n      )\n    }\n  );\n}\n\nexport {\n  ListboxSelectedIcon\n};\n", "\"use client\";\n\n// src/use-listbox-item.ts\nimport { useMemo, useRef, useCallback } from \"react\";\nimport { listboxItem } from \"@heroui/theme\";\nimport { mapPropsVariants, useProviderContext } from \"@heroui/system\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { filterDOMProps } from \"@heroui/react-utils\";\nimport { clsx, dataAttr, objectToDeps, removeEvents, mergeProps } from \"@heroui/shared-utils\";\nimport { useOption } from \"@react-aria/listbox\";\nimport { useHover, usePress } from \"@react-aria/interactions\";\nimport { useIsMobile } from \"@heroui/use-is-mobile\";\nfunction useListboxItem(originalProps) {\n  var _a, _b;\n  const globalContext = useProviderContext();\n  const [props, variantProps] = mapPropsVariants(originalProps, listboxItem.variantKeys);\n  const {\n    as,\n    item,\n    state,\n    description,\n    startContent,\n    endContent,\n    isVirtualized,\n    selectedIcon,\n    className,\n    classNames,\n    autoFocus,\n    onPress,\n    onPressUp,\n    onPressStart,\n    onPressEnd,\n    onPressChange,\n    onClick,\n    shouldHighlightOnFocus,\n    hideSelectedIcon = false,\n    isReadOnly = false,\n    ...otherProps\n  } = props;\n  const disableAnimation = (_b = (_a = originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const domRef = useRef(null);\n  const Component = as || (originalProps.href ? \"a\" : \"li\");\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const { rendered, key } = item;\n  const isDisabled = state.disabledKeys.has(key) || originalProps.isDisabled;\n  const isSelectable = state.selectionManager.selectionMode !== \"none\";\n  const isMobile = useIsMobile();\n  const { pressProps, isPressed } = usePress({\n    ref: domRef,\n    isDisabled,\n    onClick,\n    onPress,\n    onPressUp,\n    onPressStart,\n    onPressEnd,\n    onPressChange\n  });\n  const { isHovered, hoverProps } = useHover({\n    isDisabled\n  });\n  const { isFocusVisible, focusProps } = useFocusRing({\n    autoFocus\n  });\n  const { isFocused, isSelected, optionProps, labelProps, descriptionProps } = useOption(\n    {\n      key,\n      isDisabled,\n      \"aria-label\": props[\"aria-label\"],\n      isVirtualized\n    },\n    state,\n    domRef\n  );\n  let itemProps = optionProps;\n  const slots = useMemo(\n    () => listboxItem({\n      ...variantProps,\n      isDisabled,\n      disableAnimation,\n      hasTitleTextChild: typeof rendered === \"string\",\n      hasDescriptionTextChild: typeof description === \"string\"\n    }),\n    [objectToDeps(variantProps), isDisabled, disableAnimation, rendered, description]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  if (isReadOnly) {\n    itemProps = removeEvents(itemProps);\n  }\n  const isHighlighted = shouldHighlightOnFocus && isFocused || (isMobile ? isHovered || isPressed : isHovered || isFocused && !isFocusVisible);\n  const getItemProps = (props2 = {}) => ({\n    ref: domRef,\n    ...mergeProps(\n      itemProps,\n      isReadOnly ? {} : mergeProps(focusProps, pressProps),\n      hoverProps,\n      filterDOMProps(otherProps, {\n        enabled: shouldFilterDOMProps\n      }),\n      props2\n    ),\n    \"data-selectable\": dataAttr(isSelectable),\n    \"data-focus\": dataAttr(isFocused),\n    \"data-hover\": dataAttr(isHighlighted),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-selected\": dataAttr(isSelected),\n    \"data-pressed\": dataAttr(isPressed),\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    className: slots.base({ class: clsx(baseStyles, props2.className) })\n  });\n  const getLabelProps = (props2 = {}) => ({\n    ...mergeProps(labelProps, props2),\n    \"data-label\": dataAttr(true),\n    className: slots.title({ class: classNames == null ? void 0 : classNames.title })\n  });\n  const getDescriptionProps = (props2 = {}) => ({\n    ...mergeProps(descriptionProps, props2),\n    className: slots.description({ class: classNames == null ? void 0 : classNames.description })\n  });\n  const getWrapperProps = (props2 = {}) => ({\n    ...mergeProps(props2),\n    className: slots.wrapper({ class: classNames == null ? void 0 : classNames.wrapper })\n  });\n  const getSelectedIconProps = useCallback(\n    (props2 = {}) => {\n      return {\n        \"aria-hidden\": dataAttr(true),\n        \"data-disabled\": dataAttr(isDisabled),\n        className: slots.selectedIcon({ class: classNames == null ? void 0 : classNames.selectedIcon }),\n        ...props2\n      };\n    },\n    [isDisabled, slots, classNames]\n  );\n  return {\n    Component,\n    domRef,\n    slots,\n    classNames,\n    isSelectable,\n    isSelected,\n    isDisabled,\n    rendered,\n    description,\n    startContent,\n    endContent,\n    selectedIcon,\n    hideSelectedIcon,\n    disableAnimation,\n    getItemProps,\n    getLabelProps,\n    getWrapperProps,\n    getDescriptionProps,\n    getSelectedIconProps\n  };\n}\n\nexport {\n  useListboxItem\n};\n", "// src/index.ts\nimport { useIsSSR } from \"@react-aria/ssr\";\nvar MOBILE_SCREEN_WIDTH = 700;\nfunction useIsMobile() {\n  let isSSR = useIsSSR();\n  if (isSSR || typeof window === \"undefined\") {\n    return false;\n  }\n  return window.screen.width <= MOBILE_SCREEN_WIDTH;\n}\nexport {\n  useIsMobile\n};\n", "\"use client\";\nimport {\n  ListboxSelectedIcon\n} from \"./chunk-65JTUBIW.mjs\";\nimport {\n  useListboxItem\n} from \"./chunk-RMKUVOBG.mjs\";\n\n// src/listbox-item.tsx\nimport { useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ListboxItem = (props) => {\n  const {\n    Component,\n    rendered,\n    description,\n    isSelectable,\n    isSelected,\n    isDisabled,\n    selectedIcon,\n    startContent,\n    endContent,\n    hideSelectedIcon,\n    disableAnimation,\n    getItemProps,\n    getLabelProps,\n    getWrapperProps,\n    getDescriptionProps,\n    getSelectedIconProps\n  } = useListboxItem(props);\n  const selectedContent = useMemo(() => {\n    const defaultIcon = /* @__PURE__ */ jsx(ListboxSelectedIcon, { disableAnimation, isSelected });\n    if (typeof selectedIcon === \"function\") {\n      return selectedIcon({ icon: defaultIcon, isSelected, isDisabled });\n    }\n    if (selectedIcon) return selectedIcon;\n    return defaultIcon;\n  }, [selectedIcon, isSelected, isDisabled, disableAnimation]);\n  return /* @__PURE__ */ jsxs(Component, { ...getItemProps(), children: [\n    startContent,\n    description ? /* @__PURE__ */ jsxs(\"div\", { ...getWrapperProps(), children: [\n      /* @__PURE__ */ jsx(\"span\", { ...getLabelProps(), children: rendered }),\n      /* @__PURE__ */ jsx(\"span\", { ...getDescriptionProps(), children: description })\n    ] }) : /* @__PURE__ */ jsx(\"span\", { ...getLabelProps(), children: rendered }),\n    isSelectable && !hideSelectedIcon && /* @__PURE__ */ jsx(\"span\", { ...getSelectedIconProps(), children: selectedContent }),\n    endContent\n  ] });\n};\nListboxItem.displayName = \"HeroUI.ListboxItem\";\nvar listbox_item_default = ListboxItem;\n\nexport {\n  listbox_item_default\n};\n", "\"use client\";\nimport {\n  listbox_item_default\n} from \"./chunk-4QJLEUWX.mjs\";\n\n// src/listbox-section.tsx\nimport { listboxSection } from \"@heroui/theme\";\nimport { useMemo } from \"react\";\nimport { forwardRef } from \"@heroui/system\";\nimport { clsx, mergeProps } from \"@heroui/shared-utils\";\nimport { Divider } from \"@heroui/divider\";\nimport { useListBoxSection } from \"@react-aria/listbox\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ListboxSection = forwardRef(\n  ({\n    item,\n    state,\n    as,\n    variant,\n    color,\n    disableAnimation,\n    className,\n    classNames,\n    hideSelectedIcon,\n    showDivider = false,\n    dividerProps = {},\n    itemClasses,\n    // removed title from props to avoid browsers showing a tooltip on hover\n    // the title props is already inside the rendered prop\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    title,\n    // removed items from props to avoid show in html element\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    items,\n    ...otherProps\n  }, _) => {\n    const Component = as || \"li\";\n    const slots = useMemo(() => listboxSection(), []);\n    const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n    const dividerStyles = clsx(classNames == null ? void 0 : classNames.divider, dividerProps == null ? void 0 : dividerProps.className);\n    const { itemProps, headingProps, groupProps } = useListBoxSection({\n      heading: item.rendered,\n      \"aria-label\": item[\"aria-label\"]\n    });\n    return /* @__PURE__ */ jsxs(\n      Component,\n      {\n        \"data-slot\": \"base\",\n        ...mergeProps(itemProps, otherProps),\n        className: slots.base({ class: baseStyles }),\n        children: [\n          item.rendered && /* @__PURE__ */ jsx(\n            \"span\",\n            {\n              ...headingProps,\n              className: slots.heading({ class: classNames == null ? void 0 : classNames.heading }),\n              \"data-slot\": \"heading\",\n              children: item.rendered\n            }\n          ),\n          /* @__PURE__ */ jsxs(\n            \"ul\",\n            {\n              ...groupProps,\n              className: slots.group({ class: classNames == null ? void 0 : classNames.group }),\n              \"data-has-title\": !!item.rendered,\n              \"data-slot\": \"group\",\n              children: [\n                [...item.childNodes].map((node) => {\n                  const { key: nodeKey, props: nodeProps } = node;\n                  let listboxItem = /* @__PURE__ */ jsx(\n                    listbox_item_default,\n                    {\n                      classNames: itemClasses,\n                      color,\n                      disableAnimation,\n                      hideSelectedIcon,\n                      item: node,\n                      state,\n                      variant,\n                      ...nodeProps\n                    },\n                    nodeKey\n                  );\n                  if (node.wrapper) {\n                    listboxItem = node.wrapper(listboxItem);\n                  }\n                  return listboxItem;\n                }),\n                showDivider && /* @__PURE__ */ jsx(\n                  Divider,\n                  {\n                    as: \"li\",\n                    className: slots.divider({\n                      class: dividerStyles\n                    }),\n                    ...dividerProps\n                  }\n                )\n              ]\n            }\n          )\n        ]\n      },\n      item.key\n    );\n  }\n);\nListboxSection.displayName = \"HeroUI.ListboxSection\";\nvar listbox_section_default = ListboxSection;\n\nexport {\n  listbox_section_default\n};\n", "// src/use-separator.ts\nimport { filterDOMProps } from \"@heroui/react-rsc-utils\";\nfunction useSeparator(props) {\n  let domProps = filterDOMProps(props, {\n    enabled: typeof props.elementType === \"string\"\n  });\n  let ariaOrientation;\n  if (props.orientation === \"vertical\") {\n    ariaOrientation = \"vertical\";\n  }\n  if (props.elementType !== \"hr\") {\n    return {\n      separatorProps: {\n        ...domProps,\n        role: \"separator\",\n        \"aria-orientation\": ariaOrientation\n      }\n    };\n  }\n  return { separatorProps: domProps };\n}\n\nexport {\n  useSeparator\n};\n", "import {\n  useSeparator\n} from \"./chunk-D2EG5U3Q.mjs\";\n\n// src/use-divider.ts\nimport { divider } from \"@heroui/theme\";\nimport { useCallback, useMemo } from \"react\";\nfunction useDivider(props) {\n  const { as, className, orientation, ...otherProps } = props;\n  let Component = as || \"hr\";\n  if (Component === \"hr\" && orientation === \"vertical\") {\n    Component = \"div\";\n  }\n  const { separatorProps } = useSeparator({\n    elementType: typeof Component === \"string\" ? Component : \"hr\",\n    orientation\n  });\n  const styles = useMemo(\n    () => divider({\n      orientation,\n      className\n    }),\n    [orientation, className]\n  );\n  const getDividerProps = useCallback(\n    (props2 = {}) => ({\n      className: styles,\n      role: \"separator\",\n      \"data-orientation\": orientation,\n      ...separatorProps,\n      ...otherProps,\n      ...props2\n    }),\n    [styles, orientation, separatorProps, otherProps]\n  );\n  return { Component, getDividerProps };\n}\n\nexport {\n  useDivider\n};\n", "import {\n  useDivider\n} from \"./chunk-TS7K35D7.mjs\";\n\n// src/divider.tsx\nimport { forwardRef } from \"@heroui/system-rsc\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Divider = forwardRef((props, ref) => {\n  const { Component, getDividerProps } = useDivider({ ...props });\n  return /* @__PURE__ */ jsx(Component, { ref, ...getDividerProps() });\n});\nDivider.displayName = \"HeroUI.Divider\";\nvar divider_default = Divider;\n\nexport {\n  divider_default\n};\n", "\"use client\";\nimport {\n  listbox_section_default\n} from \"./chunk-BXSPTCK3.mjs\";\nimport {\n  listbox_item_default\n} from \"./chunk-4QJLEUWX.mjs\";\n\n// src/virtualized-listbox.tsx\nimport { useMemo as useMemo2, useRef as useRef2, useState } from \"react\";\nimport { useVirtualizer } from \"@tanstack/react-virtual\";\nimport { isEmpty, mergeProps } from \"@heroui/shared-utils\";\n\n// ../scroll-shadow/src/use-scroll-shadow.ts\nimport { mapPropsVariants } from \"@heroui/system\";\nimport { scrollShadow } from \"@heroui/theme\";\nimport { useDOMRef } from \"@heroui/react-utils\";\n\n// ../../hooks/use-data-scroll-overflow/src/index.ts\nimport { capitalize } from \"@heroui/shared-utils\";\nimport { useEffect, useRef } from \"react\";\nfunction useDataScrollOverflow(props = {}) {\n  const {\n    domRef,\n    isEnabled = true,\n    overflowCheck = \"vertical\",\n    visibility = \"auto\",\n    offset = 0,\n    onVisibilityChange,\n    updateDeps = []\n  } = props;\n  const visibleRef = useRef(visibility);\n  useEffect(() => {\n    const el = domRef == null ? void 0 : domRef.current;\n    if (!el || !isEnabled) return;\n    const setAttributes = (direction, hasBefore, hasAfter, prefix, suffix) => {\n      if (visibility === \"auto\") {\n        const both = `${prefix}${capitalize(suffix)}Scroll`;\n        if (hasBefore && hasAfter) {\n          el.dataset[both] = \"true\";\n          el.removeAttribute(`data-${prefix}-scroll`);\n          el.removeAttribute(`data-${suffix}-scroll`);\n        } else {\n          el.dataset[`${prefix}Scroll`] = hasBefore.toString();\n          el.dataset[`${suffix}Scroll`] = hasAfter.toString();\n          el.removeAttribute(`data-${prefix}-${suffix}-scroll`);\n        }\n      } else {\n        const next = hasBefore && hasAfter ? \"both\" : hasBefore ? prefix : hasAfter ? suffix : \"none\";\n        if (next !== visibleRef.current) {\n          onVisibilityChange == null ? void 0 : onVisibilityChange(next);\n          visibleRef.current = next;\n        }\n      }\n    };\n    const checkOverflow = () => {\n      var _a, _b;\n      const directions = [\n        { type: \"vertical\", prefix: \"top\", suffix: \"bottom\" },\n        { type: \"horizontal\", prefix: \"left\", suffix: \"right\" }\n      ];\n      const listbox = el.querySelector('ul[data-slot=\"list\"]');\n      const scrollHeight = +((_a = listbox == null ? void 0 : listbox.getAttribute(\"data-virtual-scroll-height\")) != null ? _a : el.scrollHeight);\n      const scrollTop = +((_b = listbox == null ? void 0 : listbox.getAttribute(\"data-virtual-scroll-top\")) != null ? _b : el.scrollTop);\n      for (const { type, prefix, suffix } of directions) {\n        if (overflowCheck === type || overflowCheck === \"both\") {\n          const hasBefore = type === \"vertical\" ? scrollTop > offset : el.scrollLeft > offset;\n          const hasAfter = type === \"vertical\" ? scrollTop + el.clientHeight + offset < scrollHeight : el.scrollLeft + el.clientWidth + offset < el.scrollWidth;\n          setAttributes(type, hasBefore, hasAfter, prefix, suffix);\n        }\n      }\n    };\n    const clearOverflow = () => {\n      [\"top\", \"bottom\", \"top-bottom\", \"left\", \"right\", \"left-right\"].forEach((attr) => {\n        el.removeAttribute(`data-${attr}-scroll`);\n      });\n    };\n    checkOverflow();\n    el.addEventListener(\"scroll\", checkOverflow, true);\n    if (visibility !== \"auto\") {\n      clearOverflow();\n      if (visibility === \"both\") {\n        el.dataset.topBottomScroll = String(overflowCheck === \"vertical\");\n        el.dataset.leftRightScroll = String(overflowCheck === \"horizontal\");\n      } else {\n        el.dataset.topBottomScroll = \"false\";\n        el.dataset.leftRightScroll = \"false\";\n        [\"top\", \"bottom\", \"left\", \"right\"].forEach((attr) => {\n          el.dataset[`${attr}Scroll`] = String(visibility === attr);\n        });\n      }\n    }\n    return () => {\n      el.removeEventListener(\"scroll\", checkOverflow, true);\n      clearOverflow();\n    };\n  }, [...updateDeps, isEnabled, visibility, overflowCheck, onVisibilityChange, domRef]);\n}\n\n// ../scroll-shadow/src/use-scroll-shadow.ts\nimport { useMemo } from \"react\";\nimport { objectToDeps } from \"@heroui/shared-utils\";\nfunction useScrollShadow(originalProps) {\n  var _a;\n  const [props, variantProps] = mapPropsVariants(originalProps, scrollShadow.variantKeys);\n  const {\n    ref,\n    as,\n    children,\n    className,\n    style,\n    size = 40,\n    offset = 0,\n    visibility = \"auto\",\n    isEnabled = true,\n    onVisibilityChange,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  useDataScrollOverflow({\n    domRef,\n    offset,\n    visibility,\n    isEnabled,\n    onVisibilityChange,\n    updateDeps: [children],\n    overflowCheck: (_a = originalProps.orientation) != null ? _a : \"vertical\"\n  });\n  const styles = useMemo(\n    () => scrollShadow({\n      ...variantProps,\n      className\n    }),\n    [objectToDeps(variantProps), className]\n  );\n  const getBaseProps = (props2 = {}) => {\n    var _a2;\n    return {\n      ref: domRef,\n      className: styles,\n      \"data-orientation\": (_a2 = originalProps.orientation) != null ? _a2 : \"vertical\",\n      style: {\n        \"--scroll-shadow-size\": `${size}px`,\n        ...style,\n        ...props2.style\n      },\n      ...otherProps,\n      ...props2\n    };\n  };\n  return { Component, styles, domRef, children, getBaseProps };\n}\n\n// src/virtualized-listbox.tsx\nimport { filterDOMProps } from \"@heroui/react-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar getItemSizesForCollection = (collection, itemHeight) => {\n  const sizes = [];\n  for (const item of collection) {\n    if (item.type === \"section\") {\n      sizes.push(([...item.childNodes].length + 1) * itemHeight);\n    } else {\n      sizes.push(itemHeight);\n    }\n  }\n  return sizes;\n};\nvar getScrollState = (element) => {\n  if (!element || element.scrollTop === void 0 || element.clientHeight === void 0 || element.scrollHeight === void 0) {\n    return {\n      isTop: false,\n      isBottom: false,\n      isMiddle: false\n    };\n  }\n  const isAtTop = element.scrollTop === 0;\n  const isAtBottom = Math.ceil(element.scrollTop + element.clientHeight) >= element.scrollHeight;\n  const isInMiddle = !isAtTop && !isAtBottom;\n  return {\n    isTop: isAtTop,\n    isBottom: isAtBottom,\n    isMiddle: isInMiddle\n  };\n};\nvar VirtualizedListbox = (props) => {\n  var _a;\n  const {\n    Component,\n    state,\n    color,\n    variant,\n    itemClasses,\n    getBaseProps,\n    topContent,\n    bottomContent,\n    hideEmptyContent,\n    hideSelectedIcon,\n    shouldHighlightOnFocus,\n    disableAnimation,\n    getEmptyContentProps,\n    getListProps,\n    scrollShadowProps\n  } = props;\n  const { virtualization } = props;\n  if (!virtualization || !isEmpty(virtualization) && !virtualization.maxListboxHeight && !virtualization.itemHeight) {\n    throw new Error(\n      \"You are using a virtualized listbox. VirtualizedListbox requires 'virtualization' props with 'maxListboxHeight' and 'itemHeight' properties. This error might have originated from autocomplete components that use VirtualizedListbox. Please provide these props to use the virtualized listbox.\"\n    );\n  }\n  const { maxListboxHeight, itemHeight } = virtualization;\n  const listHeight = Math.min(maxListboxHeight, itemHeight * state.collection.size);\n  const parentRef = useRef2(null);\n  const itemSizes = useMemo2(\n    () => getItemSizesForCollection([...state.collection], itemHeight),\n    [state.collection, itemHeight]\n  );\n  const rowVirtualizer = useVirtualizer({\n    count: [...state.collection].length,\n    getScrollElement: () => parentRef.current,\n    estimateSize: (i) => itemSizes[i]\n  });\n  const virtualItems = rowVirtualizer.getVirtualItems();\n  const virtualScrollHeight = rowVirtualizer.getTotalSize();\n  const { getBaseProps: getBasePropsScrollShadow } = useScrollShadow({ ...scrollShadowProps });\n  const renderRow = (virtualItem) => {\n    var _a2;\n    const item = [...state.collection][virtualItem.index];\n    if (!item) {\n      return null;\n    }\n    const itemProps = {\n      color,\n      item,\n      state,\n      variant,\n      disableAnimation,\n      hideSelectedIcon,\n      ...item.props\n    };\n    const virtualizerStyle = {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: `${virtualItem.size}px`,\n      transform: `translateY(${virtualItem.start}px)`\n    };\n    if (item.type === \"section\") {\n      return /* @__PURE__ */ jsx(\n        listbox_section_default,\n        {\n          ...itemProps,\n          itemClasses,\n          style: { ...virtualizerStyle, ...itemProps.style }\n        },\n        item.key\n      );\n    }\n    let listboxItem = /* @__PURE__ */ jsx(\n      listbox_item_default,\n      {\n        ...itemProps,\n        classNames: mergeProps(itemClasses, (_a2 = item.props) == null ? void 0 : _a2.classNames),\n        shouldHighlightOnFocus,\n        style: { ...virtualizerStyle, ...itemProps.style }\n      },\n      item.key\n    );\n    if (item.wrapper) {\n      listboxItem = item.wrapper(listboxItem);\n    }\n    return listboxItem;\n  };\n  const [scrollState, setScrollState] = useState({\n    isTop: false,\n    isBottom: true,\n    isMiddle: false\n  });\n  const content = /* @__PURE__ */ jsxs(\n    Component,\n    {\n      ...getListProps(),\n      \"data-virtual-scroll-height\": virtualScrollHeight,\n      \"data-virtual-scroll-top\": (_a = parentRef == null ? void 0 : parentRef.current) == null ? void 0 : _a.scrollTop,\n      children: [\n        !state.collection.size && !hideEmptyContent && /* @__PURE__ */ jsx(\"li\", { children: /* @__PURE__ */ jsx(\"div\", { ...getEmptyContentProps() }) }),\n        /* @__PURE__ */ jsx(\n          \"div\",\n          {\n            ...filterDOMProps(getBasePropsScrollShadow()),\n            ref: parentRef,\n            style: {\n              height: maxListboxHeight,\n              overflow: \"auto\"\n            },\n            onScroll: (e) => {\n              setScrollState(getScrollState(e.target));\n            },\n            children: listHeight > 0 && itemHeight > 0 && /* @__PURE__ */ jsx(\n              \"div\",\n              {\n                style: {\n                  height: `${virtualScrollHeight}px`,\n                  width: \"100%\",\n                  position: \"relative\"\n                },\n                children: virtualItems.map((virtualItem) => renderRow(virtualItem))\n              }\n            )\n          }\n        )\n      ]\n    }\n  );\n  return /* @__PURE__ */ jsxs(\"div\", { ...getBaseProps(), children: [\n    topContent,\n    content,\n    bottomContent\n  ] });\n};\nvar virtualized_listbox_default = VirtualizedListbox;\n\nexport {\n  virtualized_listbox_default\n};\n", "export type NoInfer<A extends any> = [A][A extends any ? 0 : never]\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\n\nexport function memo<TDeps extends ReadonlyArray<any>, TResult>(\n  getDeps: () => [...TDeps],\n  fn: (...args: NoInfer<[...TDeps]>) => TResult,\n  opts: {\n    key: false | string\n    debug?: () => boolean\n    onChange?: (result: TResult) => void\n    initialDeps?: TDeps\n  },\n) {\n  let deps = opts.initialDeps ?? []\n  let result: TResult | undefined\n\n  return (): TResult => {\n    let depTime: number\n    if (opts.key && opts.debug?.()) depTime = Date.now()\n\n    const newDeps = getDeps()\n\n    const depsChanged =\n      newDeps.length !== deps.length ||\n      newDeps.some((dep: any, index: number) => deps[index] !== dep)\n\n    if (!depsChanged) {\n      return result!\n    }\n\n    deps = newDeps\n\n    let resultTime: number\n    if (opts.key && opts.debug?.()) resultTime = Date.now()\n\n    result = fn(...newDeps)\n\n    if (opts.key && opts.debug?.()) {\n      const depEndTime = Math.round((Date.now() - depTime!) * 100) / 100\n      const resultEndTime = Math.round((Date.now() - resultTime!) * 100) / 100\n      const resultFpsPercentage = resultEndTime / 16\n\n      const pad = (str: number | string, num: number) => {\n        str = String(str)\n        while (str.length < num) {\n          str = ' ' + str\n        }\n        return str\n      }\n\n      console.info(\n        `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n        `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n              0,\n              Math.min(120 - 120 * resultFpsPercentage, 120),\n            )}deg 100% 31%);`,\n        opts?.key,\n      )\n    }\n\n    opts?.onChange?.(result)\n\n    return result\n  }\n}\n\nexport function notUndefined<T>(value: T | undefined, msg?: string): T {\n  if (value === undefined) {\n    throw new Error(`Unexpected undefined${msg ? `: ${msg}` : ''}`)\n  } else {\n    return value\n  }\n}\n\nexport const approxEqual = (a: number, b: number) => Math.abs(a - b) < 1\n\nexport const debounce = (\n  targetWindow: Window & typeof globalThis,\n  fn: Function,\n  ms: number,\n) => {\n  let timeoutId: number\n  return function (this: any, ...args: Array<any>) {\n    targetWindow.clearTimeout(timeoutId)\n    timeoutId = targetWindow.setTimeout(() => fn.apply(this, args), ms)\n  }\n}\n", "import { approxEqual, debounce, memo, notUndefined } from './utils'\n\nexport * from './utils'\n\n//\n\ntype ScrollDirection = 'forward' | 'backward'\n\ntype ScrollAlignment = 'start' | 'center' | 'end' | 'auto'\n\ntype ScrollBehavior = 'auto' | 'smooth'\n\nexport interface ScrollToOptions {\n  align?: ScrollAlignment\n  behavior?: ScrollBehavior\n}\n\ntype ScrollToOffsetOptions = ScrollToOptions\n\ntype ScrollToIndexOptions = ScrollToOptions\n\nexport interface Range {\n  startIndex: number\n  endIndex: number\n  overscan: number\n  count: number\n}\n\ntype Key = number | string | bigint\n\nexport interface VirtualItem {\n  key: Key\n  index: number\n  start: number\n  end: number\n  size: number\n  lane: number\n}\n\nexport interface Rect {\n  width: number\n  height: number\n}\n\n//\n\nexport const defaultKeyExtractor = (index: number) => index\n\nexport const defaultRangeExtractor = (range: Range) => {\n  const start = Math.max(range.startIndex - range.overscan, 0)\n  const end = Math.min(range.endIndex + range.overscan, range.count - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nexport const observeElementRect = <T extends Element>(\n  instance: Virtualizer<T, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n  const targetWindow = instance.targetWindow\n  if (!targetWindow) {\n    return\n  }\n\n  const handler = (rect: Rect) => {\n    const { width, height } = rect\n    cb({ width: Math.round(width), height: Math.round(height) })\n  }\n\n  handler(element.getBoundingClientRect())\n\n  if (!targetWindow.ResizeObserver) {\n    return () => {}\n  }\n\n  const observer = new targetWindow.ResizeObserver((entries) => {\n    const entry = entries[0]\n    if (entry?.borderBoxSize) {\n      const box = entry.borderBoxSize[0]\n      if (box) {\n        handler({ width: box.inlineSize, height: box.blockSize })\n        return\n      }\n    }\n    handler(element.getBoundingClientRect())\n  })\n\n  observer.observe(element, { box: 'border-box' })\n\n  return () => {\n    observer.unobserve(element)\n  }\n}\n\nconst addEventListenerOptions = {\n  passive: true,\n}\n\nexport const observeWindowRect = (\n  instance: Virtualizer<Window, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = () => {\n    cb({ width: element.innerWidth, height: element.innerHeight })\n  }\n  handler()\n\n  element.addEventListener('resize', handler, addEventListenerOptions)\n\n  return () => {\n    element.removeEventListener('resize', handler)\n  }\n}\n\nconst supportsScrollend =\n  typeof window == 'undefined' ? true : 'onscrollend' in window\n\ntype ObserveOffsetCallBack = (offset: number, isScrolling: boolean) => void\n\nexport const observeElementOffset = <T extends Element>(\n  instance: Virtualizer<T, any>,\n  cb: ObserveOffsetCallBack,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n  const targetWindow = instance.targetWindow\n  if (!targetWindow) {\n    return\n  }\n\n  let offset = 0\n  const fallback =\n    instance.options.useScrollendEvent && supportsScrollend\n      ? () => undefined\n      : debounce(\n          targetWindow,\n          () => {\n            cb(offset, false)\n          },\n          instance.options.isScrollingResetDelay,\n        )\n\n  const createHandler = (isScrolling: boolean) => () => {\n    const { horizontal, isRtl } = instance.options\n    offset = horizontal\n      ? element['scrollLeft'] * ((isRtl && -1) || 1)\n      : element['scrollTop']\n    fallback()\n    cb(offset, isScrolling)\n  }\n  const handler = createHandler(true)\n  const endHandler = createHandler(false)\n  endHandler()\n\n  element.addEventListener('scroll', handler, addEventListenerOptions)\n  element.addEventListener('scrollend', endHandler, addEventListenerOptions)\n\n  return () => {\n    element.removeEventListener('scroll', handler)\n    element.removeEventListener('scrollend', endHandler)\n  }\n}\n\nexport const observeWindowOffset = (\n  instance: Virtualizer<Window, any>,\n  cb: ObserveOffsetCallBack,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n  const targetWindow = instance.targetWindow\n  if (!targetWindow) {\n    return\n  }\n\n  let offset = 0\n  const fallback =\n    instance.options.useScrollendEvent && supportsScrollend\n      ? () => undefined\n      : debounce(\n          targetWindow,\n          () => {\n            cb(offset, false)\n          },\n          instance.options.isScrollingResetDelay,\n        )\n\n  const createHandler = (isScrolling: boolean) => () => {\n    offset = element[instance.options.horizontal ? 'scrollX' : 'scrollY']\n    fallback()\n    cb(offset, isScrolling)\n  }\n  const handler = createHandler(true)\n  const endHandler = createHandler(false)\n  endHandler()\n\n  element.addEventListener('scroll', handler, addEventListenerOptions)\n  element.addEventListener('scrollend', endHandler, addEventListenerOptions)\n\n  return () => {\n    element.removeEventListener('scroll', handler)\n    element.removeEventListener('scrollend', endHandler)\n  }\n}\n\nexport const measureElement = <TItemElement extends Element>(\n  element: TItemElement,\n  entry: ResizeObserverEntry | undefined,\n  instance: Virtualizer<any, TItemElement>,\n) => {\n  if (entry?.borderBoxSize) {\n    const box = entry.borderBoxSize[0]\n    if (box) {\n      const size = Math.round(\n        box[instance.options.horizontal ? 'inlineSize' : 'blockSize'],\n      )\n      return size\n    }\n  }\n  return Math.round(\n    element.getBoundingClientRect()[\n      instance.options.horizontal ? 'width' : 'height'\n    ],\n  )\n}\n\nexport const windowScroll = <T extends Window>(\n  offset: number,\n  {\n    adjustments = 0,\n    behavior,\n  }: { adjustments?: number; behavior?: ScrollBehavior },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset = offset + adjustments\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport const elementScroll = <T extends Element>(\n  offset: number,\n  {\n    adjustments = 0,\n    behavior,\n  }: { adjustments?: number; behavior?: ScrollBehavior },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset = offset + adjustments\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport interface VirtualizerOptions<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  // Required from the user\n  count: number\n  getScrollElement: () => TScrollElement | null\n  estimateSize: (index: number) => number\n\n  // Required from the framework adapter (but can be overridden)\n  scrollToFn: (\n    offset: number,\n    options: { adjustments?: number; behavior?: ScrollBehavior },\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => void\n  observeElementRect: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (rect: Rect) => void,\n  ) => void | (() => void)\n  observeElementOffset: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: ObserveOffsetCallBack,\n  ) => void | (() => void)\n  // Optional\n  debug?: boolean\n  initialRect?: Rect\n  onChange?: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    sync: boolean,\n  ) => void\n  measureElement?: (\n    element: TItemElement,\n    entry: ResizeObserverEntry | undefined,\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => number\n  overscan?: number\n  horizontal?: boolean\n  paddingStart?: number\n  paddingEnd?: number\n  scrollPaddingStart?: number\n  scrollPaddingEnd?: number\n  initialOffset?: number | (() => number)\n  getItemKey?: (index: number) => Key\n  rangeExtractor?: (range: Range) => Array<number>\n  scrollMargin?: number\n  gap?: number\n  indexAttribute?: string\n  initialMeasurementsCache?: Array<VirtualItem>\n  lanes?: number\n  isScrollingResetDelay?: number\n  useScrollendEvent?: boolean\n  enabled?: boolean\n  isRtl?: boolean\n}\n\nexport class Virtualizer<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  private unsubs: Array<void | (() => void)> = []\n  options!: Required<VirtualizerOptions<TScrollElement, TItemElement>>\n  scrollElement: TScrollElement | null = null\n  targetWindow: (Window & typeof globalThis) | null = null\n  isScrolling = false\n  private scrollToIndexTimeoutId: number | null = null\n  measurementsCache: Array<VirtualItem> = []\n  private itemSizeCache = new Map<Key, number>()\n  private pendingMeasuredCacheIndexes: Array<number> = []\n  scrollRect: Rect | null = null\n  scrollOffset: number | null = null\n  scrollDirection: ScrollDirection | null = null\n  private scrollAdjustments = 0\n  shouldAdjustScrollPositionOnItemSizeChange:\n    | undefined\n    | ((\n        item: VirtualItem,\n        delta: number,\n        instance: Virtualizer<TScrollElement, TItemElement>,\n      ) => boolean)\n  elementsCache = new Map<Key, TItemElement>()\n  private observer = (() => {\n    let _ro: ResizeObserver | null = null\n\n    const get = () => {\n      if (_ro) {\n        return _ro\n      }\n\n      if (!this.targetWindow || !this.targetWindow.ResizeObserver) {\n        return null\n      }\n\n      return (_ro = new this.targetWindow.ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          this._measureElement(entry.target as TItemElement, entry)\n        })\n      }))\n    }\n\n    return {\n      disconnect: () => {\n        get()?.disconnect()\n        _ro = null\n      },\n      observe: (target: Element) =>\n        get()?.observe(target, { box: 'border-box' }),\n      unobserve: (target: Element) => get()?.unobserve(target),\n    }\n  })()\n  range: { startIndex: number; endIndex: number } | null = null\n\n  constructor(opts: VirtualizerOptions<TScrollElement, TItemElement>) {\n    this.setOptions(opts)\n  }\n\n  setOptions = (opts: VirtualizerOptions<TScrollElement, TItemElement>) => {\n    Object.entries(opts).forEach(([key, value]) => {\n      if (typeof value === 'undefined') delete (opts as any)[key]\n    })\n\n    this.options = {\n      debug: false,\n      initialOffset: 0,\n      overscan: 1,\n      paddingStart: 0,\n      paddingEnd: 0,\n      scrollPaddingStart: 0,\n      scrollPaddingEnd: 0,\n      horizontal: false,\n      getItemKey: defaultKeyExtractor,\n      rangeExtractor: defaultRangeExtractor,\n      onChange: () => {},\n      measureElement,\n      initialRect: { width: 0, height: 0 },\n      scrollMargin: 0,\n      gap: 0,\n      indexAttribute: 'data-index',\n      initialMeasurementsCache: [],\n      lanes: 1,\n      isScrollingResetDelay: 150,\n      enabled: true,\n      isRtl: false,\n      useScrollendEvent: true,\n      ...opts,\n    }\n  }\n\n  private notify = (sync: boolean) => {\n    this.options.onChange?.(this, sync)\n  }\n\n  private maybeNotify = memo(\n    () => {\n      this.calculateRange()\n\n      return [\n        this.isScrolling,\n        this.range ? this.range.startIndex : null,\n        this.range ? this.range.endIndex : null,\n      ]\n    },\n    (isScrolling) => {\n      this.notify(isScrolling)\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'maybeNotify',\n      debug: () => this.options.debug,\n      initialDeps: [\n        this.isScrolling,\n        this.range ? this.range.startIndex : null,\n        this.range ? this.range.endIndex : null,\n      ] as [boolean, number | null, number | null],\n    },\n  )\n\n  private cleanup = () => {\n    this.unsubs.filter(Boolean).forEach((d) => d!())\n    this.unsubs = []\n    this.observer.disconnect()\n    this.scrollElement = null\n    this.targetWindow = null\n  }\n\n  _didMount = () => {\n    return () => {\n      this.cleanup()\n    }\n  }\n\n  _willUpdate = () => {\n    const scrollElement = this.options.enabled\n      ? this.options.getScrollElement()\n      : null\n\n    if (this.scrollElement !== scrollElement) {\n      this.cleanup()\n\n      if (!scrollElement) {\n        this.maybeNotify()\n        return\n      }\n\n      this.scrollElement = scrollElement\n\n      if (this.scrollElement && 'ownerDocument' in this.scrollElement) {\n        this.targetWindow = this.scrollElement.ownerDocument.defaultView\n      } else {\n        this.targetWindow = this.scrollElement?.window ?? null\n      }\n\n      this.elementsCache.forEach((cached) => {\n        this.observer.observe(cached)\n      })\n\n      this._scrollToOffset(this.getScrollOffset(), {\n        adjustments: undefined,\n        behavior: undefined,\n      })\n\n      this.unsubs.push(\n        this.options.observeElementRect(this, (rect) => {\n          this.scrollRect = rect\n          this.maybeNotify()\n        }),\n      )\n\n      this.unsubs.push(\n        this.options.observeElementOffset(this, (offset, isScrolling) => {\n          this.scrollAdjustments = 0\n          this.scrollDirection = isScrolling\n            ? this.getScrollOffset() < offset\n              ? 'forward'\n              : 'backward'\n            : null\n          this.scrollOffset = offset\n          this.isScrolling = isScrolling\n\n          this.maybeNotify()\n        }),\n      )\n    }\n  }\n\n  private getSize = () => {\n    if (!this.options.enabled) {\n      this.scrollRect = null\n      return 0\n    }\n\n    this.scrollRect = this.scrollRect ?? this.options.initialRect\n\n    return this.scrollRect[this.options.horizontal ? 'width' : 'height']\n  }\n\n  private getScrollOffset = () => {\n    if (!this.options.enabled) {\n      this.scrollOffset = null\n      return 0\n    }\n\n    this.scrollOffset =\n      this.scrollOffset ??\n      (typeof this.options.initialOffset === 'function'\n        ? this.options.initialOffset()\n        : this.options.initialOffset)\n\n    return this.scrollOffset\n  }\n\n  private getFurthestMeasurement = (\n    measurements: Array<VirtualItem>,\n    index: number,\n  ) => {\n    const furthestMeasurementsFound = new Map<number, true>()\n    const furthestMeasurements = new Map<number, VirtualItem>()\n    for (let m = index - 1; m >= 0; m--) {\n      const measurement = measurements[m]!\n\n      if (furthestMeasurementsFound.has(measurement.lane)) {\n        continue\n      }\n\n      const previousFurthestMeasurement = furthestMeasurements.get(\n        measurement.lane,\n      )\n      if (\n        previousFurthestMeasurement == null ||\n        measurement.end > previousFurthestMeasurement.end\n      ) {\n        furthestMeasurements.set(measurement.lane, measurement)\n      } else if (measurement.end < previousFurthestMeasurement.end) {\n        furthestMeasurementsFound.set(measurement.lane, true)\n      }\n\n      if (furthestMeasurementsFound.size === this.options.lanes) {\n        break\n      }\n    }\n\n    return furthestMeasurements.size === this.options.lanes\n      ? Array.from(furthestMeasurements.values()).sort((a, b) => {\n          if (a.end === b.end) {\n            return a.index - b.index\n          }\n\n          return a.end - b.end\n        })[0]\n      : undefined\n  }\n\n  private getMeasurementOptions = memo(\n    () => [\n      this.options.count,\n      this.options.paddingStart,\n      this.options.scrollMargin,\n      this.options.getItemKey,\n      this.options.enabled,\n    ],\n    (count, paddingStart, scrollMargin, getItemKey, enabled) => {\n      this.pendingMeasuredCacheIndexes = []\n      return {\n        count,\n        paddingStart,\n        scrollMargin,\n        getItemKey,\n        enabled,\n      }\n    },\n    {\n      key: false,\n    },\n  )\n\n  private getMeasurements = memo(\n    () => [this.getMeasurementOptions(), this.itemSizeCache],\n    (\n      { count, paddingStart, scrollMargin, getItemKey, enabled },\n      itemSizeCache,\n    ) => {\n      if (!enabled) {\n        this.measurementsCache = []\n        this.itemSizeCache.clear()\n        return []\n      }\n\n      if (this.measurementsCache.length === 0) {\n        this.measurementsCache = this.options.initialMeasurementsCache\n        this.measurementsCache.forEach((item) => {\n          this.itemSizeCache.set(item.key, item.size)\n        })\n      }\n\n      const min =\n        this.pendingMeasuredCacheIndexes.length > 0\n          ? Math.min(...this.pendingMeasuredCacheIndexes)\n          : 0\n      this.pendingMeasuredCacheIndexes = []\n\n      const measurements = this.measurementsCache.slice(0, min)\n\n      for (let i = min; i < count; i++) {\n        const key = getItemKey(i)\n\n        const furthestMeasurement =\n          this.options.lanes === 1\n            ? measurements[i - 1]\n            : this.getFurthestMeasurement(measurements, i)\n\n        const start = furthestMeasurement\n          ? furthestMeasurement.end + this.options.gap\n          : paddingStart + scrollMargin\n\n        const measuredSize = itemSizeCache.get(key)\n        const size =\n          typeof measuredSize === 'number'\n            ? measuredSize\n            : this.options.estimateSize(i)\n\n        const end = start + size\n\n        const lane = furthestMeasurement\n          ? furthestMeasurement.lane\n          : i % this.options.lanes\n\n        measurements[i] = {\n          index: i,\n          start,\n          size,\n          end,\n          key,\n          lane,\n        }\n      }\n\n      this.measurementsCache = measurements\n\n      return measurements\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getMeasurements',\n      debug: () => this.options.debug,\n    },\n  )\n\n  calculateRange = memo(\n    () => [this.getMeasurements(), this.getSize(), this.getScrollOffset()],\n    (measurements, outerSize, scrollOffset) => {\n      return (this.range =\n        measurements.length > 0 && outerSize > 0\n          ? calculateRange({\n              measurements,\n              outerSize,\n              scrollOffset,\n            })\n          : null)\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'calculateRange',\n      debug: () => this.options.debug,\n    },\n  )\n\n  private getIndexes = memo(\n    () => {\n      let startIndex: number | null = null\n      let endIndex: number | null = null\n      const range = this.calculateRange()\n      if (range) {\n        startIndex = range.startIndex\n        endIndex = range.endIndex\n      }\n      return [\n        this.options.rangeExtractor,\n        this.options.overscan,\n        this.options.count,\n        startIndex,\n        endIndex,\n      ]\n    },\n    (rangeExtractor, overscan, count, startIndex, endIndex) => {\n      return startIndex === null || endIndex === null\n        ? []\n        : rangeExtractor({\n            startIndex,\n            endIndex,\n            overscan,\n            count,\n          })\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  indexFromElement = (node: TItemElement) => {\n    const attributeName = this.options.indexAttribute\n    const indexStr = node.getAttribute(attributeName)\n\n    if (!indexStr) {\n      console.warn(\n        `Missing attribute name '${attributeName}={index}' on measured element.`,\n      )\n      return -1\n    }\n\n    return parseInt(indexStr, 10)\n  }\n\n  private _measureElement = (\n    node: TItemElement,\n    entry: ResizeObserverEntry | undefined,\n  ) => {\n    const index = this.indexFromElement(node)\n    const item = this.measurementsCache[index]\n    if (!item) {\n      return\n    }\n    const key = item.key\n    const prevNode = this.elementsCache.get(key)\n\n    if (prevNode !== node) {\n      if (prevNode) {\n        this.observer.unobserve(prevNode)\n      }\n      this.observer.observe(node)\n      this.elementsCache.set(key, node)\n    }\n\n    if (node.isConnected) {\n      this.resizeItem(index, this.options.measureElement(node, entry, this))\n    }\n  }\n\n  resizeItem = (index: number, size: number) => {\n    const item = this.measurementsCache[index]\n    if (!item) {\n      return\n    }\n    const itemSize = this.itemSizeCache.get(item.key) ?? item.size\n    const delta = size - itemSize\n\n    if (delta !== 0) {\n      if (\n        this.shouldAdjustScrollPositionOnItemSizeChange !== undefined\n          ? this.shouldAdjustScrollPositionOnItemSizeChange(item, delta, this)\n          : item.start < this.getScrollOffset() + this.scrollAdjustments\n      ) {\n        if (process.env.NODE_ENV !== 'production' && this.options.debug) {\n          console.info('correction', delta)\n        }\n\n        this._scrollToOffset(this.getScrollOffset(), {\n          adjustments: (this.scrollAdjustments += delta),\n          behavior: undefined,\n        })\n      }\n\n      this.pendingMeasuredCacheIndexes.push(item.index)\n      this.itemSizeCache = new Map(this.itemSizeCache.set(item.key, size))\n\n      this.notify(false)\n    }\n  }\n\n  measureElement = (node: TItemElement | null | undefined) => {\n    if (!node) {\n      this.elementsCache.forEach((cached, key) => {\n        if (!cached.isConnected) {\n          this.observer.unobserve(cached)\n          this.elementsCache.delete(key)\n        }\n      })\n      return\n    }\n\n    this._measureElement(node, undefined)\n  }\n\n  getVirtualItems = memo(\n    () => [this.getIndexes(), this.getMeasurements()],\n    (indexes, measurements) => {\n      const virtualItems: Array<VirtualItem> = []\n\n      for (let k = 0, len = indexes.length; k < len; k++) {\n        const i = indexes[k]!\n        const measurement = measurements[i]!\n\n        virtualItems.push(measurement)\n      }\n\n      return virtualItems\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getVirtualItems',\n      debug: () => this.options.debug,\n    },\n  )\n\n  getVirtualItemForOffset = (offset: number) => {\n    const measurements = this.getMeasurements()\n    if (measurements.length === 0) {\n      return undefined\n    }\n    return notUndefined(\n      measurements[\n        findNearestBinarySearch(\n          0,\n          measurements.length - 1,\n          (index: number) => notUndefined(measurements[index]).start,\n          offset,\n        )\n      ],\n    )\n  }\n\n  getOffsetForAlignment = (toOffset: number, align: ScrollAlignment) => {\n    const size = this.getSize()\n    const scrollOffset = this.getScrollOffset()\n\n    if (align === 'auto') {\n      if (toOffset >= scrollOffset + size) {\n        align = 'end'\n      }\n    }\n\n    if (align === 'end') {\n      toOffset -= size\n    }\n\n    const scrollSizeProp = this.options.horizontal\n      ? 'scrollWidth'\n      : 'scrollHeight'\n    const scrollSize = this.scrollElement\n      ? 'document' in this.scrollElement\n        ? this.scrollElement.document.documentElement[scrollSizeProp]\n        : this.scrollElement[scrollSizeProp]\n      : 0\n\n    const maxOffset = scrollSize - size\n\n    return Math.max(Math.min(maxOffset, toOffset), 0)\n  }\n\n  getOffsetForIndex = (index: number, align: ScrollAlignment = 'auto') => {\n    index = Math.max(0, Math.min(index, this.options.count - 1))\n\n    const item = this.measurementsCache[index]\n    if (!item) {\n      return undefined\n    }\n\n    const size = this.getSize()\n    const scrollOffset = this.getScrollOffset()\n\n    if (align === 'auto') {\n      if (item.end >= scrollOffset + size - this.options.scrollPaddingEnd) {\n        align = 'end'\n      } else if (item.start <= scrollOffset + this.options.scrollPaddingStart) {\n        align = 'start'\n      } else {\n        return [scrollOffset, align] as const\n      }\n    }\n\n    const centerOffset =\n      item.start - this.options.scrollPaddingStart + (item.size - size) / 2\n\n    switch (align) {\n      case 'center':\n        return [this.getOffsetForAlignment(centerOffset, align), align] as const\n      case 'end':\n        return [\n          this.getOffsetForAlignment(\n            item.end + this.options.scrollPaddingEnd,\n            align,\n          ),\n          align,\n        ] as const\n      default:\n        return [\n          this.getOffsetForAlignment(\n            item.start - this.options.scrollPaddingStart,\n            align,\n          ),\n          align,\n        ] as const\n    }\n  }\n\n  private isDynamicMode = () => this.elementsCache.size > 0\n\n  private cancelScrollToIndex = () => {\n    if (this.scrollToIndexTimeoutId !== null && this.targetWindow) {\n      this.targetWindow.clearTimeout(this.scrollToIndexTimeoutId)\n      this.scrollToIndexTimeoutId = null\n    }\n  }\n\n  scrollToOffset = (\n    toOffset: number,\n    { align = 'start', behavior }: ScrollToOffsetOptions = {},\n  ) => {\n    this.cancelScrollToIndex()\n\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    this._scrollToOffset(this.getOffsetForAlignment(toOffset, align), {\n      adjustments: undefined,\n      behavior,\n    })\n  }\n\n  scrollToIndex = (\n    index: number,\n    { align: initialAlign = 'auto', behavior }: ScrollToIndexOptions = {},\n  ) => {\n    index = Math.max(0, Math.min(index, this.options.count - 1))\n\n    this.cancelScrollToIndex()\n\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    const offsetAndAlign = this.getOffsetForIndex(index, initialAlign)\n    if (!offsetAndAlign) return\n\n    const [offset, align] = offsetAndAlign\n\n    this._scrollToOffset(offset, { adjustments: undefined, behavior })\n\n    if (behavior !== 'smooth' && this.isDynamicMode() && this.targetWindow) {\n      this.scrollToIndexTimeoutId = this.targetWindow.setTimeout(() => {\n        this.scrollToIndexTimeoutId = null\n\n        const elementInDOM = this.elementsCache.has(\n          this.options.getItemKey(index),\n        )\n\n        if (elementInDOM) {\n          const [latestOffset] = notUndefined(\n            this.getOffsetForIndex(index, align),\n          )\n\n          if (!approxEqual(latestOffset, this.getScrollOffset())) {\n            this.scrollToIndex(index, { align, behavior })\n          }\n        } else {\n          this.scrollToIndex(index, { align, behavior })\n        }\n      })\n    }\n  }\n\n  scrollBy = (delta: number, { behavior }: ScrollToOffsetOptions = {}) => {\n    this.cancelScrollToIndex()\n\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    this._scrollToOffset(this.getScrollOffset() + delta, {\n      adjustments: undefined,\n      behavior,\n    })\n  }\n\n  getTotalSize = () => {\n    const measurements = this.getMeasurements()\n\n    let end: number\n    // If there are no measurements, set the end to paddingStart\n    if (measurements.length === 0) {\n      end = this.options.paddingStart\n    } else {\n      // If lanes is 1, use the last measurement's end, otherwise find the maximum end value among all measurements\n      end =\n        this.options.lanes === 1\n          ? (measurements[measurements.length - 1]?.end ?? 0)\n          : Math.max(\n              ...measurements.slice(-this.options.lanes).map((m) => m.end),\n            )\n    }\n\n    return Math.max(\n      end - this.options.scrollMargin + this.options.paddingEnd,\n      0,\n    )\n  }\n\n  private _scrollToOffset = (\n    offset: number,\n    {\n      adjustments,\n      behavior,\n    }: {\n      adjustments: number | undefined\n      behavior: ScrollBehavior | undefined\n    },\n  ) => {\n    this.options.scrollToFn(offset, { behavior, adjustments }, this)\n  }\n\n  measure = () => {\n    this.itemSizeCache = new Map()\n    this.notify(false)\n  }\n}\n\nconst findNearestBinarySearch = (\n  low: number,\n  high: number,\n  getCurrentValue: (i: number) => number,\n  value: number,\n) => {\n  while (low <= high) {\n    const middle = ((low + high) / 2) | 0\n    const currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({\n  measurements,\n  outerSize,\n  scrollOffset,\n}: {\n  measurements: Array<VirtualItem>\n  outerSize: number\n  scrollOffset: number\n}) {\n  const count = measurements.length - 1\n  const getOffset = (index: number) => measurements[index]!.start\n\n  const startIndex = findNearestBinarySearch(0, count, getOffset, scrollOffset)\n  let endIndex = startIndex\n\n  while (\n    endIndex < count &&\n    measurements[endIndex]!.end < scrollOffset + outerSize\n  ) {\n    endIndex++\n  }\n\n  return { startIndex, endIndex }\n}\n", "import * as React from 'react'\nimport { flushSync } from 'react-dom'\nimport {\n  Virtualizer,\n  elementScroll,\n  observeElementOffset,\n  observeElementRect,\n  observeWindowOffset,\n  observeWindowRect,\n  windowScroll,\n} from '@tanstack/virtual-core'\nimport type { PartialKeys, VirtualizerOptions } from '@tanstack/virtual-core'\n\nexport * from '@tanstack/virtual-core'\n\nconst useIsomorphicLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nfunction useVirtualizerBase<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n>(\n  options: VirtualizerOptions<TScrollElement, TItemElement>,\n): Virtualizer<TScrollElement, TItemElement> {\n  const rerender = React.useReducer(() => ({}), {})[1]\n\n  const resolvedOptions: VirtualizerOptions<TScrollElement, TItemElement> = {\n    ...options,\n    onChange: (instance, sync) => {\n      if (sync) {\n        flushSync(rerender)\n      } else {\n        rerender()\n      }\n      options.onChange?.(instance, sync)\n    },\n  }\n\n  const [instance] = React.useState(\n    () => new Virtualizer<TScrollElement, TItemElement>(resolvedOptions),\n  )\n\n  instance.setOptions(resolvedOptions)\n\n  useIsomorphicLayoutEffect(() => {\n    return instance._didMount()\n  }, [])\n\n  useIsomorphicLayoutEffect(() => {\n    return instance._willUpdate()\n  })\n\n  return instance\n}\n\nexport function useVirtualizer<\n  TScrollElement extends Element,\n  TItemElement extends Element,\n>(\n  options: PartialKeys<\n    VirtualizerOptions<TScrollElement, TItemElement>,\n    'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n  >,\n): Virtualizer<TScrollElement, TItemElement> {\n  return useVirtualizerBase<TScrollElement, TItemElement>({\n    observeElementRect: observeElementRect,\n    observeElementOffset: observeElementOffset,\n    scrollToFn: elementScroll,\n    ...options,\n  })\n}\n\nexport function useWindowVirtualizer<TItemElement extends Element>(\n  options: PartialKeys<\n    VirtualizerOptions<Window, TItemElement>,\n    | 'getScrollElement'\n    | 'observeElementRect'\n    | 'observeElementOffset'\n    | 'scrollToFn'\n  >,\n): Virtualizer<Window, TItemElement> {\n  return useVirtualizerBase<Window, TItemElement>({\n    getScrollElement: () => (typeof document !== 'undefined' ? window : null),\n    observeElementRect: observeWindowRect,\n    observeElementOffset: observeWindowOffset,\n    scrollToFn: windowScroll,\n    initialOffset: () => (typeof document !== 'undefined' ? window.scrollY : 0),\n    ...options,\n  })\n}\n", "\"use client\";\nimport {\n  useListbox\n} from \"./chunk-MZOWMNSQ.mjs\";\nimport {\n  virtualized_listbox_default\n} from \"./chunk-7UIGGLV2.mjs\";\nimport {\n  listbox_section_default\n} from \"./chunk-BXSPTCK3.mjs\";\nimport {\n  listbox_item_default\n} from \"./chunk-4QJLEUWX.mjs\";\n\n// src/listbox.tsx\nimport { forwardRef } from \"@heroui/system\";\nimport { mergeProps } from \"@heroui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Listbox = forwardRef(function Listbox2(props, ref) {\n  const { isVirtualized, ...restProps } = props;\n  const useListboxProps = useListbox({ ...restProps, ref });\n  const {\n    Component,\n    state,\n    color,\n    variant,\n    itemClasses,\n    getBaseProps,\n    topContent,\n    bottomContent,\n    hideEmptyContent,\n    hideSelectedIcon,\n    shouldHighlightOnFocus,\n    disableAnimation,\n    getEmptyContentProps,\n    getListProps\n  } = useListboxProps;\n  if (isVirtualized) {\n    return /* @__PURE__ */ jsx(virtualized_listbox_default, { ...props, ...useListboxProps });\n  }\n  const content = /* @__PURE__ */ jsxs(Component, { ...getListProps(), children: [\n    !state.collection.size && !hideEmptyContent && /* @__PURE__ */ jsx(\"li\", { children: /* @__PURE__ */ jsx(\"div\", { ...getEmptyContentProps() }) }),\n    [...state.collection].map((item) => {\n      var _a;\n      const itemProps = {\n        color,\n        item,\n        state,\n        variant,\n        disableAnimation,\n        hideSelectedIcon,\n        ...item.props\n      };\n      if (item.type === \"section\") {\n        return /* @__PURE__ */ jsx(listbox_section_default, { ...itemProps, itemClasses }, item.key);\n      }\n      let listboxItem = /* @__PURE__ */ jsx(\n        listbox_item_default,\n        {\n          ...itemProps,\n          classNames: mergeProps(itemClasses, (_a = item.props) == null ? void 0 : _a.classNames),\n          shouldHighlightOnFocus\n        },\n        item.key\n      );\n      if (item.wrapper) {\n        listboxItem = item.wrapper(listboxItem);\n      }\n      return listboxItem;\n    })\n  ] });\n  return /* @__PURE__ */ jsxs(\"div\", { ...getBaseProps(), children: [\n    topContent,\n    content,\n    bottomContent\n  ] });\n});\nvar listbox_default = Listbox;\n\nexport {\n  listbox_default\n};\n", "\"use client\";\nimport {\n  HiddenSelect\n} from \"./chunk-EYCVA6TZ.mjs\";\nimport {\n  useSelect\n} from \"./chunk-XAZU4BXN.mjs\";\n\n// src/select.tsx\nimport { Listbox } from \"@heroui/listbox\";\nimport { FreeSoloPopover } from \"@heroui/popover\";\nimport { ChevronDownIcon, CloseFilledIcon } from \"@heroui/shared-icons\";\nimport { Spinner } from \"@heroui/spinner\";\nimport { useMemo } from \"react\";\nimport { forwardRef } from \"@heroui/system\";\nimport { ScrollShadow } from \"@heroui/scroll-shadow\";\nimport { cloneElement } from \"react\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Select = forwardRef(function Select2(props, ref) {\n  var _a;\n  const {\n    Component,\n    state,\n    label,\n    hasHelper,\n    isLoading,\n    triggerRef,\n    selectorIcon = /* @__PURE__ */ jsx(ChevronDownIcon, {}),\n    description,\n    errorMessage,\n    isInvalid,\n    startContent,\n    endContent,\n    placeholder,\n    renderValue,\n    shouldLabelBeOutside,\n    disableAnimation,\n    getBaseProps,\n    getLabelProps,\n    getTriggerProps,\n    getValueProps,\n    getListboxProps,\n    getPopoverProps,\n    getSpinnerProps,\n    getMainWrapperProps,\n    getInnerWrapperProps,\n    getHiddenSelectProps,\n    getHelperWrapperProps,\n    getListboxWrapperProps,\n    getDescriptionProps,\n    getErrorMessageProps,\n    getSelectorIconProps,\n    isClearable,\n    getClearButtonProps,\n    getEndWrapperProps,\n    getEndContentProps\n  } = useSelect({ ...props, ref });\n  const labelContent = label ? /* @__PURE__ */ jsx(\"label\", { ...getLabelProps(), children: label }) : null;\n  const clonedIcon = cloneElement(selectorIcon, getSelectorIconProps());\n  const clearButton = useMemo(() => {\n    var _a2;\n    if (isClearable && ((_a2 = state.selectedItems) == null ? void 0 : _a2.length)) {\n      return /* @__PURE__ */ jsx(\"span\", { ...getClearButtonProps(), children: /* @__PURE__ */ jsx(CloseFilledIcon, {}) });\n    }\n    return null;\n  }, [isClearable, getClearButtonProps, (_a = state.selectedItems) == null ? void 0 : _a.length]);\n  const end = useMemo(() => {\n    if (clearButton) {\n      return /* @__PURE__ */ jsxs(\"div\", { ...getEndWrapperProps(), children: [\n        clearButton,\n        endContent && /* @__PURE__ */ jsx(\"span\", { ...getEndContentProps(), children: endContent })\n      ] });\n    }\n    return endContent && /* @__PURE__ */ jsx(\"span\", { ...getEndContentProps(), children: endContent });\n  }, [clearButton, endContent, getEndWrapperProps, getEndContentProps]);\n  const helperWrapper = useMemo(() => {\n    const shouldShowError = isInvalid && errorMessage;\n    const hasContent = shouldShowError || description;\n    if (!hasHelper || !hasContent) return null;\n    return /* @__PURE__ */ jsx(\"div\", { ...getHelperWrapperProps(), children: shouldShowError ? /* @__PURE__ */ jsx(\"div\", { ...getErrorMessageProps(), children: errorMessage }) : /* @__PURE__ */ jsx(\"div\", { ...getDescriptionProps(), children: description }) });\n  }, [\n    hasHelper,\n    isInvalid,\n    errorMessage,\n    description,\n    getHelperWrapperProps,\n    getErrorMessageProps,\n    getDescriptionProps\n  ]);\n  const renderSelectedItem = useMemo(() => {\n    var _a2;\n    if (!((_a2 = state.selectedItems) == null ? void 0 : _a2.length)) return placeholder;\n    if (renderValue && typeof renderValue === \"function\") {\n      const mappedItems = [...state.selectedItems].map((item) => ({\n        key: item.key,\n        data: item.value,\n        type: item.type,\n        props: item.props,\n        textValue: item.textValue,\n        rendered: item.rendered,\n        \"aria-label\": item[\"aria-label\"]\n      }));\n      return renderValue(mappedItems);\n    }\n    return state.selectedItems.map((item) => item.textValue).join(\", \");\n  }, [state.selectedItems, renderValue, placeholder]);\n  const renderIndicator = useMemo(() => {\n    if (isLoading) {\n      return /* @__PURE__ */ jsx(Spinner, { ...getSpinnerProps() });\n    }\n    return clonedIcon;\n  }, [isLoading, clonedIcon, getSpinnerProps]);\n  const popoverContent = useMemo(\n    () => state.isOpen ? /* @__PURE__ */ jsx(FreeSoloPopover, { ...getPopoverProps(), children: /* @__PURE__ */ jsx(ScrollShadow, { ...getListboxWrapperProps(), children: /* @__PURE__ */ jsx(Listbox, { ...getListboxProps() }) }) }) : null,\n    [state.isOpen, getPopoverProps, state, triggerRef, getListboxWrapperProps, getListboxProps]\n  );\n  return /* @__PURE__ */ jsxs(\"div\", { ...getBaseProps(), children: [\n    /* @__PURE__ */ jsx(HiddenSelect, { ...getHiddenSelectProps() }),\n    shouldLabelBeOutside ? labelContent : null,\n    /* @__PURE__ */ jsxs(\"div\", { ...getMainWrapperProps(), children: [\n      /* @__PURE__ */ jsxs(Component, { ...getTriggerProps(), children: [\n        !shouldLabelBeOutside ? labelContent : null,\n        /* @__PURE__ */ jsxs(\"div\", { ...getInnerWrapperProps(), children: [\n          startContent,\n          /* @__PURE__ */ jsx(\"span\", { ...getValueProps(), children: renderSelectedItem }),\n          endContent && state.selectedItems && /* @__PURE__ */ jsx(VisuallyHidden, { elementType: \"span\", children: \",\" }),\n          end\n        ] }),\n        renderIndicator\n      ] }),\n      helperWrapper\n    ] }),\n    disableAnimation ? popoverContent : /* @__PURE__ */ jsx(AnimatePresence, { children: popoverContent })\n  ] });\n});\nvar select_default = Select;\n\nexport {\n  select_default\n};\n", "// src/index.ts\nimport { capitalize } from \"@heroui/shared-utils\";\nimport { useEffect, useRef } from \"react\";\nfunction useDataScrollOverflow(props = {}) {\n  const {\n    domRef,\n    isEnabled = true,\n    overflowCheck = \"vertical\",\n    visibility = \"auto\",\n    offset = 0,\n    onVisibilityChange,\n    updateDeps = []\n  } = props;\n  const visibleRef = useRef(visibility);\n  useEffect(() => {\n    const el = domRef == null ? void 0 : domRef.current;\n    if (!el || !isEnabled) return;\n    const setAttributes = (direction, hasBefore, hasAfter, prefix, suffix) => {\n      if (visibility === \"auto\") {\n        const both = `${prefix}${capitalize(suffix)}Scroll`;\n        if (hasBefore && hasAfter) {\n          el.dataset[both] = \"true\";\n          el.removeAttribute(`data-${prefix}-scroll`);\n          el.removeAttribute(`data-${suffix}-scroll`);\n        } else {\n          el.dataset[`${prefix}Scroll`] = hasBefore.toString();\n          el.dataset[`${suffix}Scroll`] = hasAfter.toString();\n          el.removeAttribute(`data-${prefix}-${suffix}-scroll`);\n        }\n      } else {\n        const next = hasBefore && hasAfter ? \"both\" : hasBefore ? prefix : hasAfter ? suffix : \"none\";\n        if (next !== visibleRef.current) {\n          onVisibilityChange == null ? void 0 : onVisibilityChange(next);\n          visibleRef.current = next;\n        }\n      }\n    };\n    const checkOverflow = () => {\n      var _a, _b;\n      const directions = [\n        { type: \"vertical\", prefix: \"top\", suffix: \"bottom\" },\n        { type: \"horizontal\", prefix: \"left\", suffix: \"right\" }\n      ];\n      const listbox = el.querySelector('ul[data-slot=\"list\"]');\n      const scrollHeight = +((_a = listbox == null ? void 0 : listbox.getAttribute(\"data-virtual-scroll-height\")) != null ? _a : el.scrollHeight);\n      const scrollTop = +((_b = listbox == null ? void 0 : listbox.getAttribute(\"data-virtual-scroll-top\")) != null ? _b : el.scrollTop);\n      for (const { type, prefix, suffix } of directions) {\n        if (overflowCheck === type || overflowCheck === \"both\") {\n          const hasBefore = type === \"vertical\" ? scrollTop > offset : el.scrollLeft > offset;\n          const hasAfter = type === \"vertical\" ? scrollTop + el.clientHeight + offset < scrollHeight : el.scrollLeft + el.clientWidth + offset < el.scrollWidth;\n          setAttributes(type, hasBefore, hasAfter, prefix, suffix);\n        }\n      }\n    };\n    const clearOverflow = () => {\n      [\"top\", \"bottom\", \"top-bottom\", \"left\", \"right\", \"left-right\"].forEach((attr) => {\n        el.removeAttribute(`data-${attr}-scroll`);\n      });\n    };\n    checkOverflow();\n    el.addEventListener(\"scroll\", checkOverflow, true);\n    if (visibility !== \"auto\") {\n      clearOverflow();\n      if (visibility === \"both\") {\n        el.dataset.topBottomScroll = String(overflowCheck === \"vertical\");\n        el.dataset.leftRightScroll = String(overflowCheck === \"horizontal\");\n      } else {\n        el.dataset.topBottomScroll = \"false\";\n        el.dataset.leftRightScroll = \"false\";\n        [\"top\", \"bottom\", \"left\", \"right\"].forEach((attr) => {\n          el.dataset[`${attr}Scroll`] = String(visibility === attr);\n        });\n      }\n    }\n    return () => {\n      el.removeEventListener(\"scroll\", checkOverflow, true);\n      clearOverflow();\n    };\n  }, [...updateDeps, isEnabled, visibility, overflowCheck, onVisibilityChange, domRef]);\n}\nexport {\n  useDataScrollOverflow\n};\n", "\"use client\";\n\n// src/use-scroll-shadow.ts\nimport { mapPropsVariants } from \"@heroui/system\";\nimport { scrollShadow } from \"@heroui/theme\";\nimport { useDOMRef } from \"@heroui/react-utils\";\nimport { useDataScrollOverflow } from \"@heroui/use-data-scroll-overflow\";\nimport { useMemo } from \"react\";\nimport { objectToDeps } from \"@heroui/shared-utils\";\nfunction useScrollShadow(originalProps) {\n  var _a;\n  const [props, variantProps] = mapPropsVariants(originalProps, scrollShadow.variantKeys);\n  const {\n    ref,\n    as,\n    children,\n    className,\n    style,\n    size = 40,\n    offset = 0,\n    visibility = \"auto\",\n    isEnabled = true,\n    onVisibilityChange,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  useDataScrollOverflow({\n    domRef,\n    offset,\n    visibility,\n    isEnabled,\n    onVisibilityChange,\n    updateDeps: [children],\n    overflowCheck: (_a = originalProps.orientation) != null ? _a : \"vertical\"\n  });\n  const styles = useMemo(\n    () => scrollShadow({\n      ...variantProps,\n      className\n    }),\n    [objectToDeps(variantProps), className]\n  );\n  const getBaseProps = (props2 = {}) => {\n    var _a2;\n    return {\n      ref: domRef,\n      className: styles,\n      \"data-orientation\": (_a2 = originalProps.orientation) != null ? _a2 : \"vertical\",\n      style: {\n        \"--scroll-shadow-size\": `${size}px`,\n        ...style,\n        ...props2.style\n      },\n      ...otherProps,\n      ...props2\n    };\n  };\n  return { Component, styles, domRef, children, getBaseProps };\n}\n\nexport {\n  useScrollShadow\n};\n", "\"use client\";\nimport {\n  useScrollShadow\n} from \"./chunk-XKHEX3UH.mjs\";\n\n// src/scroll-shadow.tsx\nimport { forwardRef } from \"@heroui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ScrollShadow = forwardRef((props, ref) => {\n  const { Component, children, getBaseProps } = useScrollShadow({ ...props, ref });\n  return /* @__PURE__ */ jsx(Component, { ...getBaseProps(), children });\n});\nScrollShadow.displayName = \"HeroUI.ScrollShadow\";\nvar scroll_shadow_default = ScrollShadow;\n\nexport {\n  scroll_shadow_default\n};\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "$6tM1y$useRef", "$6tM1y$useState", "$6tM1y$useMemo", "$6tM1y$useEffect", "$d5vlZ$useMemo", "$d5vlZ$useCallback", "$d5vlZ$useRef", "$d5vlZ$useEffect", "$8bn9m$useState", "focusStrategy", "import_react", "$dAE4Y$useRef", "$3H3GQ$flushSync", "$3H3GQ$useRef", "$3H3GQ$useEffect", "itemProps", "$581M0$useEffect", "$581M0$useRef", "key", "key", "menu", "$1aJk5$useMemo", "import_react", "import_react", "React", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "opts", "instance", "import_react", "import_jsx_runtime", "useRef2", "useMemo2", "import_jsx_runtime", "import_react", "import_react", "useDataScrollOverflow", "import_react", "useScrollShadow", "useDataScrollOverflow", "import_jsx_runtime", "useScrollShadow", "import_react", "import_jsx_runtime"]
}
